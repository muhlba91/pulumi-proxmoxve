# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

import types

__config__ = pulumi.Config('proxmoxve')


class _ExportableConfig(types.ModuleType):
    @_builtins.property
    def api_token(self) -> Optional[str]:
        """
        The API token for the Proxmox VE API.
        """
        return __config__.get('apiToken')

    @_builtins.property
    def auth_ticket(self) -> Optional[str]:
        """
        The pre-authenticated Ticket for the Proxmox VE API.
        """
        return __config__.get('authTicket')

    @_builtins.property
    def csrf_prevention_token(self) -> Optional[str]:
        """
        The pre-authenticated CSRF Prevention Token for the Proxmox VE API.
        """
        return __config__.get('csrfPreventionToken')

    @_builtins.property
    def endpoint(self) -> Optional[str]:
        """
        The endpoint for the Proxmox VE API.
        """
        return __config__.get('endpoint')

    @_builtins.property
    def insecure(self) -> Optional[bool]:
        """
        Whether to skip the TLS verification step.
        """
        return __config__.get_bool('insecure')

    @_builtins.property
    def min_tls(self) -> Optional[str]:
        """
        The minimum required TLS version for API calls.Supported values: `1.0|1.1|1.2|1.3`. Defaults to `1.3`.
        """
        return __config__.get('minTls')

    @_builtins.property
    def otp(self) -> Optional[str]:
        """
        The one-time password for the Proxmox VE API.
        """
        return __config__.get('otp')

    @_builtins.property
    def password(self) -> Optional[str]:
        """
        The password for the Proxmox VE API.
        """
        return __config__.get('password')

    @_builtins.property
    def random_vm_id_end(self) -> Optional[int]:
        """
        The ending number for random VM / Container IDs.
        """
        return __config__.get_int('randomVmIdEnd')

    @_builtins.property
    def random_vm_id_start(self) -> Optional[int]:
        """
        The starting number for random VM / Container IDs.
        """
        return __config__.get_int('randomVmIdStart')

    @_builtins.property
    def random_vm_ids(self) -> Optional[bool]:
        """
        Whether to generate random VM / Container IDs.
        """
        return __config__.get_bool('randomVmIds')

    @_builtins.property
    def ssh(self) -> Optional[str]:
        """
        The SSH configuration for the Proxmox nodes.
        """
        return __config__.get('ssh')

    @_builtins.property
    def tmp_dir(self) -> Optional[str]:
        """
        The alternative temporary directory.
        """
        return __config__.get('tmpDir')

    @_builtins.property
    def username(self) -> Optional[str]:
        """
        The username for the Proxmox VE API.
        """
        return __config__.get('username')

