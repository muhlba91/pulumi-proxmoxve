# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'HostsEntry',
    'GetHostsEntryResult',
]

@pulumi.output_type
class HostsEntry(dict):
    def __init__(__self__, *,
                 address: str,
                 hostnames: Sequence[str]):
        """
        :param str address: The IP address.
        :param Sequence[str] hostnames: The hostnames.
        """
        HostsEntry._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            address=address,
            hostnames=hostnames,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             address: str,
             hostnames: Sequence[str],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("address", address)
        _setter("hostnames", hostnames)

    @property
    @pulumi.getter
    def address(self) -> str:
        """
        The IP address.
        """
        return pulumi.get(self, "address")

    @property
    @pulumi.getter
    def hostnames(self) -> Sequence[str]:
        """
        The hostnames.
        """
        return pulumi.get(self, "hostnames")


@pulumi.output_type
class GetHostsEntryResult(dict):
    def __init__(__self__, *,
                 address: str,
                 hostnames: Sequence[str]):
        """
        :param Sequence[str] hostnames: The hostnames associated with each of the IP addresses.
        """
        GetHostsEntryResult._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            address=address,
            hostnames=hostnames,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             address: str,
             hostnames: Sequence[str],
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("address", address)
        _setter("hostnames", hostnames)

    @property
    @pulumi.getter
    def address(self) -> str:
        return pulumi.get(self, "address")

    @property
    @pulumi.getter
    def hostnames(self) -> Sequence[str]:
        """
        The hostnames associated with each of the IP addresses.
        """
        return pulumi.get(self, "hostnames")


