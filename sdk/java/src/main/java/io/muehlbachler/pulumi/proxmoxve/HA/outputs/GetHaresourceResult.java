// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.muehlbachler.pulumi.proxmoxve.HA.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetHAResourceResult {
    /**
     * @return The comment associated with this resource.
     * 
     */
    private String comment;
    /**
     * @return The identifier of the High Availability group this resource is a member of.
     * 
     */
    private String group;
    /**
     * @return The unique identifier of this resource.
     * 
     */
    private String id;
    /**
     * @return The maximal number of relocation attempts.
     * 
     */
    private Integer maxRelocate;
    /**
     * @return The maximal number of restart attempts.
     * 
     */
    private Integer maxRestart;
    /**
     * @return The identifier of the Proxmox HA resource to read.
     * 
     */
    private String resourceId;
    /**
     * @return The desired state of the resource.
     * 
     */
    private String state;
    /**
     * @return The type of High Availability resource (`vm` or `ct`).
     * 
     */
    private String type;

    private GetHAResourceResult() {}
    /**
     * @return The comment associated with this resource.
     * 
     */
    public String comment() {
        return this.comment;
    }
    /**
     * @return The identifier of the High Availability group this resource is a member of.
     * 
     */
    public String group() {
        return this.group;
    }
    /**
     * @return The unique identifier of this resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The maximal number of relocation attempts.
     * 
     */
    public Integer maxRelocate() {
        return this.maxRelocate;
    }
    /**
     * @return The maximal number of restart attempts.
     * 
     */
    public Integer maxRestart() {
        return this.maxRestart;
    }
    /**
     * @return The identifier of the Proxmox HA resource to read.
     * 
     */
    public String resourceId() {
        return this.resourceId;
    }
    /**
     * @return The desired state of the resource.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The type of High Availability resource (`vm` or `ct`).
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetHAResourceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String comment;
        private String group;
        private String id;
        private Integer maxRelocate;
        private Integer maxRestart;
        private String resourceId;
        private String state;
        private String type;
        public Builder() {}
        public Builder(GetHAResourceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.comment = defaults.comment;
    	      this.group = defaults.group;
    	      this.id = defaults.id;
    	      this.maxRelocate = defaults.maxRelocate;
    	      this.maxRestart = defaults.maxRestart;
    	      this.resourceId = defaults.resourceId;
    	      this.state = defaults.state;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder comment(String comment) {
            if (comment == null) {
              throw new MissingRequiredPropertyException("GetHAResourceResult", "comment");
            }
            this.comment = comment;
            return this;
        }
        @CustomType.Setter
        public Builder group(String group) {
            if (group == null) {
              throw new MissingRequiredPropertyException("GetHAResourceResult", "group");
            }
            this.group = group;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetHAResourceResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder maxRelocate(Integer maxRelocate) {
            if (maxRelocate == null) {
              throw new MissingRequiredPropertyException("GetHAResourceResult", "maxRelocate");
            }
            this.maxRelocate = maxRelocate;
            return this;
        }
        @CustomType.Setter
        public Builder maxRestart(Integer maxRestart) {
            if (maxRestart == null) {
              throw new MissingRequiredPropertyException("GetHAResourceResult", "maxRestart");
            }
            this.maxRestart = maxRestart;
            return this;
        }
        @CustomType.Setter
        public Builder resourceId(String resourceId) {
            if (resourceId == null) {
              throw new MissingRequiredPropertyException("GetHAResourceResult", "resourceId");
            }
            this.resourceId = resourceId;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetHAResourceResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetHAResourceResult", "type");
            }
            this.type = type;
            return this;
        }
        public GetHAResourceResult build() {
            final var _resultValue = new GetHAResourceResult();
            _resultValue.comment = comment;
            _resultValue.group = group;
            _resultValue.id = id;
            _resultValue.maxRelocate = maxRelocate;
            _resultValue.maxRestart = maxRestart;
            _resultValue.resourceId = resourceId;
            _resultValue.state = state;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
