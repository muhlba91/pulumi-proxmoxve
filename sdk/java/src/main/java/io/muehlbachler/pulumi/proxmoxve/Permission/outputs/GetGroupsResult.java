// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.muehlbachler.pulumi.proxmoxve.Permission.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetGroupsResult {
    /**
     * @return The group comments.
     * 
     */
    private List<String> comments;
    /**
     * @return The group identifiers.
     * 
     */
    private List<String> groupIds;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;

    private GetGroupsResult() {}
    /**
     * @return The group comments.
     * 
     */
    public List<String> comments() {
        return this.comments;
    }
    /**
     * @return The group identifiers.
     * 
     */
    public List<String> groupIds() {
        return this.groupIds;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGroupsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> comments;
        private List<String> groupIds;
        private String id;
        public Builder() {}
        public Builder(GetGroupsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.comments = defaults.comments;
    	      this.groupIds = defaults.groupIds;
    	      this.id = defaults.id;
        }

        @CustomType.Setter
        public Builder comments(List<String> comments) {
            this.comments = Objects.requireNonNull(comments);
            return this;
        }
        public Builder comments(String... comments) {
            return comments(List.of(comments));
        }
        @CustomType.Setter
        public Builder groupIds(List<String> groupIds) {
            this.groupIds = Objects.requireNonNull(groupIds);
            return this;
        }
        public Builder groupIds(String... groupIds) {
            return groupIds(List.of(groupIds));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public GetGroupsResult build() {
            final var o = new GetGroupsResult();
            o.comments = comments;
            o.groupIds = groupIds;
            o.id = id;
            return o;
        }
    }
}
