// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.muehlbachler.pulumi.proxmoxve.Hardware_mapping;

import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.deployment.InvokeOutputOptions;
import io.muehlbachler.pulumi.proxmoxve.Hardware_mapping.inputs.GetDirArgs;
import io.muehlbachler.pulumi.proxmoxve.Hardware_mapping.inputs.GetDirPlainArgs;
import io.muehlbachler.pulumi.proxmoxve.Hardware_mapping.inputs.GetPciArgs;
import io.muehlbachler.pulumi.proxmoxve.Hardware_mapping.inputs.GetPciPlainArgs;
import io.muehlbachler.pulumi.proxmoxve.Hardware_mapping.inputs.GetUsbArgs;
import io.muehlbachler.pulumi.proxmoxve.Hardware_mapping.inputs.GetUsbPlainArgs;
import io.muehlbachler.pulumi.proxmoxve.Hardware_mapping.outputs.GetDirResult;
import io.muehlbachler.pulumi.proxmoxve.Hardware_mapping.outputs.GetPciResult;
import io.muehlbachler.pulumi.proxmoxve.Hardware_mapping.outputs.GetUsbResult;
import io.muehlbachler.pulumi.proxmoxve.Utilities;
import java.util.concurrent.CompletableFuture;

public final class Hardware_mappingFunctions {
    /**
     * Retrieves a directory mapping from a Proxmox VE cluster.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.proxmoxve.Hardware_mapping.Hardware_mappingFunctions;
     * import com.pulumi.proxmoxve.Hardware.inputs.GetDirArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = Hardware_mappingFunctions.getDir(GetDirArgs.builder()
     *             .name("example")
     *             .build());
     * 
     *         ctx.export("dataProxmoxVirtualEnvironmentHardwareMappingDir", example);
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDirResult> getDir(GetDirArgs args) {
        return getDir(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a directory mapping from a Proxmox VE cluster.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.proxmoxve.Hardware_mapping.Hardware_mappingFunctions;
     * import com.pulumi.proxmoxve.Hardware.inputs.GetDirArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = Hardware_mappingFunctions.getDir(GetDirArgs.builder()
     *             .name("example")
     *             .build());
     * 
     *         ctx.export("dataProxmoxVirtualEnvironmentHardwareMappingDir", example);
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDirResult> getDirPlain(GetDirPlainArgs args) {
        return getDirPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a directory mapping from a Proxmox VE cluster.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.proxmoxve.Hardware_mapping.Hardware_mappingFunctions;
     * import com.pulumi.proxmoxve.Hardware.inputs.GetDirArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = Hardware_mappingFunctions.getDir(GetDirArgs.builder()
     *             .name("example")
     *             .build());
     * 
     *         ctx.export("dataProxmoxVirtualEnvironmentHardwareMappingDir", example);
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDirResult> getDir(GetDirArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("proxmoxve:Hardware/mapping/getDir:getDir", TypeShape.of(GetDirResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a directory mapping from a Proxmox VE cluster.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.proxmoxve.Hardware_mapping.Hardware_mappingFunctions;
     * import com.pulumi.proxmoxve.Hardware.inputs.GetDirArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = Hardware_mappingFunctions.getDir(GetDirArgs.builder()
     *             .name("example")
     *             .build());
     * 
     *         ctx.export("dataProxmoxVirtualEnvironmentHardwareMappingDir", example);
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDirResult> getDir(GetDirArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("proxmoxve:Hardware/mapping/getDir:getDir", TypeShape.of(GetDirResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a directory mapping from a Proxmox VE cluster.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.proxmoxve.Hardware_mapping.Hardware_mappingFunctions;
     * import com.pulumi.proxmoxve.Hardware.inputs.GetDirArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = Hardware_mappingFunctions.getDir(GetDirArgs.builder()
     *             .name("example")
     *             .build());
     * 
     *         ctx.export("dataProxmoxVirtualEnvironmentHardwareMappingDir", example);
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDirResult> getDirPlain(GetDirPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("proxmoxve:Hardware/mapping/getDir:getDir", TypeShape.of(GetDirResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a PCI hardware mapping from a Proxmox VE cluster.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.proxmoxve.Hardware_mapping.Hardware_mappingFunctions;
     * import com.pulumi.proxmoxve.Hardware.inputs.GetPciArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = Hardware_mappingFunctions.getPci(GetPciArgs.builder()
     *             .name("example")
     *             .build());
     * 
     *         ctx.export("dataProxmoxVirtualEnvironmentHardwareMappingPci", example);
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPciResult> getPci(GetPciArgs args) {
        return getPci(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a PCI hardware mapping from a Proxmox VE cluster.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.proxmoxve.Hardware_mapping.Hardware_mappingFunctions;
     * import com.pulumi.proxmoxve.Hardware.inputs.GetPciArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = Hardware_mappingFunctions.getPci(GetPciArgs.builder()
     *             .name("example")
     *             .build());
     * 
     *         ctx.export("dataProxmoxVirtualEnvironmentHardwareMappingPci", example);
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPciResult> getPciPlain(GetPciPlainArgs args) {
        return getPciPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a PCI hardware mapping from a Proxmox VE cluster.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.proxmoxve.Hardware_mapping.Hardware_mappingFunctions;
     * import com.pulumi.proxmoxve.Hardware.inputs.GetPciArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = Hardware_mappingFunctions.getPci(GetPciArgs.builder()
     *             .name("example")
     *             .build());
     * 
     *         ctx.export("dataProxmoxVirtualEnvironmentHardwareMappingPci", example);
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPciResult> getPci(GetPciArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("proxmoxve:Hardware/mapping/getPci:getPci", TypeShape.of(GetPciResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a PCI hardware mapping from a Proxmox VE cluster.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.proxmoxve.Hardware_mapping.Hardware_mappingFunctions;
     * import com.pulumi.proxmoxve.Hardware.inputs.GetPciArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = Hardware_mappingFunctions.getPci(GetPciArgs.builder()
     *             .name("example")
     *             .build());
     * 
     *         ctx.export("dataProxmoxVirtualEnvironmentHardwareMappingPci", example);
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPciResult> getPci(GetPciArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("proxmoxve:Hardware/mapping/getPci:getPci", TypeShape.of(GetPciResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a PCI hardware mapping from a Proxmox VE cluster.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.proxmoxve.Hardware_mapping.Hardware_mappingFunctions;
     * import com.pulumi.proxmoxve.Hardware.inputs.GetPciArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = Hardware_mappingFunctions.getPci(GetPciArgs.builder()
     *             .name("example")
     *             .build());
     * 
     *         ctx.export("dataProxmoxVirtualEnvironmentHardwareMappingPci", example);
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPciResult> getPciPlain(GetPciPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("proxmoxve:Hardware/mapping/getPci:getPci", TypeShape.of(GetPciResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a USB hardware mapping from a Proxmox VE cluster.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.proxmoxve.Hardware_mapping.Hardware_mappingFunctions;
     * import com.pulumi.proxmoxve.Hardware.inputs.GetUsbArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = Hardware_mappingFunctions.getUsb(GetUsbArgs.builder()
     *             .name("example")
     *             .build());
     * 
     *         ctx.export("dataProxmoxVirtualEnvironmentHardwareMappingUsb", example);
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUsbResult> getUsb(GetUsbArgs args) {
        return getUsb(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a USB hardware mapping from a Proxmox VE cluster.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.proxmoxve.Hardware_mapping.Hardware_mappingFunctions;
     * import com.pulumi.proxmoxve.Hardware.inputs.GetUsbArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = Hardware_mappingFunctions.getUsb(GetUsbArgs.builder()
     *             .name("example")
     *             .build());
     * 
     *         ctx.export("dataProxmoxVirtualEnvironmentHardwareMappingUsb", example);
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetUsbResult> getUsbPlain(GetUsbPlainArgs args) {
        return getUsbPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a USB hardware mapping from a Proxmox VE cluster.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.proxmoxve.Hardware_mapping.Hardware_mappingFunctions;
     * import com.pulumi.proxmoxve.Hardware.inputs.GetUsbArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = Hardware_mappingFunctions.getUsb(GetUsbArgs.builder()
     *             .name("example")
     *             .build());
     * 
     *         ctx.export("dataProxmoxVirtualEnvironmentHardwareMappingUsb", example);
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUsbResult> getUsb(GetUsbArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("proxmoxve:Hardware/mapping/getUsb:getUsb", TypeShape.of(GetUsbResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a USB hardware mapping from a Proxmox VE cluster.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.proxmoxve.Hardware_mapping.Hardware_mappingFunctions;
     * import com.pulumi.proxmoxve.Hardware.inputs.GetUsbArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = Hardware_mappingFunctions.getUsb(GetUsbArgs.builder()
     *             .name("example")
     *             .build());
     * 
     *         ctx.export("dataProxmoxVirtualEnvironmentHardwareMappingUsb", example);
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUsbResult> getUsb(GetUsbArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("proxmoxve:Hardware/mapping/getUsb:getUsb", TypeShape.of(GetUsbResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a USB hardware mapping from a Proxmox VE cluster.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.proxmoxve.Hardware_mapping.Hardware_mappingFunctions;
     * import com.pulumi.proxmoxve.Hardware.inputs.GetUsbArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = Hardware_mappingFunctions.getUsb(GetUsbArgs.builder()
     *             .name("example")
     *             .build());
     * 
     *         ctx.export("dataProxmoxVirtualEnvironmentHardwareMappingUsb", example);
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetUsbResult> getUsbPlain(GetUsbPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("proxmoxve:Hardware/mapping/getUsb:getUsb", TypeShape.of(GetUsbResult.class), args, Utilities.withVersion(options));
    }
}
