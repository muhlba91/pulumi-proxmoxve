// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.muehlbachler.pulumi.proxmoxve.Storage.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FileSourceFileArgs extends com.pulumi.resources.ResourceArgs {

    public static final FileSourceFileArgs Empty = new FileSourceFileArgs();

    @Import(name="changed")
    private @Nullable Output<Boolean> changed;

    public Optional<Output<Boolean>> changed() {
        return Optional.ofNullable(this.changed);
    }

    @Import(name="checksum")
    private @Nullable Output<String> checksum;

    public Optional<Output<String>> checksum() {
        return Optional.ofNullable(this.checksum);
    }

    @Import(name="fileName")
    private @Nullable Output<String> fileName;

    public Optional<Output<String>> fileName() {
        return Optional.ofNullable(this.fileName);
    }

    @Import(name="insecure")
    private @Nullable Output<Boolean> insecure;

    public Optional<Output<Boolean>> insecure() {
        return Optional.ofNullable(this.insecure);
    }

    @Import(name="path", required=true)
    private Output<String> path;

    public Output<String> path() {
        return this.path;
    }

    private FileSourceFileArgs() {}

    private FileSourceFileArgs(FileSourceFileArgs $) {
        this.changed = $.changed;
        this.checksum = $.checksum;
        this.fileName = $.fileName;
        this.insecure = $.insecure;
        this.path = $.path;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FileSourceFileArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FileSourceFileArgs $;

        public Builder() {
            $ = new FileSourceFileArgs();
        }

        public Builder(FileSourceFileArgs defaults) {
            $ = new FileSourceFileArgs(Objects.requireNonNull(defaults));
        }

        public Builder changed(@Nullable Output<Boolean> changed) {
            $.changed = changed;
            return this;
        }

        public Builder changed(Boolean changed) {
            return changed(Output.of(changed));
        }

        public Builder checksum(@Nullable Output<String> checksum) {
            $.checksum = checksum;
            return this;
        }

        public Builder checksum(String checksum) {
            return checksum(Output.of(checksum));
        }

        public Builder fileName(@Nullable Output<String> fileName) {
            $.fileName = fileName;
            return this;
        }

        public Builder fileName(String fileName) {
            return fileName(Output.of(fileName));
        }

        public Builder insecure(@Nullable Output<Boolean> insecure) {
            $.insecure = insecure;
            return this;
        }

        public Builder insecure(Boolean insecure) {
            return insecure(Output.of(insecure));
        }

        public Builder path(Output<String> path) {
            $.path = path;
            return this;
        }

        public Builder path(String path) {
            return path(Output.of(path));
        }

        public FileSourceFileArgs build() {
            $.path = Objects.requireNonNull($.path, "expected parameter 'path' to be non-null");
            return $;
        }
    }

}
