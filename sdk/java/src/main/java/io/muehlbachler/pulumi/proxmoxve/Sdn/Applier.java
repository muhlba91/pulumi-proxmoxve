// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.muehlbachler.pulumi.proxmoxve.Sdn;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import io.muehlbachler.pulumi.proxmoxve.Sdn.ApplierArgs;
import io.muehlbachler.pulumi.proxmoxve.Sdn.inputs.ApplierState;
import io.muehlbachler.pulumi.proxmoxve.Utilities;
import javax.annotation.Nullable;

/**
 * **EXPERIMENTAL** Triggers Proxmox&#39;s SDN **Apply** (equivalent to `PUT /cluster/sdn`).Intended to be used with `replace_triggered_by` so it runs after SDN objects change.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import io.muehlbachler.pulumi.proxmoxve.Sdn.Applier;
 * import io.muehlbachler.pulumi.proxmoxve.SDNZone.Simple;
 * import io.muehlbachler.pulumi.proxmoxve.SDNZone.SimpleArgs;
 * import io.muehlbachler.pulumi.proxmoxve.Sdn.ApplierArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var finalizer = new Applier("finalizer");
 * 
 *         // SDN Zone (Simple) - First zone for applier demonstration
 *         var exampleZone1 = new Simple("exampleZone1", SimpleArgs.builder()
 *             .zoneId("zone1")
 *             .nodes("pve")
 *             .mtu(1500)
 *             .dns("1.1.1.1")
 *             .dnsZone("example.com")
 *             .ipam("pve")
 *             .reverseDns("1.1.1.1")
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(finalizer)
 *                 .build());
 * 
 *         // SDN Zone (Simple) - Second zone for applier demonstration
 *         var exampleZone2 = new Simple("exampleZone2", SimpleArgs.builder()
 *             .zoneId("zone2")
 *             .nodes("pve")
 *             .mtu(1500)
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(finalizer)
 *                 .build());
 * 
 *         // SDN Applier - Applies SDN configuration changes
 *         var exampleApplier = new Applier("exampleApplier", ApplierArgs.Empty, CustomResourceOptions.builder()
 *             .dependsOn(            
 *                 exampleZone1,
 *                 exampleZone2)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 */
@ResourceType(type="proxmoxve:Sdn/applier:Applier")
public class Applier extends com.pulumi.resources.CustomResource {
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Applier(java.lang.String name) {
        this(name, ApplierArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Applier(java.lang.String name, @Nullable ApplierArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Applier(java.lang.String name, @Nullable ApplierArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("proxmoxve:Sdn/applier:Applier", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Applier(java.lang.String name, Output<java.lang.String> id, @Nullable ApplierState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("proxmoxve:Sdn/applier:Applier", name, state, makeResourceOptions(options, id), false);
    }

    private static ApplierArgs makeArgs(@Nullable ApplierArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ApplierArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .pluginDownloadURL("github://api.github.com/muhlba91/pulumi-proxmoxve")
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Applier get(java.lang.String name, Output<java.lang.String> id, @Nullable ApplierState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Applier(name, id, state, options);
    }
}
