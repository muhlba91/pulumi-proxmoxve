// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.muehlbachler.pulumi.proxmoxve.CT.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ContainerInitializationDnsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ContainerInitializationDnsArgs Empty = new ContainerInitializationDnsArgs();

    @Import(name="domain")
    private @Nullable Output<String> domain;

    public Optional<Output<String>> domain() {
        return Optional.ofNullable(this.domain);
    }

    @Import(name="server")
    private @Nullable Output<String> server;

    public Optional<Output<String>> server() {
        return Optional.ofNullable(this.server);
    }

    private ContainerInitializationDnsArgs() {}

    private ContainerInitializationDnsArgs(ContainerInitializationDnsArgs $) {
        this.domain = $.domain;
        this.server = $.server;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContainerInitializationDnsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContainerInitializationDnsArgs $;

        public Builder() {
            $ = new ContainerInitializationDnsArgs();
        }

        public Builder(ContainerInitializationDnsArgs defaults) {
            $ = new ContainerInitializationDnsArgs(Objects.requireNonNull(defaults));
        }

        public Builder domain(@Nullable Output<String> domain) {
            $.domain = domain;
            return this;
        }

        public Builder domain(String domain) {
            return domain(Output.of(domain));
        }

        public Builder server(@Nullable Output<String> server) {
            $.server = server;
            return this;
        }

        public Builder server(String server) {
            return server(Output.of(server));
        }

        public ContainerInitializationDnsArgs build() {
            return $;
        }
    }

}
