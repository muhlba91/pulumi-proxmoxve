// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.muehlbachler.pulumi.proxmoxve.Sdn.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetVnetResult {
    /**
     * @return An optional alias for this VNet.
     * 
     */
    private String alias;
    /**
     * @return The unique identifier of the SDN VNet.
     * 
     */
    private String id;
    /**
     * @return Isolate ports within this VNet.
     * 
     */
    private Boolean isolatePorts;
    /**
     * @return Tag value for VLAN/VXLAN (can&#39;t be used with other zone types).
     * 
     */
    private Integer tag;
    /**
     * @return Allow VM VLANs to pass through this VNet.
     * 
     */
    private Boolean vlanAware;
    /**
     * @return The zone to which this VNet belongs.
     * 
     */
    private String zone;

    private GetVnetResult() {}
    /**
     * @return An optional alias for this VNet.
     * 
     */
    public String alias() {
        return this.alias;
    }
    /**
     * @return The unique identifier of the SDN VNet.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Isolate ports within this VNet.
     * 
     */
    public Boolean isolatePorts() {
        return this.isolatePorts;
    }
    /**
     * @return Tag value for VLAN/VXLAN (can&#39;t be used with other zone types).
     * 
     */
    public Integer tag() {
        return this.tag;
    }
    /**
     * @return Allow VM VLANs to pass through this VNet.
     * 
     */
    public Boolean vlanAware() {
        return this.vlanAware;
    }
    /**
     * @return The zone to which this VNet belongs.
     * 
     */
    public String zone() {
        return this.zone;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVnetResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String alias;
        private String id;
        private Boolean isolatePorts;
        private Integer tag;
        private Boolean vlanAware;
        private String zone;
        public Builder() {}
        public Builder(GetVnetResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.alias = defaults.alias;
    	      this.id = defaults.id;
    	      this.isolatePorts = defaults.isolatePorts;
    	      this.tag = defaults.tag;
    	      this.vlanAware = defaults.vlanAware;
    	      this.zone = defaults.zone;
        }

        @CustomType.Setter
        public Builder alias(String alias) {
            if (alias == null) {
              throw new MissingRequiredPropertyException("GetVnetResult", "alias");
            }
            this.alias = alias;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetVnetResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isolatePorts(Boolean isolatePorts) {
            if (isolatePorts == null) {
              throw new MissingRequiredPropertyException("GetVnetResult", "isolatePorts");
            }
            this.isolatePorts = isolatePorts;
            return this;
        }
        @CustomType.Setter
        public Builder tag(Integer tag) {
            if (tag == null) {
              throw new MissingRequiredPropertyException("GetVnetResult", "tag");
            }
            this.tag = tag;
            return this;
        }
        @CustomType.Setter
        public Builder vlanAware(Boolean vlanAware) {
            if (vlanAware == null) {
              throw new MissingRequiredPropertyException("GetVnetResult", "vlanAware");
            }
            this.vlanAware = vlanAware;
            return this;
        }
        @CustomType.Setter
        public Builder zone(String zone) {
            if (zone == null) {
              throw new MissingRequiredPropertyException("GetVnetResult", "zone");
            }
            this.zone = zone;
            return this;
        }
        public GetVnetResult build() {
            final var _resultValue = new GetVnetResult();
            _resultValue.alias = alias;
            _resultValue.id = id;
            _resultValue.isolatePorts = isolatePorts;
            _resultValue.tag = tag;
            _resultValue.vlanAware = vlanAware;
            _resultValue.zone = zone;
            return _resultValue;
        }
    }
}
