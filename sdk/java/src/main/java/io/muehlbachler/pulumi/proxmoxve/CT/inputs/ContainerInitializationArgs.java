// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.muehlbachler.pulumi.proxmoxve.CT.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import io.muehlbachler.pulumi.proxmoxve.CT.inputs.ContainerInitializationDnsArgs;
import io.muehlbachler.pulumi.proxmoxve.CT.inputs.ContainerInitializationIpConfigArgs;
import io.muehlbachler.pulumi.proxmoxve.CT.inputs.ContainerInitializationUserAccountArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ContainerInitializationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ContainerInitializationArgs Empty = new ContainerInitializationArgs();

    /**
     * The DNS configuration.
     * 
     */
    @Import(name="dns")
    private @Nullable Output<ContainerInitializationDnsArgs> dns;

    /**
     * @return The DNS configuration.
     * 
     */
    public Optional<Output<ContainerInitializationDnsArgs>> dns() {
        return Optional.ofNullable(this.dns);
    }

    /**
     * The hostname.
     * 
     */
    @Import(name="hostname")
    private @Nullable Output<String> hostname;

    /**
     * @return The hostname.
     * 
     */
    public Optional<Output<String>> hostname() {
        return Optional.ofNullable(this.hostname);
    }

    /**
     * The IP configuration (one block per network
     * device).
     * 
     */
    @Import(name="ipConfigs")
    private @Nullable Output<List<ContainerInitializationIpConfigArgs>> ipConfigs;

    /**
     * @return The IP configuration (one block per network
     * device).
     * 
     */
    public Optional<Output<List<ContainerInitializationIpConfigArgs>>> ipConfigs() {
        return Optional.ofNullable(this.ipConfigs);
    }

    /**
     * The user account configuration.
     * 
     */
    @Import(name="userAccount")
    private @Nullable Output<ContainerInitializationUserAccountArgs> userAccount;

    /**
     * @return The user account configuration.
     * 
     */
    public Optional<Output<ContainerInitializationUserAccountArgs>> userAccount() {
        return Optional.ofNullable(this.userAccount);
    }

    private ContainerInitializationArgs() {}

    private ContainerInitializationArgs(ContainerInitializationArgs $) {
        this.dns = $.dns;
        this.hostname = $.hostname;
        this.ipConfigs = $.ipConfigs;
        this.userAccount = $.userAccount;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContainerInitializationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContainerInitializationArgs $;

        public Builder() {
            $ = new ContainerInitializationArgs();
        }

        public Builder(ContainerInitializationArgs defaults) {
            $ = new ContainerInitializationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dns The DNS configuration.
         * 
         * @return builder
         * 
         */
        public Builder dns(@Nullable Output<ContainerInitializationDnsArgs> dns) {
            $.dns = dns;
            return this;
        }

        /**
         * @param dns The DNS configuration.
         * 
         * @return builder
         * 
         */
        public Builder dns(ContainerInitializationDnsArgs dns) {
            return dns(Output.of(dns));
        }

        /**
         * @param hostname The hostname.
         * 
         * @return builder
         * 
         */
        public Builder hostname(@Nullable Output<String> hostname) {
            $.hostname = hostname;
            return this;
        }

        /**
         * @param hostname The hostname.
         * 
         * @return builder
         * 
         */
        public Builder hostname(String hostname) {
            return hostname(Output.of(hostname));
        }

        /**
         * @param ipConfigs The IP configuration (one block per network
         * device).
         * 
         * @return builder
         * 
         */
        public Builder ipConfigs(@Nullable Output<List<ContainerInitializationIpConfigArgs>> ipConfigs) {
            $.ipConfigs = ipConfigs;
            return this;
        }

        /**
         * @param ipConfigs The IP configuration (one block per network
         * device).
         * 
         * @return builder
         * 
         */
        public Builder ipConfigs(List<ContainerInitializationIpConfigArgs> ipConfigs) {
            return ipConfigs(Output.of(ipConfigs));
        }

        /**
         * @param ipConfigs The IP configuration (one block per network
         * device).
         * 
         * @return builder
         * 
         */
        public Builder ipConfigs(ContainerInitializationIpConfigArgs... ipConfigs) {
            return ipConfigs(List.of(ipConfigs));
        }

        /**
         * @param userAccount The user account configuration.
         * 
         * @return builder
         * 
         */
        public Builder userAccount(@Nullable Output<ContainerInitializationUserAccountArgs> userAccount) {
            $.userAccount = userAccount;
            return this;
        }

        /**
         * @param userAccount The user account configuration.
         * 
         * @return builder
         * 
         */
        public Builder userAccount(ContainerInitializationUserAccountArgs userAccount) {
            return userAccount(Output.of(userAccount));
        }

        public ContainerInitializationArgs build() {
            return $;
        }
    }

}
