// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.muehlbachler.pulumi.proxmoxve.Network;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import io.muehlbachler.pulumi.proxmoxve.Network.FirewallRulesArgs;
import io.muehlbachler.pulumi.proxmoxve.Network.inputs.FirewallRulesState;
import io.muehlbachler.pulumi.proxmoxve.Network.outputs.FirewallRulesRule;
import io.muehlbachler.pulumi.proxmoxve.Utilities;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * A security group is a collection of rules, defined at cluster level, which can
 * be used in all VMs&#39; rules. For example, you can define a group named “webserver”
 * with rules to open the http and https ports. Rules can be created on the cluster
 * level, on VM / Container level.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.proxmoxve.Network.FirewallRules;
 * import com.pulumi.proxmoxve.Network.FirewallRulesArgs;
 * import com.pulumi.proxmoxve.Network.inputs.FirewallRulesRuleArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var inbound = new FirewallRules(&#34;inbound&#34;, FirewallRulesArgs.builder()        
 *             .nodeName(proxmox_virtual_environment_vm.example().node_name())
 *             .vmId(proxmox_virtual_environment_vm.example().vm_id())
 *             .rules(            
 *                 FirewallRulesRuleArgs.builder()
 *                     .type(&#34;in&#34;)
 *                     .action(&#34;ACCEPT&#34;)
 *                     .comment(&#34;Allow HTTP&#34;)
 *                     .dest(&#34;192.168.1.5&#34;)
 *                     .dport(&#34;80&#34;)
 *                     .proto(&#34;tcp&#34;)
 *                     .log(&#34;info&#34;)
 *                     .build(),
 *                 FirewallRulesRuleArgs.builder()
 *                     .type(&#34;in&#34;)
 *                     .action(&#34;ACCEPT&#34;)
 *                     .comment(&#34;Allow HTTPS&#34;)
 *                     .dest(&#34;192.168.1.5&#34;)
 *                     .dport(&#34;443&#34;)
 *                     .proto(&#34;tcp&#34;)
 *                     .log(&#34;info&#34;)
 *                     .build(),
 *                 FirewallRulesRuleArgs.builder()
 *                     .securityGroup(proxmox_virtual_environment_cluster_firewall_security_group.example().name())
 *                     .comment(&#34;From security group&#34;)
 *                     .iface(&#34;net0&#34;)
 *                     .build())
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(                
 *                     proxmox_virtual_environment_vm.example(),
 *                     proxmox_virtual_environment_cluster_firewall_security_group.example())
 *                 .build());
 * 
 *     }
 * }
 * ```
 * 
 */
@ResourceType(type="proxmoxve:Network/firewallRules:FirewallRules")
public class FirewallRules extends com.pulumi.resources.CustomResource {
    /**
     * Container ID. Leave empty for cluster level
     * rules.
     * 
     */
    @Export(name="containerId", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> containerId;

    /**
     * @return Container ID. Leave empty for cluster level
     * rules.
     * 
     */
    public Output<Optional<Integer>> containerId() {
        return Codegen.optional(this.containerId);
    }
    /**
     * Node name. Leave empty for cluster level rules.
     * 
     */
    @Export(name="nodeName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> nodeName;

    /**
     * @return Node name. Leave empty for cluster level rules.
     * 
     */
    public Output<Optional<String>> nodeName() {
        return Codegen.optional(this.nodeName);
    }
    /**
     * Firewall rule block (multiple blocks supported).
     * The provider supports two types of the `rule` blocks:
     * - a rule definition block, which includes the following arguments:
     * 
     */
    @Export(name="rules", refs={List.class,FirewallRulesRule.class}, tree="[0,1]")
    private Output<List<FirewallRulesRule>> rules;

    /**
     * @return Firewall rule block (multiple blocks supported).
     * The provider supports two types of the `rule` blocks:
     * - a rule definition block, which includes the following arguments:
     * 
     */
    public Output<List<FirewallRulesRule>> rules() {
        return this.rules;
    }
    /**
     * VM ID. Leave empty for cluster level rules.
     * 
     */
    @Export(name="vmId", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> vmId;

    /**
     * @return VM ID. Leave empty for cluster level rules.
     * 
     */
    public Output<Optional<Integer>> vmId() {
        return Codegen.optional(this.vmId);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public FirewallRules(String name) {
        this(name, FirewallRulesArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public FirewallRules(String name, FirewallRulesArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public FirewallRules(String name, FirewallRulesArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("proxmoxve:Network/firewallRules:FirewallRules", name, args == null ? FirewallRulesArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private FirewallRules(String name, Output<String> id, @Nullable FirewallRulesState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("proxmoxve:Network/firewallRules:FirewallRules", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static FirewallRules get(String name, Output<String> id, @Nullable FirewallRulesState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new FirewallRules(name, id, state, options);
    }
}
