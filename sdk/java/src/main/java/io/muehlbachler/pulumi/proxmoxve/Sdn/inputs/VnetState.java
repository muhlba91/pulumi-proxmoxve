// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.muehlbachler.pulumi.proxmoxve.Sdn.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VnetState extends com.pulumi.resources.ResourceArgs {

    public static final VnetState Empty = new VnetState();

    /**
     * An optional alias for this VNet.
     * 
     */
    @Import(name="alias")
    private @Nullable Output<String> alias;

    /**
     * @return An optional alias for this VNet.
     * 
     */
    public Optional<Output<String>> alias() {
        return Optional.ofNullable(this.alias);
    }

    /**
     * Isolate ports within this VNet.
     * 
     */
    @Import(name="isolatePorts")
    private @Nullable Output<Boolean> isolatePorts;

    /**
     * @return Isolate ports within this VNet.
     * 
     */
    public Optional<Output<Boolean>> isolatePorts() {
        return Optional.ofNullable(this.isolatePorts);
    }

    /**
     * Tag value for VLAN/VXLAN (can&#39;t be used with other zone types).
     * 
     */
    @Import(name="tag")
    private @Nullable Output<Integer> tag;

    /**
     * @return Tag value for VLAN/VXLAN (can&#39;t be used with other zone types).
     * 
     */
    public Optional<Output<Integer>> tag() {
        return Optional.ofNullable(this.tag);
    }

    /**
     * Allow VM VLANs to pass through this VNet.
     * 
     */
    @Import(name="vlanAware")
    private @Nullable Output<Boolean> vlanAware;

    /**
     * @return Allow VM VLANs to pass through this VNet.
     * 
     */
    public Optional<Output<Boolean>> vlanAware() {
        return Optional.ofNullable(this.vlanAware);
    }

    /**
     * The unique identifier of the SDN VNet.
     * 
     */
    @Import(name="vnetId")
    private @Nullable Output<String> vnetId;

    /**
     * @return The unique identifier of the SDN VNet.
     * 
     */
    public Optional<Output<String>> vnetId() {
        return Optional.ofNullable(this.vnetId);
    }

    /**
     * The zone to which this VNet belongs.
     * 
     */
    @Import(name="zone")
    private @Nullable Output<String> zone;

    /**
     * @return The zone to which this VNet belongs.
     * 
     */
    public Optional<Output<String>> zone() {
        return Optional.ofNullable(this.zone);
    }

    private VnetState() {}

    private VnetState(VnetState $) {
        this.alias = $.alias;
        this.isolatePorts = $.isolatePorts;
        this.tag = $.tag;
        this.vlanAware = $.vlanAware;
        this.vnetId = $.vnetId;
        this.zone = $.zone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VnetState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VnetState $;

        public Builder() {
            $ = new VnetState();
        }

        public Builder(VnetState defaults) {
            $ = new VnetState(Objects.requireNonNull(defaults));
        }

        /**
         * @param alias An optional alias for this VNet.
         * 
         * @return builder
         * 
         */
        public Builder alias(@Nullable Output<String> alias) {
            $.alias = alias;
            return this;
        }

        /**
         * @param alias An optional alias for this VNet.
         * 
         * @return builder
         * 
         */
        public Builder alias(String alias) {
            return alias(Output.of(alias));
        }

        /**
         * @param isolatePorts Isolate ports within this VNet.
         * 
         * @return builder
         * 
         */
        public Builder isolatePorts(@Nullable Output<Boolean> isolatePorts) {
            $.isolatePorts = isolatePorts;
            return this;
        }

        /**
         * @param isolatePorts Isolate ports within this VNet.
         * 
         * @return builder
         * 
         */
        public Builder isolatePorts(Boolean isolatePorts) {
            return isolatePorts(Output.of(isolatePorts));
        }

        /**
         * @param tag Tag value for VLAN/VXLAN (can&#39;t be used with other zone types).
         * 
         * @return builder
         * 
         */
        public Builder tag(@Nullable Output<Integer> tag) {
            $.tag = tag;
            return this;
        }

        /**
         * @param tag Tag value for VLAN/VXLAN (can&#39;t be used with other zone types).
         * 
         * @return builder
         * 
         */
        public Builder tag(Integer tag) {
            return tag(Output.of(tag));
        }

        /**
         * @param vlanAware Allow VM VLANs to pass through this VNet.
         * 
         * @return builder
         * 
         */
        public Builder vlanAware(@Nullable Output<Boolean> vlanAware) {
            $.vlanAware = vlanAware;
            return this;
        }

        /**
         * @param vlanAware Allow VM VLANs to pass through this VNet.
         * 
         * @return builder
         * 
         */
        public Builder vlanAware(Boolean vlanAware) {
            return vlanAware(Output.of(vlanAware));
        }

        /**
         * @param vnetId The unique identifier of the SDN VNet.
         * 
         * @return builder
         * 
         */
        public Builder vnetId(@Nullable Output<String> vnetId) {
            $.vnetId = vnetId;
            return this;
        }

        /**
         * @param vnetId The unique identifier of the SDN VNet.
         * 
         * @return builder
         * 
         */
        public Builder vnetId(String vnetId) {
            return vnetId(Output.of(vnetId));
        }

        /**
         * @param zone The zone to which this VNet belongs.
         * 
         * @return builder
         * 
         */
        public Builder zone(@Nullable Output<String> zone) {
            $.zone = zone;
            return this;
        }

        /**
         * @param zone The zone to which this VNet belongs.
         * 
         * @return builder
         * 
         */
        public Builder zone(String zone) {
            return zone(Output.of(zone));
        }

        public VnetState build() {
            return $;
        }
    }

}
