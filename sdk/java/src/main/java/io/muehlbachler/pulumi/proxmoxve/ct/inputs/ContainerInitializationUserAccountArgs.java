// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.muehlbachler.pulumi.proxmoxve.CT.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ContainerInitializationUserAccountArgs extends com.pulumi.resources.ResourceArgs {

    public static final ContainerInitializationUserAccountArgs Empty = new ContainerInitializationUserAccountArgs();

    /**
     * The SSH keys for the root account.
     * 
     */
    @Import(name="keys")
    private @Nullable Output<List<String>> keys;

    /**
     * @return The SSH keys for the root account.
     * 
     */
    public Optional<Output<List<String>>> keys() {
        return Optional.ofNullable(this.keys);
    }

    /**
     * The password for the root account.
     * 
     */
    @Import(name="password")
    private @Nullable Output<String> password;

    /**
     * @return The password for the root account.
     * 
     */
    public Optional<Output<String>> password() {
        return Optional.ofNullable(this.password);
    }

    private ContainerInitializationUserAccountArgs() {}

    private ContainerInitializationUserAccountArgs(ContainerInitializationUserAccountArgs $) {
        this.keys = $.keys;
        this.password = $.password;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContainerInitializationUserAccountArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContainerInitializationUserAccountArgs $;

        public Builder() {
            $ = new ContainerInitializationUserAccountArgs();
        }

        public Builder(ContainerInitializationUserAccountArgs defaults) {
            $ = new ContainerInitializationUserAccountArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param keys The SSH keys for the root account.
         * 
         * @return builder
         * 
         */
        public Builder keys(@Nullable Output<List<String>> keys) {
            $.keys = keys;
            return this;
        }

        /**
         * @param keys The SSH keys for the root account.
         * 
         * @return builder
         * 
         */
        public Builder keys(List<String> keys) {
            return keys(Output.of(keys));
        }

        /**
         * @param keys The SSH keys for the root account.
         * 
         * @return builder
         * 
         */
        public Builder keys(String... keys) {
            return keys(List.of(keys));
        }

        /**
         * @param password The password for the root account.
         * 
         * @return builder
         * 
         */
        public Builder password(@Nullable Output<String> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password The password for the root account.
         * 
         * @return builder
         * 
         */
        public Builder password(String password) {
            return password(Output.of(password));
        }

        public ContainerInitializationUserAccountArgs build() {
            return $;
        }
    }

}
