// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.muehlbachler.pulumi.proxmoxve.Hardware_mapping.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDirMap {
    /**
     * @return The node name attribute of the map.
     * 
     */
    private String node;
    /**
     * @return The path attribute of the map.
     * 
     */
    private String path;

    private GetDirMap() {}
    /**
     * @return The node name attribute of the map.
     * 
     */
    public String node() {
        return this.node;
    }
    /**
     * @return The path attribute of the map.
     * 
     */
    public String path() {
        return this.path;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDirMap defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String node;
        private String path;
        public Builder() {}
        public Builder(GetDirMap defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.node = defaults.node;
    	      this.path = defaults.path;
        }

        @CustomType.Setter
        public Builder node(String node) {
            if (node == null) {
              throw new MissingRequiredPropertyException("GetDirMap", "node");
            }
            this.node = node;
            return this;
        }
        @CustomType.Setter
        public Builder path(String path) {
            if (path == null) {
              throw new MissingRequiredPropertyException("GetDirMap", "path");
            }
            this.path = path;
            return this;
        }
        public GetDirMap build() {
            final var _resultValue = new GetDirMap();
            _resultValue.node = node;
            _resultValue.path = path;
            return _resultValue;
        }
    }
}
