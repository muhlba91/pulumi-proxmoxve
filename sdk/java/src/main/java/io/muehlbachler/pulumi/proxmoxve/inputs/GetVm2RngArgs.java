// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.muehlbachler.pulumi.proxmoxve.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class GetVm2RngArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetVm2RngArgs Empty = new GetVm2RngArgs();

    /**
     * Maximum bytes of entropy allowed to get injected into the guest every period.
     * 
     */
    @Import(name="maxBytes", required=true)
    private Output<Integer> maxBytes;

    /**
     * @return Maximum bytes of entropy allowed to get injected into the guest every period.
     * 
     */
    public Output<Integer> maxBytes() {
        return this.maxBytes;
    }

    /**
     * Period in milliseconds to limit entropy injection to the guest.
     * 
     */
    @Import(name="period", required=true)
    private Output<Integer> period;

    /**
     * @return Period in milliseconds to limit entropy injection to the guest.
     * 
     */
    public Output<Integer> period() {
        return this.period;
    }

    /**
     * The entropy source for the RNG device.
     * 
     */
    @Import(name="source", required=true)
    private Output<String> source;

    /**
     * @return The entropy source for the RNG device.
     * 
     */
    public Output<String> source() {
        return this.source;
    }

    private GetVm2RngArgs() {}

    private GetVm2RngArgs(GetVm2RngArgs $) {
        this.maxBytes = $.maxBytes;
        this.period = $.period;
        this.source = $.source;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetVm2RngArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetVm2RngArgs $;

        public Builder() {
            $ = new GetVm2RngArgs();
        }

        public Builder(GetVm2RngArgs defaults) {
            $ = new GetVm2RngArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param maxBytes Maximum bytes of entropy allowed to get injected into the guest every period.
         * 
         * @return builder
         * 
         */
        public Builder maxBytes(Output<Integer> maxBytes) {
            $.maxBytes = maxBytes;
            return this;
        }

        /**
         * @param maxBytes Maximum bytes of entropy allowed to get injected into the guest every period.
         * 
         * @return builder
         * 
         */
        public Builder maxBytes(Integer maxBytes) {
            return maxBytes(Output.of(maxBytes));
        }

        /**
         * @param period Period in milliseconds to limit entropy injection to the guest.
         * 
         * @return builder
         * 
         */
        public Builder period(Output<Integer> period) {
            $.period = period;
            return this;
        }

        /**
         * @param period Period in milliseconds to limit entropy injection to the guest.
         * 
         * @return builder
         * 
         */
        public Builder period(Integer period) {
            return period(Output.of(period));
        }

        /**
         * @param source The entropy source for the RNG device.
         * 
         * @return builder
         * 
         */
        public Builder source(Output<String> source) {
            $.source = source;
            return this;
        }

        /**
         * @param source The entropy source for the RNG device.
         * 
         * @return builder
         * 
         */
        public Builder source(String source) {
            return source(Output.of(source));
        }

        public GetVm2RngArgs build() {
            if ($.maxBytes == null) {
                throw new MissingRequiredPropertyException("GetVm2RngArgs", "maxBytes");
            }
            if ($.period == null) {
                throw new MissingRequiredPropertyException("GetVm2RngArgs", "period");
            }
            if ($.source == null) {
                throw new MissingRequiredPropertyException("GetVm2RngArgs", "source");
            }
            return $;
        }
    }

}
