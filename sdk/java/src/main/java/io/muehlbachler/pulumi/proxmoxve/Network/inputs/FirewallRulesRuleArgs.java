// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.muehlbachler.pulumi.proxmoxve.Network.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FirewallRulesRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final FirewallRulesRuleArgs Empty = new FirewallRulesRuleArgs();

    @Import(name="action")
    private @Nullable Output<String> action;

    public Optional<Output<String>> action() {
        return Optional.ofNullable(this.action);
    }

    @Import(name="comment")
    private @Nullable Output<String> comment;

    public Optional<Output<String>> comment() {
        return Optional.ofNullable(this.comment);
    }

    @Import(name="dest")
    private @Nullable Output<String> dest;

    public Optional<Output<String>> dest() {
        return Optional.ofNullable(this.dest);
    }

    @Import(name="dport")
    private @Nullable Output<String> dport;

    public Optional<Output<String>> dport() {
        return Optional.ofNullable(this.dport);
    }

    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    @Import(name="iface")
    private @Nullable Output<String> iface;

    public Optional<Output<String>> iface() {
        return Optional.ofNullable(this.iface);
    }

    @Import(name="log")
    private @Nullable Output<String> log;

    public Optional<Output<String>> log() {
        return Optional.ofNullable(this.log);
    }

    @Import(name="macro")
    private @Nullable Output<String> macro;

    public Optional<Output<String>> macro() {
        return Optional.ofNullable(this.macro);
    }

    @Import(name="pos")
    private @Nullable Output<Integer> pos;

    public Optional<Output<Integer>> pos() {
        return Optional.ofNullable(this.pos);
    }

    @Import(name="proto")
    private @Nullable Output<String> proto;

    public Optional<Output<String>> proto() {
        return Optional.ofNullable(this.proto);
    }

    @Import(name="securityGroup")
    private @Nullable Output<String> securityGroup;

    public Optional<Output<String>> securityGroup() {
        return Optional.ofNullable(this.securityGroup);
    }

    @Import(name="source")
    private @Nullable Output<String> source;

    public Optional<Output<String>> source() {
        return Optional.ofNullable(this.source);
    }

    @Import(name="sport")
    private @Nullable Output<String> sport;

    public Optional<Output<String>> sport() {
        return Optional.ofNullable(this.sport);
    }

    @Import(name="type")
    private @Nullable Output<String> type;

    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private FirewallRulesRuleArgs() {}

    private FirewallRulesRuleArgs(FirewallRulesRuleArgs $) {
        this.action = $.action;
        this.comment = $.comment;
        this.dest = $.dest;
        this.dport = $.dport;
        this.enabled = $.enabled;
        this.iface = $.iface;
        this.log = $.log;
        this.macro = $.macro;
        this.pos = $.pos;
        this.proto = $.proto;
        this.securityGroup = $.securityGroup;
        this.source = $.source;
        this.sport = $.sport;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FirewallRulesRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FirewallRulesRuleArgs $;

        public Builder() {
            $ = new FirewallRulesRuleArgs();
        }

        public Builder(FirewallRulesRuleArgs defaults) {
            $ = new FirewallRulesRuleArgs(Objects.requireNonNull(defaults));
        }

        public Builder action(@Nullable Output<String> action) {
            $.action = action;
            return this;
        }

        public Builder action(String action) {
            return action(Output.of(action));
        }

        public Builder comment(@Nullable Output<String> comment) {
            $.comment = comment;
            return this;
        }

        public Builder comment(String comment) {
            return comment(Output.of(comment));
        }

        public Builder dest(@Nullable Output<String> dest) {
            $.dest = dest;
            return this;
        }

        public Builder dest(String dest) {
            return dest(Output.of(dest));
        }

        public Builder dport(@Nullable Output<String> dport) {
            $.dport = dport;
            return this;
        }

        public Builder dport(String dport) {
            return dport(Output.of(dport));
        }

        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        public Builder iface(@Nullable Output<String> iface) {
            $.iface = iface;
            return this;
        }

        public Builder iface(String iface) {
            return iface(Output.of(iface));
        }

        public Builder log(@Nullable Output<String> log) {
            $.log = log;
            return this;
        }

        public Builder log(String log) {
            return log(Output.of(log));
        }

        public Builder macro(@Nullable Output<String> macro) {
            $.macro = macro;
            return this;
        }

        public Builder macro(String macro) {
            return macro(Output.of(macro));
        }

        public Builder pos(@Nullable Output<Integer> pos) {
            $.pos = pos;
            return this;
        }

        public Builder pos(Integer pos) {
            return pos(Output.of(pos));
        }

        public Builder proto(@Nullable Output<String> proto) {
            $.proto = proto;
            return this;
        }

        public Builder proto(String proto) {
            return proto(Output.of(proto));
        }

        public Builder securityGroup(@Nullable Output<String> securityGroup) {
            $.securityGroup = securityGroup;
            return this;
        }

        public Builder securityGroup(String securityGroup) {
            return securityGroup(Output.of(securityGroup));
        }

        public Builder source(@Nullable Output<String> source) {
            $.source = source;
            return this;
        }

        public Builder source(String source) {
            return source(Output.of(source));
        }

        public Builder sport(@Nullable Output<String> sport) {
            $.sport = sport;
            return this;
        }

        public Builder sport(String sport) {
            return sport(Output.of(sport));
        }

        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public FirewallRulesRuleArgs build() {
            return $;
        }
    }

}
