// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.muehlbachler.pulumi.proxmoxve.VM.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VirtualMachineEfiDiskArgs extends com.pulumi.resources.ResourceArgs {

    public static final VirtualMachineEfiDiskArgs Empty = new VirtualMachineEfiDiskArgs();

    @Import(name="datastoreId")
    private @Nullable Output<String> datastoreId;

    public Optional<Output<String>> datastoreId() {
        return Optional.ofNullable(this.datastoreId);
    }

    @Import(name="fileFormat")
    private @Nullable Output<String> fileFormat;

    public Optional<Output<String>> fileFormat() {
        return Optional.ofNullable(this.fileFormat);
    }

    @Import(name="preEnrolledKeys")
    private @Nullable Output<Boolean> preEnrolledKeys;

    public Optional<Output<Boolean>> preEnrolledKeys() {
        return Optional.ofNullable(this.preEnrolledKeys);
    }

    @Import(name="type")
    private @Nullable Output<String> type;

    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private VirtualMachineEfiDiskArgs() {}

    private VirtualMachineEfiDiskArgs(VirtualMachineEfiDiskArgs $) {
        this.datastoreId = $.datastoreId;
        this.fileFormat = $.fileFormat;
        this.preEnrolledKeys = $.preEnrolledKeys;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualMachineEfiDiskArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualMachineEfiDiskArgs $;

        public Builder() {
            $ = new VirtualMachineEfiDiskArgs();
        }

        public Builder(VirtualMachineEfiDiskArgs defaults) {
            $ = new VirtualMachineEfiDiskArgs(Objects.requireNonNull(defaults));
        }

        public Builder datastoreId(@Nullable Output<String> datastoreId) {
            $.datastoreId = datastoreId;
            return this;
        }

        public Builder datastoreId(String datastoreId) {
            return datastoreId(Output.of(datastoreId));
        }

        public Builder fileFormat(@Nullable Output<String> fileFormat) {
            $.fileFormat = fileFormat;
            return this;
        }

        public Builder fileFormat(String fileFormat) {
            return fileFormat(Output.of(fileFormat));
        }

        public Builder preEnrolledKeys(@Nullable Output<Boolean> preEnrolledKeys) {
            $.preEnrolledKeys = preEnrolledKeys;
            return this;
        }

        public Builder preEnrolledKeys(Boolean preEnrolledKeys) {
            return preEnrolledKeys(Output.of(preEnrolledKeys));
        }

        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public VirtualMachineEfiDiskArgs build() {
            return $;
        }
    }

}
