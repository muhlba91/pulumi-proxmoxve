// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.muehlbachler.pulumi.proxmoxve.Permission.outputs;

import com.pulumi.core.annotations.CustomType;
import io.muehlbachler.pulumi.proxmoxve.Permission.outputs.GetUserAcl;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetUserResult {
    /**
     * @return The access control list.
     * 
     */
    private List<GetUserAcl> acls;
    /**
     * @return The user comment.
     * 
     */
    private String comment;
    /**
     * @return The user&#39;s email address.
     * 
     */
    private String email;
    /**
     * @return Whether the user account is enabled.
     * 
     */
    private Boolean enabled;
    /**
     * @return The user account&#39;s expiration date (RFC 3339).
     * 
     */
    private String expirationDate;
    /**
     * @return The user&#39;s first name.
     * 
     */
    private String firstName;
    /**
     * @return The user&#39;s groups.
     * 
     */
    private List<String> groups;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The user&#39;s keys.
     * 
     */
    private String keys;
    /**
     * @return The user&#39;s last name.
     * 
     */
    private String lastName;
    private String userId;

    private GetUserResult() {}
    /**
     * @return The access control list.
     * 
     */
    public List<GetUserAcl> acls() {
        return this.acls;
    }
    /**
     * @return The user comment.
     * 
     */
    public String comment() {
        return this.comment;
    }
    /**
     * @return The user&#39;s email address.
     * 
     */
    public String email() {
        return this.email;
    }
    /**
     * @return Whether the user account is enabled.
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }
    /**
     * @return The user account&#39;s expiration date (RFC 3339).
     * 
     */
    public String expirationDate() {
        return this.expirationDate;
    }
    /**
     * @return The user&#39;s first name.
     * 
     */
    public String firstName() {
        return this.firstName;
    }
    /**
     * @return The user&#39;s groups.
     * 
     */
    public List<String> groups() {
        return this.groups;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The user&#39;s keys.
     * 
     */
    public String keys() {
        return this.keys;
    }
    /**
     * @return The user&#39;s last name.
     * 
     */
    public String lastName() {
        return this.lastName;
    }
    public String userId() {
        return this.userId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUserResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetUserAcl> acls;
        private String comment;
        private String email;
        private Boolean enabled;
        private String expirationDate;
        private String firstName;
        private List<String> groups;
        private String id;
        private String keys;
        private String lastName;
        private String userId;
        public Builder() {}
        public Builder(GetUserResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.acls = defaults.acls;
    	      this.comment = defaults.comment;
    	      this.email = defaults.email;
    	      this.enabled = defaults.enabled;
    	      this.expirationDate = defaults.expirationDate;
    	      this.firstName = defaults.firstName;
    	      this.groups = defaults.groups;
    	      this.id = defaults.id;
    	      this.keys = defaults.keys;
    	      this.lastName = defaults.lastName;
    	      this.userId = defaults.userId;
        }

        @CustomType.Setter
        public Builder acls(List<GetUserAcl> acls) {
            this.acls = Objects.requireNonNull(acls);
            return this;
        }
        public Builder acls(GetUserAcl... acls) {
            return acls(List.of(acls));
        }
        @CustomType.Setter
        public Builder comment(String comment) {
            this.comment = Objects.requireNonNull(comment);
            return this;
        }
        @CustomType.Setter
        public Builder email(String email) {
            this.email = Objects.requireNonNull(email);
            return this;
        }
        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            this.enabled = Objects.requireNonNull(enabled);
            return this;
        }
        @CustomType.Setter
        public Builder expirationDate(String expirationDate) {
            this.expirationDate = Objects.requireNonNull(expirationDate);
            return this;
        }
        @CustomType.Setter
        public Builder firstName(String firstName) {
            this.firstName = Objects.requireNonNull(firstName);
            return this;
        }
        @CustomType.Setter
        public Builder groups(List<String> groups) {
            this.groups = Objects.requireNonNull(groups);
            return this;
        }
        public Builder groups(String... groups) {
            return groups(List.of(groups));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder keys(String keys) {
            this.keys = Objects.requireNonNull(keys);
            return this;
        }
        @CustomType.Setter
        public Builder lastName(String lastName) {
            this.lastName = Objects.requireNonNull(lastName);
            return this;
        }
        @CustomType.Setter
        public Builder userId(String userId) {
            this.userId = Objects.requireNonNull(userId);
            return this;
        }
        public GetUserResult build() {
            final var o = new GetUserResult();
            o.acls = acls;
            o.comment = comment;
            o.email = email;
            o.enabled = enabled;
            o.expirationDate = expirationDate;
            o.firstName = firstName;
            o.groups = groups;
            o.id = id;
            o.keys = keys;
            o.lastName = lastName;
            o.userId = userId;
            return o;
        }
    }
}
