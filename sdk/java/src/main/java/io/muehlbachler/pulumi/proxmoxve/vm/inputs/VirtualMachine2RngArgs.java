// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.muehlbachler.pulumi.proxmoxve.VM.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VirtualMachine2RngArgs extends com.pulumi.resources.ResourceArgs {

    public static final VirtualMachine2RngArgs Empty = new VirtualMachine2RngArgs();

    /**
     * Maximum bytes of entropy allowed to get injected into the guest every period. Use 0 to disable limiting (potentially dangerous).
     * 
     */
    @Import(name="maxBytes")
    private @Nullable Output<Integer> maxBytes;

    /**
     * @return Maximum bytes of entropy allowed to get injected into the guest every period. Use 0 to disable limiting (potentially dangerous).
     * 
     */
    public Optional<Output<Integer>> maxBytes() {
        return Optional.ofNullable(this.maxBytes);
    }

    /**
     * Period in milliseconds to limit entropy injection to the guest. Use 0 to disable limiting (potentially dangerous).
     * 
     */
    @Import(name="period")
    private @Nullable Output<Integer> period;

    /**
     * @return Period in milliseconds to limit entropy injection to the guest. Use 0 to disable limiting (potentially dangerous).
     * 
     */
    public Optional<Output<Integer>> period() {
        return Optional.ofNullable(this.period);
    }

    /**
     * The file on the host to gather entropy from. In most cases, `/dev/urandom` should be preferred over `/dev/random` to avoid entropy-starvation issues on the host.
     * 
     */
    @Import(name="source")
    private @Nullable Output<String> source;

    /**
     * @return The file on the host to gather entropy from. In most cases, `/dev/urandom` should be preferred over `/dev/random` to avoid entropy-starvation issues on the host.
     * 
     */
    public Optional<Output<String>> source() {
        return Optional.ofNullable(this.source);
    }

    private VirtualMachine2RngArgs() {}

    private VirtualMachine2RngArgs(VirtualMachine2RngArgs $) {
        this.maxBytes = $.maxBytes;
        this.period = $.period;
        this.source = $.source;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualMachine2RngArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualMachine2RngArgs $;

        public Builder() {
            $ = new VirtualMachine2RngArgs();
        }

        public Builder(VirtualMachine2RngArgs defaults) {
            $ = new VirtualMachine2RngArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param maxBytes Maximum bytes of entropy allowed to get injected into the guest every period. Use 0 to disable limiting (potentially dangerous).
         * 
         * @return builder
         * 
         */
        public Builder maxBytes(@Nullable Output<Integer> maxBytes) {
            $.maxBytes = maxBytes;
            return this;
        }

        /**
         * @param maxBytes Maximum bytes of entropy allowed to get injected into the guest every period. Use 0 to disable limiting (potentially dangerous).
         * 
         * @return builder
         * 
         */
        public Builder maxBytes(Integer maxBytes) {
            return maxBytes(Output.of(maxBytes));
        }

        /**
         * @param period Period in milliseconds to limit entropy injection to the guest. Use 0 to disable limiting (potentially dangerous).
         * 
         * @return builder
         * 
         */
        public Builder period(@Nullable Output<Integer> period) {
            $.period = period;
            return this;
        }

        /**
         * @param period Period in milliseconds to limit entropy injection to the guest. Use 0 to disable limiting (potentially dangerous).
         * 
         * @return builder
         * 
         */
        public Builder period(Integer period) {
            return period(Output.of(period));
        }

        /**
         * @param source The file on the host to gather entropy from. In most cases, `/dev/urandom` should be preferred over `/dev/random` to avoid entropy-starvation issues on the host.
         * 
         * @return builder
         * 
         */
        public Builder source(@Nullable Output<String> source) {
            $.source = source;
            return this;
        }

        /**
         * @param source The file on the host to gather entropy from. In most cases, `/dev/urandom` should be preferred over `/dev/random` to avoid entropy-starvation issues on the host.
         * 
         * @return builder
         * 
         */
        public Builder source(String source) {
            return source(Output.of(source));
        }

        public VirtualMachine2RngArgs build() {
            return $;
        }
    }

}
