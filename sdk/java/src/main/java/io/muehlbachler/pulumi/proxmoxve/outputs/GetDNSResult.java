// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.muehlbachler.pulumi.proxmoxve.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDNSResult {
    /**
     * @return The DNS search domain.
     * 
     */
    private String domain;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String nodeName;
    /**
     * @return The DNS servers.
     * 
     */
    private List<String> servers;

    private GetDNSResult() {}
    /**
     * @return The DNS search domain.
     * 
     */
    public String domain() {
        return this.domain;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String nodeName() {
        return this.nodeName;
    }
    /**
     * @return The DNS servers.
     * 
     */
    public List<String> servers() {
        return this.servers;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDNSResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String domain;
        private String id;
        private String nodeName;
        private List<String> servers;
        public Builder() {}
        public Builder(GetDNSResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.domain = defaults.domain;
    	      this.id = defaults.id;
    	      this.nodeName = defaults.nodeName;
    	      this.servers = defaults.servers;
        }

        @CustomType.Setter
        public Builder domain(String domain) {
            if (domain == null) {
              throw new MissingRequiredPropertyException("GetDNSResult", "domain");
            }
            this.domain = domain;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDNSResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder nodeName(String nodeName) {
            if (nodeName == null) {
              throw new MissingRequiredPropertyException("GetDNSResult", "nodeName");
            }
            this.nodeName = nodeName;
            return this;
        }
        @CustomType.Setter
        public Builder servers(List<String> servers) {
            if (servers == null) {
              throw new MissingRequiredPropertyException("GetDNSResult", "servers");
            }
            this.servers = servers;
            return this;
        }
        public Builder servers(String... servers) {
            return servers(List.of(servers));
        }
        public GetDNSResult build() {
            final var _resultValue = new GetDNSResult();
            _resultValue.domain = domain;
            _resultValue.id = id;
            _resultValue.nodeName = nodeName;
            _resultValue.servers = servers;
            return _resultValue;
        }
    }
}
