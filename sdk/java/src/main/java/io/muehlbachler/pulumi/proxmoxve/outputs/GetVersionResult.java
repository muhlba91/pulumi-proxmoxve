// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.muehlbachler.pulumi.proxmoxve.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetVersionResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String keyboardLayout;
    private String release;
    private String repositoryId;
    private String version;

    private GetVersionResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String keyboardLayout() {
        return this.keyboardLayout;
    }
    public String release() {
        return this.release;
    }
    public String repositoryId() {
        return this.repositoryId;
    }
    public String version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVersionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String keyboardLayout;
        private String release;
        private String repositoryId;
        private String version;
        public Builder() {}
        public Builder(GetVersionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.keyboardLayout = defaults.keyboardLayout;
    	      this.release = defaults.release;
    	      this.repositoryId = defaults.repositoryId;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder keyboardLayout(String keyboardLayout) {
            this.keyboardLayout = Objects.requireNonNull(keyboardLayout);
            return this;
        }
        @CustomType.Setter
        public Builder release(String release) {
            this.release = Objects.requireNonNull(release);
            return this;
        }
        @CustomType.Setter
        public Builder repositoryId(String repositoryId) {
            this.repositoryId = Objects.requireNonNull(repositoryId);
            return this;
        }
        @CustomType.Setter
        public Builder version(String version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }
        public GetVersionResult build() {
            final var o = new GetVersionResult();
            o.id = id;
            o.keyboardLayout = keyboardLayout;
            o.release = release;
            o.repositoryId = repositoryId;
            o.version = version;
            return o;
        }
    }
}
