// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.muehlbachler.pulumi.proxmoxve.VM.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VirtualMachineCpuArgs extends com.pulumi.resources.ResourceArgs {

    public static final VirtualMachineCpuArgs Empty = new VirtualMachineCpuArgs();

    @Import(name="architecture")
    private @Nullable Output<String> architecture;

    public Optional<Output<String>> architecture() {
        return Optional.ofNullable(this.architecture);
    }

    @Import(name="cores")
    private @Nullable Output<Integer> cores;

    public Optional<Output<Integer>> cores() {
        return Optional.ofNullable(this.cores);
    }

    @Import(name="flags")
    private @Nullable Output<List<String>> flags;

    public Optional<Output<List<String>>> flags() {
        return Optional.ofNullable(this.flags);
    }

    @Import(name="hotplugged")
    private @Nullable Output<Integer> hotplugged;

    public Optional<Output<Integer>> hotplugged() {
        return Optional.ofNullable(this.hotplugged);
    }

    @Import(name="numa")
    private @Nullable Output<Boolean> numa;

    public Optional<Output<Boolean>> numa() {
        return Optional.ofNullable(this.numa);
    }

    @Import(name="sockets")
    private @Nullable Output<Integer> sockets;

    public Optional<Output<Integer>> sockets() {
        return Optional.ofNullable(this.sockets);
    }

    @Import(name="type")
    private @Nullable Output<String> type;

    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    @Import(name="units")
    private @Nullable Output<Integer> units;

    public Optional<Output<Integer>> units() {
        return Optional.ofNullable(this.units);
    }

    private VirtualMachineCpuArgs() {}

    private VirtualMachineCpuArgs(VirtualMachineCpuArgs $) {
        this.architecture = $.architecture;
        this.cores = $.cores;
        this.flags = $.flags;
        this.hotplugged = $.hotplugged;
        this.numa = $.numa;
        this.sockets = $.sockets;
        this.type = $.type;
        this.units = $.units;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualMachineCpuArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualMachineCpuArgs $;

        public Builder() {
            $ = new VirtualMachineCpuArgs();
        }

        public Builder(VirtualMachineCpuArgs defaults) {
            $ = new VirtualMachineCpuArgs(Objects.requireNonNull(defaults));
        }

        public Builder architecture(@Nullable Output<String> architecture) {
            $.architecture = architecture;
            return this;
        }

        public Builder architecture(String architecture) {
            return architecture(Output.of(architecture));
        }

        public Builder cores(@Nullable Output<Integer> cores) {
            $.cores = cores;
            return this;
        }

        public Builder cores(Integer cores) {
            return cores(Output.of(cores));
        }

        public Builder flags(@Nullable Output<List<String>> flags) {
            $.flags = flags;
            return this;
        }

        public Builder flags(List<String> flags) {
            return flags(Output.of(flags));
        }

        public Builder flags(String... flags) {
            return flags(List.of(flags));
        }

        public Builder hotplugged(@Nullable Output<Integer> hotplugged) {
            $.hotplugged = hotplugged;
            return this;
        }

        public Builder hotplugged(Integer hotplugged) {
            return hotplugged(Output.of(hotplugged));
        }

        public Builder numa(@Nullable Output<Boolean> numa) {
            $.numa = numa;
            return this;
        }

        public Builder numa(Boolean numa) {
            return numa(Output.of(numa));
        }

        public Builder sockets(@Nullable Output<Integer> sockets) {
            $.sockets = sockets;
            return this;
        }

        public Builder sockets(Integer sockets) {
            return sockets(Output.of(sockets));
        }

        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public Builder units(@Nullable Output<Integer> units) {
            $.units = units;
            return this;
        }

        public Builder units(Integer units) {
            return units(Output.of(units));
        }

        public VirtualMachineCpuArgs build() {
            return $;
        }
    }

}
