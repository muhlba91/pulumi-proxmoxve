// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.muehlbachler.pulumi.proxmoxve.HA.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class HAResourceState extends com.pulumi.resources.ResourceArgs {

    public static final HAResourceState Empty = new HAResourceState();

    /**
     * The comment associated with this resource.
     * 
     */
    @Import(name="comment")
    private @Nullable Output<String> comment;

    /**
     * @return The comment associated with this resource.
     * 
     */
    public Optional<Output<String>> comment() {
        return Optional.ofNullable(this.comment);
    }

    /**
     * The identifier of the High Availability group this resource is a member of.
     * 
     */
    @Import(name="group")
    private @Nullable Output<String> group;

    /**
     * @return The identifier of the High Availability group this resource is a member of.
     * 
     */
    public Optional<Output<String>> group() {
        return Optional.ofNullable(this.group);
    }

    /**
     * The maximal number of relocation attempts.
     * 
     */
    @Import(name="maxRelocate")
    private @Nullable Output<Integer> maxRelocate;

    /**
     * @return The maximal number of relocation attempts.
     * 
     */
    public Optional<Output<Integer>> maxRelocate() {
        return Optional.ofNullable(this.maxRelocate);
    }

    /**
     * The maximal number of restart attempts.
     * 
     */
    @Import(name="maxRestart")
    private @Nullable Output<Integer> maxRestart;

    /**
     * @return The maximal number of restart attempts.
     * 
     */
    public Optional<Output<Integer>> maxRestart() {
        return Optional.ofNullable(this.maxRestart);
    }

    /**
     * The Proxmox HA resource identifier
     * 
     */
    @Import(name="resourceId")
    private @Nullable Output<String> resourceId;

    /**
     * @return The Proxmox HA resource identifier
     * 
     */
    public Optional<Output<String>> resourceId() {
        return Optional.ofNullable(this.resourceId);
    }

    /**
     * The desired state of the resource.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The desired state of the resource.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * The type of HA resources to create. If unset, it will be deduced from the `resource_id`.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The type of HA resources to create. If unset, it will be deduced from the `resource_id`.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private HAResourceState() {}

    private HAResourceState(HAResourceState $) {
        this.comment = $.comment;
        this.group = $.group;
        this.maxRelocate = $.maxRelocate;
        this.maxRestart = $.maxRestart;
        this.resourceId = $.resourceId;
        this.state = $.state;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HAResourceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HAResourceState $;

        public Builder() {
            $ = new HAResourceState();
        }

        public Builder(HAResourceState defaults) {
            $ = new HAResourceState(Objects.requireNonNull(defaults));
        }

        /**
         * @param comment The comment associated with this resource.
         * 
         * @return builder
         * 
         */
        public Builder comment(@Nullable Output<String> comment) {
            $.comment = comment;
            return this;
        }

        /**
         * @param comment The comment associated with this resource.
         * 
         * @return builder
         * 
         */
        public Builder comment(String comment) {
            return comment(Output.of(comment));
        }

        /**
         * @param group The identifier of the High Availability group this resource is a member of.
         * 
         * @return builder
         * 
         */
        public Builder group(@Nullable Output<String> group) {
            $.group = group;
            return this;
        }

        /**
         * @param group The identifier of the High Availability group this resource is a member of.
         * 
         * @return builder
         * 
         */
        public Builder group(String group) {
            return group(Output.of(group));
        }

        /**
         * @param maxRelocate The maximal number of relocation attempts.
         * 
         * @return builder
         * 
         */
        public Builder maxRelocate(@Nullable Output<Integer> maxRelocate) {
            $.maxRelocate = maxRelocate;
            return this;
        }

        /**
         * @param maxRelocate The maximal number of relocation attempts.
         * 
         * @return builder
         * 
         */
        public Builder maxRelocate(Integer maxRelocate) {
            return maxRelocate(Output.of(maxRelocate));
        }

        /**
         * @param maxRestart The maximal number of restart attempts.
         * 
         * @return builder
         * 
         */
        public Builder maxRestart(@Nullable Output<Integer> maxRestart) {
            $.maxRestart = maxRestart;
            return this;
        }

        /**
         * @param maxRestart The maximal number of restart attempts.
         * 
         * @return builder
         * 
         */
        public Builder maxRestart(Integer maxRestart) {
            return maxRestart(Output.of(maxRestart));
        }

        /**
         * @param resourceId The Proxmox HA resource identifier
         * 
         * @return builder
         * 
         */
        public Builder resourceId(@Nullable Output<String> resourceId) {
            $.resourceId = resourceId;
            return this;
        }

        /**
         * @param resourceId The Proxmox HA resource identifier
         * 
         * @return builder
         * 
         */
        public Builder resourceId(String resourceId) {
            return resourceId(Output.of(resourceId));
        }

        /**
         * @param state The desired state of the resource.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The desired state of the resource.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param type The type of HA resources to create. If unset, it will be deduced from the `resource_id`.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of HA resources to create. If unset, it will be deduced from the `resource_id`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public HAResourceState build() {
            return $;
        }
    }

}
