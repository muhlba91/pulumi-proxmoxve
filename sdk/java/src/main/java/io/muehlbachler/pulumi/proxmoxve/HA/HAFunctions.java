// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.muehlbachler.pulumi.proxmoxve.HA;

import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.resources.InvokeArgs;
import io.muehlbachler.pulumi.proxmoxve.HA.inputs.GetHAGroupArgs;
import io.muehlbachler.pulumi.proxmoxve.HA.inputs.GetHAGroupPlainArgs;
import io.muehlbachler.pulumi.proxmoxve.HA.inputs.GetHAResourceArgs;
import io.muehlbachler.pulumi.proxmoxve.HA.inputs.GetHAResourcePlainArgs;
import io.muehlbachler.pulumi.proxmoxve.HA.inputs.GetHAResourcesArgs;
import io.muehlbachler.pulumi.proxmoxve.HA.inputs.GetHAResourcesPlainArgs;
import io.muehlbachler.pulumi.proxmoxve.HA.outputs.GetHAGroupResult;
import io.muehlbachler.pulumi.proxmoxve.HA.outputs.GetHAGroupsResult;
import io.muehlbachler.pulumi.proxmoxve.HA.outputs.GetHAResourceResult;
import io.muehlbachler.pulumi.proxmoxve.HA.outputs.GetHAResourcesResult;
import io.muehlbachler.pulumi.proxmoxve.Utilities;
import java.util.concurrent.CompletableFuture;

public final class HAFunctions {
    /**
     * Retrieves information about a specific High Availability group.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetHAGroupResult> getHAGroup(GetHAGroupArgs args) {
        return getHAGroup(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves information about a specific High Availability group.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetHAGroupResult> getHAGroupPlain(GetHAGroupPlainArgs args) {
        return getHAGroupPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves information about a specific High Availability group.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetHAGroupResult> getHAGroup(GetHAGroupArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("proxmoxve:HA/getHAGroup:getHAGroup", TypeShape.of(GetHAGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves information about a specific High Availability group.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetHAGroupResult> getHAGroupPlain(GetHAGroupPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("proxmoxve:HA/getHAGroup:getHAGroup", TypeShape.of(GetHAGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves the list of High Availability groups.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.proxmoxve.HA.HAFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = HAFunctions.getHAGroups();
     * 
     *         ctx.export(&#34;dataProxmoxVirtualEnvironmentHagroups&#34;, example.applyValue(getHAGroupsResult -&gt; getHAGroupsResult.groupIds()));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetHAGroupsResult> getHAGroups() {
        return getHAGroups(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves the list of High Availability groups.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.proxmoxve.HA.HAFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = HAFunctions.getHAGroups();
     * 
     *         ctx.export(&#34;dataProxmoxVirtualEnvironmentHagroups&#34;, example.applyValue(getHAGroupsResult -&gt; getHAGroupsResult.groupIds()));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetHAGroupsResult> getHAGroupsPlain() {
        return getHAGroupsPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves the list of High Availability groups.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.proxmoxve.HA.HAFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = HAFunctions.getHAGroups();
     * 
     *         ctx.export(&#34;dataProxmoxVirtualEnvironmentHagroups&#34;, example.applyValue(getHAGroupsResult -&gt; getHAGroupsResult.groupIds()));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetHAGroupsResult> getHAGroups(InvokeArgs args) {
        return getHAGroups(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves the list of High Availability groups.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.proxmoxve.HA.HAFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = HAFunctions.getHAGroups();
     * 
     *         ctx.export(&#34;dataProxmoxVirtualEnvironmentHagroups&#34;, example.applyValue(getHAGroupsResult -&gt; getHAGroupsResult.groupIds()));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetHAGroupsResult> getHAGroupsPlain(InvokeArgs args) {
        return getHAGroupsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves the list of High Availability groups.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.proxmoxve.HA.HAFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = HAFunctions.getHAGroups();
     * 
     *         ctx.export(&#34;dataProxmoxVirtualEnvironmentHagroups&#34;, example.applyValue(getHAGroupsResult -&gt; getHAGroupsResult.groupIds()));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetHAGroupsResult> getHAGroups(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("proxmoxve:HA/getHAGroups:getHAGroups", TypeShape.of(GetHAGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves the list of High Availability groups.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.proxmoxve.HA.HAFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = HAFunctions.getHAGroups();
     * 
     *         ctx.export(&#34;dataProxmoxVirtualEnvironmentHagroups&#34;, example.applyValue(getHAGroupsResult -&gt; getHAGroupsResult.groupIds()));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetHAGroupsResult> getHAGroupsPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("proxmoxve:HA/getHAGroups:getHAGroups", TypeShape.of(GetHAGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves the list of High Availability resources.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetHAResourceResult> getHAResource(GetHAResourceArgs args) {
        return getHAResource(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves the list of High Availability resources.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetHAResourceResult> getHAResourcePlain(GetHAResourcePlainArgs args) {
        return getHAResourcePlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves the list of High Availability resources.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetHAResourceResult> getHAResource(GetHAResourceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("proxmoxve:HA/getHAResource:getHAResource", TypeShape.of(GetHAResourceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves the list of High Availability resources.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetHAResourceResult> getHAResourcePlain(GetHAResourcePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("proxmoxve:HA/getHAResource:getHAResource", TypeShape.of(GetHAResourceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves the list of High Availability resources.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.proxmoxve.HA.HAFunctions;
     * import com.pulumi.proxmoxve.HA.inputs.GetHAResourcesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAll = HAFunctions.getHAResources();
     * 
     *         final var exampleVm = HAFunctions.getHAResources(GetHAResourcesArgs.builder()
     *             .type(&#34;vm&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;dataProxmoxVirtualEnvironmentHaresources&#34;, %!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetHAResourcesResult> getHAResources() {
        return getHAResources(GetHAResourcesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves the list of High Availability resources.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.proxmoxve.HA.HAFunctions;
     * import com.pulumi.proxmoxve.HA.inputs.GetHAResourcesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAll = HAFunctions.getHAResources();
     * 
     *         final var exampleVm = HAFunctions.getHAResources(GetHAResourcesArgs.builder()
     *             .type(&#34;vm&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;dataProxmoxVirtualEnvironmentHaresources&#34;, %!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetHAResourcesResult> getHAResourcesPlain() {
        return getHAResourcesPlain(GetHAResourcesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves the list of High Availability resources.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.proxmoxve.HA.HAFunctions;
     * import com.pulumi.proxmoxve.HA.inputs.GetHAResourcesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAll = HAFunctions.getHAResources();
     * 
     *         final var exampleVm = HAFunctions.getHAResources(GetHAResourcesArgs.builder()
     *             .type(&#34;vm&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;dataProxmoxVirtualEnvironmentHaresources&#34;, %!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetHAResourcesResult> getHAResources(GetHAResourcesArgs args) {
        return getHAResources(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves the list of High Availability resources.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.proxmoxve.HA.HAFunctions;
     * import com.pulumi.proxmoxve.HA.inputs.GetHAResourcesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAll = HAFunctions.getHAResources();
     * 
     *         final var exampleVm = HAFunctions.getHAResources(GetHAResourcesArgs.builder()
     *             .type(&#34;vm&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;dataProxmoxVirtualEnvironmentHaresources&#34;, %!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetHAResourcesResult> getHAResourcesPlain(GetHAResourcesPlainArgs args) {
        return getHAResourcesPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves the list of High Availability resources.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.proxmoxve.HA.HAFunctions;
     * import com.pulumi.proxmoxve.HA.inputs.GetHAResourcesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAll = HAFunctions.getHAResources();
     * 
     *         final var exampleVm = HAFunctions.getHAResources(GetHAResourcesArgs.builder()
     *             .type(&#34;vm&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;dataProxmoxVirtualEnvironmentHaresources&#34;, %!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetHAResourcesResult> getHAResources(GetHAResourcesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("proxmoxve:HA/getHAResources:getHAResources", TypeShape.of(GetHAResourcesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves the list of High Availability resources.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.proxmoxve.HA.HAFunctions;
     * import com.pulumi.proxmoxve.HA.inputs.GetHAResourcesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAll = HAFunctions.getHAResources();
     * 
     *         final var exampleVm = HAFunctions.getHAResources(GetHAResourcesArgs.builder()
     *             .type(&#34;vm&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;dataProxmoxVirtualEnvironmentHaresources&#34;, %!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetHAResourcesResult> getHAResourcesPlain(GetHAResourcesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("proxmoxve:HA/getHAResources:getHAResources", TypeShape.of(GetHAResourcesResult.class), args, Utilities.withVersion(options));
    }
}
