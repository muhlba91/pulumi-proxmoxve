// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.muehlbachler.pulumi.proxmoxve.VM.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import io.muehlbachler.pulumi.proxmoxve.VM.outputs.GetVirtualMachinesVm;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetVirtualMachinesResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The node name.
     * 
     */
    private @Nullable String nodeName;
    /**
     * @return A list of tags of the VM.
     * 
     */
    private @Nullable List<String> tags;
    /**
     * @return The VMs list.
     * 
     */
    private List<GetVirtualMachinesVm> vms;

    private GetVirtualMachinesResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The node name.
     * 
     */
    public Optional<String> nodeName() {
        return Optional.ofNullable(this.nodeName);
    }
    /**
     * @return A list of tags of the VM.
     * 
     */
    public List<String> tags() {
        return this.tags == null ? List.of() : this.tags;
    }
    /**
     * @return The VMs list.
     * 
     */
    public List<GetVirtualMachinesVm> vms() {
        return this.vms;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVirtualMachinesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private @Nullable String nodeName;
        private @Nullable List<String> tags;
        private List<GetVirtualMachinesVm> vms;
        public Builder() {}
        public Builder(GetVirtualMachinesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.nodeName = defaults.nodeName;
    	      this.tags = defaults.tags;
    	      this.vms = defaults.vms;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetVirtualMachinesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder nodeName(@Nullable String nodeName) {

            this.nodeName = nodeName;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<String> tags) {

            this.tags = tags;
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder vms(List<GetVirtualMachinesVm> vms) {
            if (vms == null) {
              throw new MissingRequiredPropertyException("GetVirtualMachinesResult", "vms");
            }
            this.vms = vms;
            return this;
        }
        public Builder vms(GetVirtualMachinesVm... vms) {
            return vms(List.of(vms));
        }
        public GetVirtualMachinesResult build() {
            final var _resultValue = new GetVirtualMachinesResult();
            _resultValue.id = id;
            _resultValue.nodeName = nodeName;
            _resultValue.tags = tags;
            _resultValue.vms = vms;
            return _resultValue;
        }
    }
}
