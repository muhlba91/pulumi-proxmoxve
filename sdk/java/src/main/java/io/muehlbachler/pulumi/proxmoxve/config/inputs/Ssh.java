// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.muehlbachler.pulumi.proxmoxve.config.inputs;

import com.pulumi.core.annotations.CustomType;
import io.muehlbachler.pulumi.proxmoxve.config.outputs.SshNode;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class Ssh {
    /**
     * @return Whether to use the SSH agent for authentication. Defaults to `false`.
     * 
     */
    private @Nullable Boolean agent;
    /**
     * @return The path to the SSH agent socket. Defaults to the value of the `SSH_AUTH_SOCK` environment variable.
     * 
     */
    private @Nullable String agentSocket;
    /**
     * @return Overrides for SSH connection configuration for a Proxmox VE node.
     * 
     */
    private @Nullable List<SshNode> nodes;
    /**
     * @return The password used for the SSH connection. Defaults to the value of the `password` field of the `provider` block.
     * 
     */
    private @Nullable String password;
    /**
     * @return The password for the SOCKS5 proxy server. Defaults to the value of the `PROXMOX_VE_SSH_SOCKS5_PASSWORD` environment variable.
     * 
     */
    private @Nullable String socks5Password;
    /**
     * @return The address:port of the SOCKS5 proxy server. Defaults to the value of the `PROXMOX_VE_SSH_SOCKS5_SERVER` environment variable.
     * 
     */
    private @Nullable String socks5Server;
    /**
     * @return The username for the SOCKS5 proxy server. Defaults to the value of the `PROXMOX_VE_SSH_SOCKS5_USERNAME` environment variable.
     * 
     */
    private @Nullable String socks5Username;
    /**
     * @return The username used for the SSH connection. Defaults to the value of the `username` field of the `provider` block.
     * 
     */
    private @Nullable String username;

    private Ssh() {}
    /**
     * @return Whether to use the SSH agent for authentication. Defaults to `false`.
     * 
     */
    public Optional<Boolean> agent() {
        return Optional.ofNullable(this.agent);
    }
    /**
     * @return The path to the SSH agent socket. Defaults to the value of the `SSH_AUTH_SOCK` environment variable.
     * 
     */
    public Optional<String> agentSocket() {
        return Optional.ofNullable(this.agentSocket);
    }
    /**
     * @return Overrides for SSH connection configuration for a Proxmox VE node.
     * 
     */
    public List<SshNode> nodes() {
        return this.nodes == null ? List.of() : this.nodes;
    }
    /**
     * @return The password used for the SSH connection. Defaults to the value of the `password` field of the `provider` block.
     * 
     */
    public Optional<String> password() {
        return Optional.ofNullable(this.password);
    }
    /**
     * @return The password for the SOCKS5 proxy server. Defaults to the value of the `PROXMOX_VE_SSH_SOCKS5_PASSWORD` environment variable.
     * 
     */
    public Optional<String> socks5Password() {
        return Optional.ofNullable(this.socks5Password);
    }
    /**
     * @return The address:port of the SOCKS5 proxy server. Defaults to the value of the `PROXMOX_VE_SSH_SOCKS5_SERVER` environment variable.
     * 
     */
    public Optional<String> socks5Server() {
        return Optional.ofNullable(this.socks5Server);
    }
    /**
     * @return The username for the SOCKS5 proxy server. Defaults to the value of the `PROXMOX_VE_SSH_SOCKS5_USERNAME` environment variable.
     * 
     */
    public Optional<String> socks5Username() {
        return Optional.ofNullable(this.socks5Username);
    }
    /**
     * @return The username used for the SSH connection. Defaults to the value of the `username` field of the `provider` block.
     * 
     */
    public Optional<String> username() {
        return Optional.ofNullable(this.username);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(Ssh defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean agent;
        private @Nullable String agentSocket;
        private @Nullable List<SshNode> nodes;
        private @Nullable String password;
        private @Nullable String socks5Password;
        private @Nullable String socks5Server;
        private @Nullable String socks5Username;
        private @Nullable String username;
        public Builder() {}
        public Builder(Ssh defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.agent = defaults.agent;
    	      this.agentSocket = defaults.agentSocket;
    	      this.nodes = defaults.nodes;
    	      this.password = defaults.password;
    	      this.socks5Password = defaults.socks5Password;
    	      this.socks5Server = defaults.socks5Server;
    	      this.socks5Username = defaults.socks5Username;
    	      this.username = defaults.username;
        }

        @CustomType.Setter
        public Builder agent(@Nullable Boolean agent) {
            this.agent = agent;
            return this;
        }
        @CustomType.Setter
        public Builder agentSocket(@Nullable String agentSocket) {
            this.agentSocket = agentSocket;
            return this;
        }
        @CustomType.Setter
        public Builder nodes(@Nullable List<SshNode> nodes) {
            this.nodes = nodes;
            return this;
        }
        public Builder nodes(SshNode... nodes) {
            return nodes(List.of(nodes));
        }
        @CustomType.Setter
        public Builder password(@Nullable String password) {
            this.password = password;
            return this;
        }
        @CustomType.Setter
        public Builder socks5Password(@Nullable String socks5Password) {
            this.socks5Password = socks5Password;
            return this;
        }
        @CustomType.Setter
        public Builder socks5Server(@Nullable String socks5Server) {
            this.socks5Server = socks5Server;
            return this;
        }
        @CustomType.Setter
        public Builder socks5Username(@Nullable String socks5Username) {
            this.socks5Username = socks5Username;
            return this;
        }
        @CustomType.Setter
        public Builder username(@Nullable String username) {
            this.username = username;
            return this;
        }
        public Ssh build() {
            final var _resultValue = new Ssh();
            _resultValue.agent = agent;
            _resultValue.agentSocket = agentSocket;
            _resultValue.nodes = nodes;
            _resultValue.password = password;
            _resultValue.socks5Password = socks5Password;
            _resultValue.socks5Server = socks5Server;
            _resultValue.socks5Username = socks5Username;
            _resultValue.username = username;
            return _resultValue;
        }
    }
}
