// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.muehlbachler.pulumi.proxmoxve;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import io.muehlbachler.pulumi.proxmoxve.AcmeDnsPluginArgs;
import io.muehlbachler.pulumi.proxmoxve.Utilities;
import io.muehlbachler.pulumi.proxmoxve.inputs.AcmeDnsPluginState;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages an ACME plugin in a Proxmox VE cluster.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.proxmoxve.AcmeDnsPlugin;
 * import com.pulumi.proxmoxve.AcmeDnsPluginArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new AcmeDnsPlugin("example", AcmeDnsPluginArgs.builder()
 *             .api("aws")
 *             .data(Map.ofEntries(
 *                 Map.entry("AWS_ACCESS_KEY_ID", "EXAMPLE"),
 *                 Map.entry("AWS_SECRET_ACCESS_KEY", "EXAMPLE")
 *             ))
 *             .plugin("test")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * #!/usr/bin/env sh
 * 
 * ACME accounts can be imported using their name, e.g.:
 * 
 * ```sh
 * $ pulumi import proxmoxve:index/acmeDnsPlugin:AcmeDnsPlugin example test
 * ```
 * 
 */
@ResourceType(type="proxmoxve:index/acmeDnsPlugin:AcmeDnsPlugin")
public class AcmeDnsPlugin extends com.pulumi.resources.CustomResource {
    /**
     * API plugin name.
     * 
     */
    @Export(name="api", refs={String.class}, tree="[0]")
    private Output<String> api;

    /**
     * @return API plugin name.
     * 
     */
    public Output<String> api() {
        return this.api;
    }
    /**
     * DNS plugin data.
     * 
     */
    @Export(name="data", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> data;

    /**
     * @return DNS plugin data.
     * 
     */
    public Output<Optional<Map<String,String>>> data() {
        return Codegen.optional(this.data);
    }
    /**
     * SHA1 digest of the current configuration. Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.
     * 
     */
    @Export(name="digest", refs={String.class}, tree="[0]")
    private Output<String> digest;

    /**
     * @return SHA1 digest of the current configuration. Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.
     * 
     */
    public Output<String> digest() {
        return this.digest;
    }
    /**
     * Flag to disable the config.
     * 
     */
    @Export(name="disable", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> disable;

    /**
     * @return Flag to disable the config.
     * 
     */
    public Output<Optional<Boolean>> disable() {
        return Codegen.optional(this.disable);
    }
    /**
     * ACME Plugin ID name.
     * 
     */
    @Export(name="plugin", refs={String.class}, tree="[0]")
    private Output<String> plugin;

    /**
     * @return ACME Plugin ID name.
     * 
     */
    public Output<String> plugin() {
        return this.plugin;
    }
    /**
     * Extra delay in seconds to wait before requesting validation. Allows to cope with a long TTL of DNS records (0 - 172800).
     * 
     */
    @Export(name="validationDelay", refs={Integer.class}, tree="[0]")
    private Output<Integer> validationDelay;

    /**
     * @return Extra delay in seconds to wait before requesting validation. Allows to cope with a long TTL of DNS records (0 - 172800).
     * 
     */
    public Output<Integer> validationDelay() {
        return this.validationDelay;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AcmeDnsPlugin(java.lang.String name) {
        this(name, AcmeDnsPluginArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AcmeDnsPlugin(java.lang.String name, AcmeDnsPluginArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AcmeDnsPlugin(java.lang.String name, AcmeDnsPluginArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("proxmoxve:index/acmeDnsPlugin:AcmeDnsPlugin", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private AcmeDnsPlugin(java.lang.String name, Output<java.lang.String> id, @Nullable AcmeDnsPluginState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("proxmoxve:index/acmeDnsPlugin:AcmeDnsPlugin", name, state, makeResourceOptions(options, id), false);
    }

    private static AcmeDnsPluginArgs makeArgs(AcmeDnsPluginArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? AcmeDnsPluginArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AcmeDnsPlugin get(java.lang.String name, Output<java.lang.String> id, @Nullable AcmeDnsPluginState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AcmeDnsPlugin(name, id, state, options);
    }
}
