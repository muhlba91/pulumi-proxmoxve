// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.muehlbachler.pulumi.proxmoxve.Network;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import io.muehlbachler.pulumi.proxmoxve.Network.inputs.FirewallIPSetCidrArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FirewallIPSetArgs extends com.pulumi.resources.ResourceArgs {

    public static final FirewallIPSetArgs Empty = new FirewallIPSetArgs();

    /**
     * List of IP or Networks
     * 
     */
    @Import(name="cidrs")
    private @Nullable Output<List<FirewallIPSetCidrArgs>> cidrs;

    /**
     * @return List of IP or Networks
     * 
     */
    public Optional<Output<List<FirewallIPSetCidrArgs>>> cidrs() {
        return Optional.ofNullable(this.cidrs);
    }

    /**
     * IPSet comment
     * 
     */
    @Import(name="comment")
    private @Nullable Output<String> comment;

    /**
     * @return IPSet comment
     * 
     */
    public Optional<Output<String>> comment() {
        return Optional.ofNullable(this.comment);
    }

    /**
     * The ID of the container to manage the firewall for.
     * 
     */
    @Import(name="containerId")
    private @Nullable Output<Integer> containerId;

    /**
     * @return The ID of the container to manage the firewall for.
     * 
     */
    public Optional<Output<Integer>> containerId() {
        return Optional.ofNullable(this.containerId);
    }

    /**
     * IPSet name
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return IPSet name
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The name of the node.
     * 
     */
    @Import(name="nodeName")
    private @Nullable Output<String> nodeName;

    /**
     * @return The name of the node.
     * 
     */
    public Optional<Output<String>> nodeName() {
        return Optional.ofNullable(this.nodeName);
    }

    /**
     * The ID of the VM to manage the firewall for.
     * 
     */
    @Import(name="vmId")
    private @Nullable Output<Integer> vmId;

    /**
     * @return The ID of the VM to manage the firewall for.
     * 
     */
    public Optional<Output<Integer>> vmId() {
        return Optional.ofNullable(this.vmId);
    }

    private FirewallIPSetArgs() {}

    private FirewallIPSetArgs(FirewallIPSetArgs $) {
        this.cidrs = $.cidrs;
        this.comment = $.comment;
        this.containerId = $.containerId;
        this.name = $.name;
        this.nodeName = $.nodeName;
        this.vmId = $.vmId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FirewallIPSetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FirewallIPSetArgs $;

        public Builder() {
            $ = new FirewallIPSetArgs();
        }

        public Builder(FirewallIPSetArgs defaults) {
            $ = new FirewallIPSetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cidrs List of IP or Networks
         * 
         * @return builder
         * 
         */
        public Builder cidrs(@Nullable Output<List<FirewallIPSetCidrArgs>> cidrs) {
            $.cidrs = cidrs;
            return this;
        }

        /**
         * @param cidrs List of IP or Networks
         * 
         * @return builder
         * 
         */
        public Builder cidrs(List<FirewallIPSetCidrArgs> cidrs) {
            return cidrs(Output.of(cidrs));
        }

        /**
         * @param cidrs List of IP or Networks
         * 
         * @return builder
         * 
         */
        public Builder cidrs(FirewallIPSetCidrArgs... cidrs) {
            return cidrs(List.of(cidrs));
        }

        /**
         * @param comment IPSet comment
         * 
         * @return builder
         * 
         */
        public Builder comment(@Nullable Output<String> comment) {
            $.comment = comment;
            return this;
        }

        /**
         * @param comment IPSet comment
         * 
         * @return builder
         * 
         */
        public Builder comment(String comment) {
            return comment(Output.of(comment));
        }

        /**
         * @param containerId The ID of the container to manage the firewall for.
         * 
         * @return builder
         * 
         */
        public Builder containerId(@Nullable Output<Integer> containerId) {
            $.containerId = containerId;
            return this;
        }

        /**
         * @param containerId The ID of the container to manage the firewall for.
         * 
         * @return builder
         * 
         */
        public Builder containerId(Integer containerId) {
            return containerId(Output.of(containerId));
        }

        /**
         * @param name IPSet name
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name IPSet name
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param nodeName The name of the node.
         * 
         * @return builder
         * 
         */
        public Builder nodeName(@Nullable Output<String> nodeName) {
            $.nodeName = nodeName;
            return this;
        }

        /**
         * @param nodeName The name of the node.
         * 
         * @return builder
         * 
         */
        public Builder nodeName(String nodeName) {
            return nodeName(Output.of(nodeName));
        }

        /**
         * @param vmId The ID of the VM to manage the firewall for.
         * 
         * @return builder
         * 
         */
        public Builder vmId(@Nullable Output<Integer> vmId) {
            $.vmId = vmId;
            return this;
        }

        /**
         * @param vmId The ID of the VM to manage the firewall for.
         * 
         * @return builder
         * 
         */
        public Builder vmId(Integer vmId) {
            return vmId(Output.of(vmId));
        }

        public FirewallIPSetArgs build() {
            return $;
        }
    }

}
