// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as utilities from "../../utilities";

/**
 * Retrieves a directory mapping from a Proxmox VE cluster.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as proxmoxve from "@pulumi/proxmoxve";
 *
 * const example = proxmoxve.Hardware.mapping.getDir({
 *     name: "example",
 * });
 * export const dataProxmoxVirtualEnvironmentHardwareMappingDir = example;
 * ```
 */
export function getDir(args: GetDirArgs, opts?: pulumi.InvokeOptions): Promise<GetDirResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("proxmoxve:Hardware/mapping/getDir:getDir", {
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getDir.
 */
export interface GetDirArgs {
    /**
     * The name of this directory mapping.
     */
    name: string;
}

/**
 * A collection of values returned by getDir.
 */
export interface GetDirResult {
    /**
     * The comment of this directory mapping.
     */
    readonly comment: string;
    /**
     * The unique identifier of this directory mapping data source.
     */
    readonly id: string;
    /**
     * The actual map of devices for the directory mapping.
     */
    readonly maps: outputs.Hardware.mapping.GetDirMap[];
    /**
     * The name of this directory mapping.
     */
    readonly name: string;
}
/**
 * Retrieves a directory mapping from a Proxmox VE cluster.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as proxmoxve from "@pulumi/proxmoxve";
 *
 * const example = proxmoxve.Hardware.mapping.getDir({
 *     name: "example",
 * });
 * export const dataProxmoxVirtualEnvironmentHardwareMappingDir = example;
 * ```
 */
export function getDirOutput(args: GetDirOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDirResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("proxmoxve:Hardware/mapping/getDir:getDir", {
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getDir.
 */
export interface GetDirOutputArgs {
    /**
     * The name of this directory mapping.
     */
    name: pulumi.Input<string>;
}
