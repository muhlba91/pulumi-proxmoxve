// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { DirArgs, DirState } from "./dir";
export type Dir = import("./dir").Dir;
export const Dir: typeof import("./dir").Dir = null as any;
utilities.lazyLoad(exports, ["Dir"], () => require("./dir"));

export { GetDirArgs, GetDirResult, GetDirOutputArgs } from "./getDir";
export const getDir: typeof import("./getDir").getDir = null as any;
export const getDirOutput: typeof import("./getDir").getDirOutput = null as any;
utilities.lazyLoad(exports, ["getDir","getDirOutput"], () => require("./getDir"));

export { GetPciArgs, GetPciResult, GetPciOutputArgs } from "./getPci";
export const getPci: typeof import("./getPci").getPci = null as any;
export const getPciOutput: typeof import("./getPci").getPciOutput = null as any;
utilities.lazyLoad(exports, ["getPci","getPciOutput"], () => require("./getPci"));

export { GetUsbArgs, GetUsbResult, GetUsbOutputArgs } from "./getUsb";
export const getUsb: typeof import("./getUsb").getUsb = null as any;
export const getUsbOutput: typeof import("./getUsb").getUsbOutput = null as any;
utilities.lazyLoad(exports, ["getUsb","getUsbOutput"], () => require("./getUsb"));

export { PciArgs, PciState } from "./pci";
export type Pci = import("./pci").Pci;
export const Pci: typeof import("./pci").Pci = null as any;
utilities.lazyLoad(exports, ["Pci"], () => require("./pci"));

export { UsbArgs, UsbState } from "./usb";
export type Usb = import("./usb").Usb;
export const Usb: typeof import("./usb").Usb = null as any;
utilities.lazyLoad(exports, ["Usb"], () => require("./usb"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "proxmoxve:Hardware/mapping/dir:Dir":
                return new Dir(name, <any>undefined, { urn })
            case "proxmoxve:Hardware/mapping/pci:Pci":
                return new Pci(name, <any>undefined, { urn })
            case "proxmoxve:Hardware/mapping/usb:Usb":
                return new Usb(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("proxmoxve", "Hardware/mapping/dir", _module)
pulumi.runtime.registerResourceModule("proxmoxve", "Hardware/mapping/pci", _module)
pulumi.runtime.registerResourceModule("proxmoxve", "Hardware/mapping/usb", _module)
