// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Retrieves API version details.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as proxmoxve from "@pulumi/proxmoxve";
 *
 * const example = proxmoxve.getVersion({});
 * export const dataProxmoxVirtualEnvironmentVersion = {
 *     release: example.then(example => example.release),
 *     repository_id: example.then(example => example.repositoryId),
 *     version: example.then(example => example.version),
 * };
 * ```
 */
export function getVersion(opts?: pulumi.InvokeOptions): Promise<GetVersionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("proxmoxve:index/getVersion:getVersion", {
    }, opts);
}

/**
 * A collection of values returned by getVersion.
 */
export interface GetVersionResult {
    /**
     * Placeholder identifier attribute.
     */
    readonly id: string;
    /**
     * The current Proxmox VE point release in `x.y` format.
     */
    readonly release: string;
    /**
     * The short git revision from which this version was build.
     */
    readonly repositoryId: string;
    /**
     * The full pve-manager package version of this node.
     */
    readonly version: string;
}
/**
 * Retrieves API version details.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as proxmoxve from "@pulumi/proxmoxve";
 *
 * const example = proxmoxve.getVersion({});
 * export const dataProxmoxVirtualEnvironmentVersion = {
 *     release: example.then(example => example.release),
 *     repository_id: example.then(example => example.repositoryId),
 *     version: example.then(example => example.version),
 * };
 * ```
 */
export function getVersionOutput(opts?: pulumi.InvokeOptions): pulumi.Output<GetVersionResult> {
    return pulumi.output(getVersion(opts))
}
