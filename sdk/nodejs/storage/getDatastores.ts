// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Retrieves information about all the datastores available to a specific node.
 */
export function getDatastores(args: GetDatastoresArgs, opts?: pulumi.InvokeOptions): Promise<GetDatastoresResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("proxmoxve:Storage/getDatastores:getDatastores", {
        "datastores": args.datastores,
        "filters": args.filters,
        "nodeName": args.nodeName,
    }, opts);
}

/**
 * A collection of arguments for invoking getDatastores.
 */
export interface GetDatastoresArgs {
    /**
     * The list of datastores.
     */
    datastores?: inputs.Storage.GetDatastoresDatastore[];
    /**
     * The filters to apply to the stores.
     */
    filters?: inputs.Storage.GetDatastoresFilters;
    /**
     * The name of the node to retrieve the stores from.
     */
    nodeName: string;
}

/**
 * A collection of values returned by getDatastores.
 */
export interface GetDatastoresResult {
    /**
     * The list of datastores.
     */
    readonly datastores?: outputs.Storage.GetDatastoresDatastore[];
    /**
     * The filters to apply to the stores.
     */
    readonly filters?: outputs.Storage.GetDatastoresFilters;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The name of the node to retrieve the stores from.
     */
    readonly nodeName: string;
}
/**
 * Retrieves information about all the datastores available to a specific node.
 */
export function getDatastoresOutput(args: GetDatastoresOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDatastoresResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("proxmoxve:Storage/getDatastores:getDatastores", {
        "datastores": args.datastores,
        "filters": args.filters,
        "nodeName": args.nodeName,
    }, opts);
}

/**
 * A collection of arguments for invoking getDatastores.
 */
export interface GetDatastoresOutputArgs {
    /**
     * The list of datastores.
     */
    datastores?: pulumi.Input<pulumi.Input<inputs.Storage.GetDatastoresDatastoreArgs>[]>;
    /**
     * The filters to apply to the stores.
     */
    filters?: pulumi.Input<inputs.Storage.GetDatastoresFiltersArgs>;
    /**
     * The name of the node to retrieve the stores from.
     */
    nodeName: pulumi.Input<string>;
}
