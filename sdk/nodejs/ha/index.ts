// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetHAGroupArgs, GetHAGroupResult, GetHAGroupOutputArgs } from "./getHAGroup";
export const getHAGroup: typeof import("./getHAGroup").getHAGroup = null as any;
export const getHAGroupOutput: typeof import("./getHAGroup").getHAGroupOutput = null as any;
utilities.lazyLoad(exports, ["getHAGroup","getHAGroupOutput"], () => require("./getHAGroup"));

export { GetHAGroupsResult } from "./getHAGroups";
export const getHAGroups: typeof import("./getHAGroups").getHAGroups = null as any;
export const getHAGroupsOutput: typeof import("./getHAGroups").getHAGroupsOutput = null as any;
utilities.lazyLoad(exports, ["getHAGroups","getHAGroupsOutput"], () => require("./getHAGroups"));

export { GetHAResourceArgs, GetHAResourceResult, GetHAResourceOutputArgs } from "./getHAResource";
export const getHAResource: typeof import("./getHAResource").getHAResource = null as any;
export const getHAResourceOutput: typeof import("./getHAResource").getHAResourceOutput = null as any;
utilities.lazyLoad(exports, ["getHAResource","getHAResourceOutput"], () => require("./getHAResource"));

export { GetHAResourcesArgs, GetHAResourcesResult, GetHAResourcesOutputArgs } from "./getHAResources";
export const getHAResources: typeof import("./getHAResources").getHAResources = null as any;
export const getHAResourcesOutput: typeof import("./getHAResources").getHAResourcesOutput = null as any;
utilities.lazyLoad(exports, ["getHAResources","getHAResourcesOutput"], () => require("./getHAResources"));

export { HAGroupArgs, HAGroupState } from "./hagroup";
export type HAGroup = import("./hagroup").HAGroup;
export const HAGroup: typeof import("./hagroup").HAGroup = null as any;
utilities.lazyLoad(exports, ["HAGroup"], () => require("./hagroup"));

export { HAResourceArgs, HAResourceState } from "./haresource";
export type HAResource = import("./haresource").HAResource;
export const HAResource: typeof import("./haresource").HAResource = null as any;
utilities.lazyLoad(exports, ["HAResource"], () => require("./haresource"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "proxmoxve:HA/hAGroup:HAGroup":
                return new HAGroup(name, <any>undefined, { urn })
            case "proxmoxve:HA/hAResource:HAResource":
                return new HAResource(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("proxmoxve", "HA/hAGroup", _module)
pulumi.runtime.registerResourceModule("proxmoxve", "HA/hAResource", _module)
