// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Manages the time for a specific node.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as proxmoxve from "@muhlba91/pulumi-proxmoxve";
 *
 * const firstNodeTime = new proxmoxve.Time("firstNodeTime", {
 *     nodeName: "first-node",
 *     timeZone: "UTC",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * Instances can be imported using the `node_name`, e.g.,
 *
 * bash
 *
 * ```sh
 * $ pulumi import proxmoxve:index/time:Time first_node first-node
 * ```
 */
export class Time extends pulumi.CustomResource {
    /**
     * Get an existing Time resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TimeState, opts?: pulumi.CustomResourceOptions): Time {
        return new Time(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'proxmoxve:index/time:Time';

    /**
     * Returns true if the given object is an instance of Time.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Time {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Time.__pulumiType;
    }

    /**
     * The node's local time.
     */
    public /*out*/ readonly localTime!: pulumi.Output<string>;
    /**
     * A node name.
     */
    public readonly nodeName!: pulumi.Output<string>;
    /**
     * The node's time zone.
     */
    public readonly timeZone!: pulumi.Output<string>;
    /**
     * The node's local time formatted as UTC.
     */
    public /*out*/ readonly utcTime!: pulumi.Output<string>;

    /**
     * Create a Time resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TimeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TimeArgs | TimeState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TimeState | undefined;
            resourceInputs["localTime"] = state ? state.localTime : undefined;
            resourceInputs["nodeName"] = state ? state.nodeName : undefined;
            resourceInputs["timeZone"] = state ? state.timeZone : undefined;
            resourceInputs["utcTime"] = state ? state.utcTime : undefined;
        } else {
            const args = argsOrState as TimeArgs | undefined;
            if ((!args || args.nodeName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'nodeName'");
            }
            if ((!args || args.timeZone === undefined) && !opts.urn) {
                throw new Error("Missing required property 'timeZone'");
            }
            resourceInputs["nodeName"] = args ? args.nodeName : undefined;
            resourceInputs["timeZone"] = args ? args.timeZone : undefined;
            resourceInputs["localTime"] = undefined /*out*/;
            resourceInputs["utcTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Time.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Time resources.
 */
export interface TimeState {
    /**
     * The node's local time.
     */
    localTime?: pulumi.Input<string>;
    /**
     * A node name.
     */
    nodeName?: pulumi.Input<string>;
    /**
     * The node's time zone.
     */
    timeZone?: pulumi.Input<string>;
    /**
     * The node's local time formatted as UTC.
     */
    utcTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Time resource.
 */
export interface TimeArgs {
    /**
     * A node name.
     */
    nodeName: pulumi.Input<string>;
    /**
     * The node's time zone.
     */
    timeZone: pulumi.Input<string>;
}
