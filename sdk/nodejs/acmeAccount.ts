// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Manages an ACME account in a Proxmox VE cluster.
 *
 * > This resource requires `root@pam` authentication.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as proxmoxve from "@muhlba91/pulumi-proxmoxve";
 *
 * const example = new proxmoxve.AcmeAccount("example", {
 *     contact: "example@email.com",
 *     directory: "https://acme-staging-v02.api.letsencrypt.org/directory",
 *     tos: "https://letsencrypt.org/documents/LE-SA-v1.3-September-21-2022.pdf",
 * });
 * ```
 *
 * ## Import
 *
 * #!/usr/bin/env sh
 *
 * ACME accounts can be imported using their name, e.g.:
 *
 * ```sh
 * $ pulumi import proxmoxve:index/acmeAccount:AcmeAccount example example
 * ```
 */
export class AcmeAccount extends pulumi.CustomResource {
    /**
     * Get an existing AcmeAccount resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AcmeAccountState, opts?: pulumi.CustomResourceOptions): AcmeAccount {
        return new AcmeAccount(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'proxmoxve:index/acmeAccount:AcmeAccount';

    /**
     * Returns true if the given object is an instance of AcmeAccount.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AcmeAccount {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AcmeAccount.__pulumiType;
    }

    /**
     * The contact email addresses.
     */
    declare public readonly contact: pulumi.Output<string>;
    /**
     * The timestamp of the ACME account creation.
     */
    declare public /*out*/ readonly createdAt: pulumi.Output<string>;
    /**
     * The URL of the ACME CA directory endpoint.
     */
    declare public readonly directory: pulumi.Output<string | undefined>;
    /**
     * The HMAC key for External Account Binding.
     */
    declare public readonly eabHmacKey: pulumi.Output<string | undefined>;
    /**
     * The Key Identifier for External Account Binding.
     */
    declare public readonly eabKid: pulumi.Output<string | undefined>;
    /**
     * The location of the ACME account.
     */
    declare public /*out*/ readonly location: pulumi.Output<string>;
    /**
     * The ACME account config file name.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The URL of CA TermsOfService - setting this indicates agreement.
     */
    declare public readonly tos: pulumi.Output<string | undefined>;

    /**
     * Create a AcmeAccount resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AcmeAccountArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AcmeAccountArgs | AcmeAccountState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AcmeAccountState | undefined;
            resourceInputs["contact"] = state?.contact;
            resourceInputs["createdAt"] = state?.createdAt;
            resourceInputs["directory"] = state?.directory;
            resourceInputs["eabHmacKey"] = state?.eabHmacKey;
            resourceInputs["eabKid"] = state?.eabKid;
            resourceInputs["location"] = state?.location;
            resourceInputs["name"] = state?.name;
            resourceInputs["tos"] = state?.tos;
        } else {
            const args = argsOrState as AcmeAccountArgs | undefined;
            if (args?.contact === undefined && !opts.urn) {
                throw new Error("Missing required property 'contact'");
            }
            resourceInputs["contact"] = args?.contact;
            resourceInputs["directory"] = args?.directory;
            resourceInputs["eabHmacKey"] = args?.eabHmacKey;
            resourceInputs["eabKid"] = args?.eabKid;
            resourceInputs["name"] = args?.name;
            resourceInputs["tos"] = args?.tos;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AcmeAccount.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AcmeAccount resources.
 */
export interface AcmeAccountState {
    /**
     * The contact email addresses.
     */
    contact?: pulumi.Input<string>;
    /**
     * The timestamp of the ACME account creation.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The URL of the ACME CA directory endpoint.
     */
    directory?: pulumi.Input<string>;
    /**
     * The HMAC key for External Account Binding.
     */
    eabHmacKey?: pulumi.Input<string>;
    /**
     * The Key Identifier for External Account Binding.
     */
    eabKid?: pulumi.Input<string>;
    /**
     * The location of the ACME account.
     */
    location?: pulumi.Input<string>;
    /**
     * The ACME account config file name.
     */
    name?: pulumi.Input<string>;
    /**
     * The URL of CA TermsOfService - setting this indicates agreement.
     */
    tos?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AcmeAccount resource.
 */
export interface AcmeAccountArgs {
    /**
     * The contact email addresses.
     */
    contact: pulumi.Input<string>;
    /**
     * The URL of the ACME CA directory endpoint.
     */
    directory?: pulumi.Input<string>;
    /**
     * The HMAC key for External Account Binding.
     */
    eabHmacKey?: pulumi.Input<string>;
    /**
     * The Key Identifier for External Account Binding.
     */
    eabKid?: pulumi.Input<string>;
    /**
     * The ACME account config file name.
     */
    name?: pulumi.Input<string>;
    /**
     * The URL of CA TermsOfService - setting this indicates agreement.
     */
    tos?: pulumi.Input<string>;
}
