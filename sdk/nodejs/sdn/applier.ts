// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * **EXPERIMENTAL** Triggers Proxmox's SDN **Apply** (equivalent to `PUT /cluster/sdn`).Intended to be used with `replaceTriggeredBy` so it runs after SDN objects change.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as proxmoxve from "@muhlba91/pulumi-proxmoxve";
 *
 * const finalizer = new proxmoxve.sdn.Applier("finalizer", {});
 * // SDN Zone (Simple) - First zone for applier demonstration
 * const exampleZone1 = new proxmoxve.sdnzone.Simple("exampleZone1", {
 *     zoneId: "zone1",
 *     nodes: ["pve"],
 *     mtu: 1500,
 *     dns: "1.1.1.1",
 *     dnsZone: "example.com",
 *     ipam: "pve",
 *     reverseDns: "1.1.1.1",
 * }, {
 *     dependsOn: [finalizer],
 * });
 * // SDN Zone (Simple) - Second zone for applier demonstration
 * const exampleZone2 = new proxmoxve.sdnzone.Simple("exampleZone2", {
 *     zoneId: "zone2",
 *     nodes: ["pve"],
 *     mtu: 1500,
 * }, {
 *     dependsOn: [finalizer],
 * });
 * // SDN Applier - Applies SDN configuration changes
 * const exampleApplier = new proxmoxve.sdn.Applier("exampleApplier", {}, {
 *     dependsOn: [
 *         exampleZone1,
 *         exampleZone2,
 *     ],
 * });
 * ```
 */
export class Applier extends pulumi.CustomResource {
    /**
     * Get an existing Applier resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApplierState, opts?: pulumi.CustomResourceOptions): Applier {
        return new Applier(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'proxmoxve:Sdn/applier:Applier';

    /**
     * Returns true if the given object is an instance of Applier.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Applier {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Applier.__pulumiType;
    }


    /**
     * Create a Applier resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ApplierArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApplierArgs | ApplierState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApplierState | undefined;
        } else {
            const args = argsOrState as ApplierArgs | undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Applier.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Applier resources.
 */
export interface ApplierState {
}

/**
 * The set of arguments for constructing a Applier resource.
 */
export interface ApplierArgs {
}
