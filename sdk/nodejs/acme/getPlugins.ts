// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Retrieves the list of ACME plugins.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as proxmoxve from "@pulumi/proxmoxve";
 *
 * const example = proxmoxve.Acme.getPlugins({});
 * export const dataProxmoxVirtualEnvironmentAcmePlugins = example.then(example => example.plugins);
 * ```
 */
export function getPlugins(opts?: pulumi.InvokeOptions): Promise<GetPluginsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("proxmoxve:Acme/getPlugins:getPlugins", {
    }, opts);
}

/**
 * A collection of values returned by getPlugins.
 */
export interface GetPluginsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * List of ACME plugins
     */
    readonly plugins: outputs.Acme.GetPluginsPlugin[];
}
/**
 * Retrieves the list of ACME plugins.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as proxmoxve from "@pulumi/proxmoxve";
 *
 * const example = proxmoxve.Acme.getPlugins({});
 * export const dataProxmoxVirtualEnvironmentAcmePlugins = example.then(example => example.plugins);
 * ```
 */
export function getPluginsOutput(opts?: pulumi.InvokeOptions): pulumi.Output<GetPluginsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("proxmoxve:Acme/getPlugins:getPlugins", {
    }, opts);
}
