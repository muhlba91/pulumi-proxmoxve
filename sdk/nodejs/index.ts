// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

// Export members:
export * from "./certifi";
export * from "./dns";
export * from "./getDNS";
export * from "./getHosts";
export * from "./getTime";
export * from "./getVersion";
export * from "./hosts";
export * from "./provider";
export * from "./time";

// Export sub-modules:
import * as cluster from "./cluster";
import * as config from "./config";
import * as ct from "./ct";
import * as permission from "./permission";
import * as storage from "./storage";
import * as types from "./types";
import * as vm from "./vm";

export {
    cluster,
    config,
    ct,
    permission,
    storage,
    types,
    vm,
};

// Import resources to register:
import { Certifi } from "./certifi";
import { DNS } from "./dns";
import { Hosts } from "./hosts";
import { Time } from "./time";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "proxmoxve:index/certifi:Certifi":
                return new Certifi(name, <any>undefined, { urn })
            case "proxmoxve:index/dNS:DNS":
                return new DNS(name, <any>undefined, { urn })
            case "proxmoxve:index/hosts:Hosts":
                return new Hosts(name, <any>undefined, { urn })
            case "proxmoxve:index/time:Time":
                return new Time(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("proxmoxve", "index/certifi", _module)
pulumi.runtime.registerResourceModule("proxmoxve", "index/dNS", _module)
pulumi.runtime.registerResourceModule("proxmoxve", "index/hosts", _module)
pulumi.runtime.registerResourceModule("proxmoxve", "index/time", _module)

import { Provider } from "./provider";

pulumi.runtime.registerResourcePackage("proxmoxve", {
    version: utilities.getVersion(),
    constructProvider: (name: string, type: string, urn: string): pulumi.ProviderResource => {
        if (type !== "pulumi:providers:proxmoxve") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new Provider(name, <any>undefined, { urn });
    },
});
