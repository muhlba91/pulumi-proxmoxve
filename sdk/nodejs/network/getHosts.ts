// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Retrieves all the host entries from a specific node.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as proxmoxve from "@pulumi/proxmoxve";
 *
 * const firstNodeHostEntries = proxmoxve.Network.getHosts({
 *     nodeName: "first-node",
 * });
 * ```
 */
export function getHosts(args: GetHostsArgs, opts?: pulumi.InvokeOptions): Promise<GetHostsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("proxmoxve:Network/getHosts:getHosts", {
        "nodeName": args.nodeName,
    }, opts);
}

/**
 * A collection of arguments for invoking getHosts.
 */
export interface GetHostsArgs {
    /**
     * A node name.
     */
    nodeName: string;
}

/**
 * A collection of values returned by getHosts.
 */
export interface GetHostsResult {
    /**
     * The IP addresses.
     */
    readonly addresses: string[];
    /**
     * The SHA1 digest.
     */
    readonly digest: string;
    /**
     * The host entries (conversion of `addresses` and `hostnames` into
     * objects).
     */
    readonly entries: outputs.Network.GetHostsEntry[];
    /**
     * The hostnames associated with each of the IP addresses.
     */
    readonly hostnames: string[][];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly nodeName: string;
}
/**
 * Retrieves all the host entries from a specific node.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as proxmoxve from "@pulumi/proxmoxve";
 *
 * const firstNodeHostEntries = proxmoxve.Network.getHosts({
 *     nodeName: "first-node",
 * });
 * ```
 */
export function getHostsOutput(args: GetHostsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetHostsResult> {
    return pulumi.output(args).apply((a: any) => getHosts(a, opts))
}

/**
 * A collection of arguments for invoking getHosts.
 */
export interface GetHostsOutputArgs {
    /**
     * A node name.
     */
    nodeName: pulumi.Input<string>;
}
