// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a Linux VLAN network interface in a Proxmox VE node.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as proxmoxve from "@muhlba91/pulumi-proxmoxve";
 *
 * // using VLAN tag
 * const vlan99 = new proxmoxve.network.NetworkVlan("vlan99", {
 *     comment: "VLAN 99",
 *     nodeName: "pve",
 * });
 * // using custom network interface name
 * const vlan98 = new proxmoxve.network.NetworkVlan("vlan98", {
 *     comment: "VLAN 98",
 *     "interface": "eno0",
 *     nodeName: "pve",
 *     vlan: 98,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * #!/usr/bin/env sh
 *
 * #Interfaces can be imported using the `node_name:iface` format, e.g.
 *
 * ```sh
 * $ pulumi import proxmoxve:Network/networkVlan:NetworkVlan vlan99 pve:vlan99
 * ```
 */
export class NetworkVlan extends pulumi.CustomResource {
    /**
     * Get an existing NetworkVlan resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworkVlanState, opts?: pulumi.CustomResourceOptions): NetworkVlan {
        return new NetworkVlan(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'proxmoxve:Network/networkVlan:NetworkVlan';

    /**
     * Returns true if the given object is an instance of NetworkVlan.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NetworkVlan {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NetworkVlan.__pulumiType;
    }

    /**
     * The interface IPv4/CIDR address.
     */
    public readonly address!: pulumi.Output<string | undefined>;
    /**
     * The interface IPv6/CIDR address.
     */
    public readonly address6!: pulumi.Output<string | undefined>;
    /**
     * Automatically start interface on boot (defaults to `true`).
     */
    public readonly autostart!: pulumi.Output<boolean>;
    /**
     * Comment for the interface.
     */
    public readonly comment!: pulumi.Output<string | undefined>;
    /**
     * Default gateway address.
     */
    public readonly gateway!: pulumi.Output<string | undefined>;
    /**
     * Default IPv6 gateway address.
     */
    public readonly gateway6!: pulumi.Output<string | undefined>;
    /**
     * The VLAN raw device. See also `name`.
     */
    public readonly interface!: pulumi.Output<string>;
    /**
     * The interface MTU.
     */
    public readonly mtu!: pulumi.Output<number | undefined>;
    /**
     * The interface name. Either add the VLAN tag number to an existing interface name, e.g. `ens18.21` (and do not set `interface` and `vlan`), or use custom name, e.g. `vlanLab` (`interface` and `vlan` are then required).
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The name of the node.
     */
    public readonly nodeName!: pulumi.Output<string>;
    /**
     * The VLAN tag. See also `name`.
     */
    public readonly vlan!: pulumi.Output<number>;

    /**
     * Create a NetworkVlan resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkVlanArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetworkVlanArgs | NetworkVlanState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NetworkVlanState | undefined;
            resourceInputs["address"] = state ? state.address : undefined;
            resourceInputs["address6"] = state ? state.address6 : undefined;
            resourceInputs["autostart"] = state ? state.autostart : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["gateway"] = state ? state.gateway : undefined;
            resourceInputs["gateway6"] = state ? state.gateway6 : undefined;
            resourceInputs["interface"] = state ? state.interface : undefined;
            resourceInputs["mtu"] = state ? state.mtu : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nodeName"] = state ? state.nodeName : undefined;
            resourceInputs["vlan"] = state ? state.vlan : undefined;
        } else {
            const args = argsOrState as NetworkVlanArgs | undefined;
            if ((!args || args.nodeName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'nodeName'");
            }
            resourceInputs["address"] = args ? args.address : undefined;
            resourceInputs["address6"] = args ? args.address6 : undefined;
            resourceInputs["autostart"] = args ? args.autostart : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["gateway"] = args ? args.gateway : undefined;
            resourceInputs["gateway6"] = args ? args.gateway6 : undefined;
            resourceInputs["interface"] = args ? args.interface : undefined;
            resourceInputs["mtu"] = args ? args.mtu : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nodeName"] = args ? args.nodeName : undefined;
            resourceInputs["vlan"] = args ? args.vlan : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NetworkVlan.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NetworkVlan resources.
 */
export interface NetworkVlanState {
    /**
     * The interface IPv4/CIDR address.
     */
    address?: pulumi.Input<string>;
    /**
     * The interface IPv6/CIDR address.
     */
    address6?: pulumi.Input<string>;
    /**
     * Automatically start interface on boot (defaults to `true`).
     */
    autostart?: pulumi.Input<boolean>;
    /**
     * Comment for the interface.
     */
    comment?: pulumi.Input<string>;
    /**
     * Default gateway address.
     */
    gateway?: pulumi.Input<string>;
    /**
     * Default IPv6 gateway address.
     */
    gateway6?: pulumi.Input<string>;
    /**
     * The VLAN raw device. See also `name`.
     */
    interface?: pulumi.Input<string>;
    /**
     * The interface MTU.
     */
    mtu?: pulumi.Input<number>;
    /**
     * The interface name. Either add the VLAN tag number to an existing interface name, e.g. `ens18.21` (and do not set `interface` and `vlan`), or use custom name, e.g. `vlanLab` (`interface` and `vlan` are then required).
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the node.
     */
    nodeName?: pulumi.Input<string>;
    /**
     * The VLAN tag. See also `name`.
     */
    vlan?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a NetworkVlan resource.
 */
export interface NetworkVlanArgs {
    /**
     * The interface IPv4/CIDR address.
     */
    address?: pulumi.Input<string>;
    /**
     * The interface IPv6/CIDR address.
     */
    address6?: pulumi.Input<string>;
    /**
     * Automatically start interface on boot (defaults to `true`).
     */
    autostart?: pulumi.Input<boolean>;
    /**
     * Comment for the interface.
     */
    comment?: pulumi.Input<string>;
    /**
     * Default gateway address.
     */
    gateway?: pulumi.Input<string>;
    /**
     * Default IPv6 gateway address.
     */
    gateway6?: pulumi.Input<string>;
    /**
     * The VLAN raw device. See also `name`.
     */
    interface?: pulumi.Input<string>;
    /**
     * The interface MTU.
     */
    mtu?: pulumi.Input<number>;
    /**
     * The interface name. Either add the VLAN tag number to an existing interface name, e.g. `ens18.21` (and do not set `interface` and `vlan`), or use custom name, e.g. `vlanLab` (`interface` and `vlan` are then required).
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the node.
     */
    nodeName: pulumi.Input<string>;
    /**
     * The VLAN tag. See also `name`.
     */
    vlan?: pulumi.Input<number>;
}
