// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a Linux Bridge network interface in a Proxmox VE node.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as proxmoxve from "@muhlba91/pulumi-proxmoxve";
 *
 * const vlan99 = new proxmoxve.network.NetworkVlan("vlan99", {nodeName: "pve"});
 * //# or alternatively, use custom name:
 * // name      = "vlan_lab"
 * // interface = "eno0"
 * // vlan      = 98
 * const vmbr99 = new proxmoxve.network.NetworkBridge("vmbr99", {
 *     nodeName: "pve",
 *     address: "99.99.99.99/16",
 *     comment: "vmbr99 comment",
 *     ports: ["ens18.99"],
 * }, {
 *     dependsOn: [vlan99],
 * });
 * ```
 *
 * ## Import
 *
 * #!/usr/bin/env sh
 *
 * #Interfaces can be imported using the `node_name:iface` format, e.g.
 *
 * ```sh
 * $ pulumi import proxmoxve:Network/networkBridge:NetworkBridge vmbr99 pve:vmbr99
 * ```
 */
export class NetworkBridge extends pulumi.CustomResource {
    /**
     * Get an existing NetworkBridge resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworkBridgeState, opts?: pulumi.CustomResourceOptions): NetworkBridge {
        return new NetworkBridge(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'proxmoxve:Network/networkBridge:NetworkBridge';

    /**
     * Returns true if the given object is an instance of NetworkBridge.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NetworkBridge {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NetworkBridge.__pulumiType;
    }

    /**
     * The interface IPv4/CIDR address.
     */
    declare public readonly address: pulumi.Output<string | undefined>;
    /**
     * The interface IPv6/CIDR address.
     */
    declare public readonly address6: pulumi.Output<string | undefined>;
    /**
     * Automatically start interface on boot (defaults to `true`).
     */
    declare public readonly autostart: pulumi.Output<boolean>;
    /**
     * Comment for the interface.
     */
    declare public readonly comment: pulumi.Output<string | undefined>;
    /**
     * Default gateway address.
     */
    declare public readonly gateway: pulumi.Output<string | undefined>;
    /**
     * Default IPv6 gateway address.
     */
    declare public readonly gateway6: pulumi.Output<string | undefined>;
    /**
     * The interface MTU.
     */
    declare public readonly mtu: pulumi.Output<number | undefined>;
    /**
     * The interface name. Commonly vmbr[N], where 0 ≤ N ≤ 4094 (vmbr0 - vmbr4094), but can be any alphanumeric string that starts with a character and is at most 10 characters long.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The name of the node.
     */
    declare public readonly nodeName: pulumi.Output<string>;
    /**
     * The interface bridge ports.
     */
    declare public readonly ports: pulumi.Output<string[] | undefined>;
    /**
     * Whether the interface bridge is VLAN aware (defaults to `false`).
     */
    declare public readonly vlanAware: pulumi.Output<boolean>;

    /**
     * Create a NetworkBridge resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkBridgeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetworkBridgeArgs | NetworkBridgeState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NetworkBridgeState | undefined;
            resourceInputs["address"] = state?.address;
            resourceInputs["address6"] = state?.address6;
            resourceInputs["autostart"] = state?.autostart;
            resourceInputs["comment"] = state?.comment;
            resourceInputs["gateway"] = state?.gateway;
            resourceInputs["gateway6"] = state?.gateway6;
            resourceInputs["mtu"] = state?.mtu;
            resourceInputs["name"] = state?.name;
            resourceInputs["nodeName"] = state?.nodeName;
            resourceInputs["ports"] = state?.ports;
            resourceInputs["vlanAware"] = state?.vlanAware;
        } else {
            const args = argsOrState as NetworkBridgeArgs | undefined;
            if (args?.nodeName === undefined && !opts.urn) {
                throw new Error("Missing required property 'nodeName'");
            }
            resourceInputs["address"] = args?.address;
            resourceInputs["address6"] = args?.address6;
            resourceInputs["autostart"] = args?.autostart;
            resourceInputs["comment"] = args?.comment;
            resourceInputs["gateway"] = args?.gateway;
            resourceInputs["gateway6"] = args?.gateway6;
            resourceInputs["mtu"] = args?.mtu;
            resourceInputs["name"] = args?.name;
            resourceInputs["nodeName"] = args?.nodeName;
            resourceInputs["ports"] = args?.ports;
            resourceInputs["vlanAware"] = args?.vlanAware;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NetworkBridge.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NetworkBridge resources.
 */
export interface NetworkBridgeState {
    /**
     * The interface IPv4/CIDR address.
     */
    address?: pulumi.Input<string>;
    /**
     * The interface IPv6/CIDR address.
     */
    address6?: pulumi.Input<string>;
    /**
     * Automatically start interface on boot (defaults to `true`).
     */
    autostart?: pulumi.Input<boolean>;
    /**
     * Comment for the interface.
     */
    comment?: pulumi.Input<string>;
    /**
     * Default gateway address.
     */
    gateway?: pulumi.Input<string>;
    /**
     * Default IPv6 gateway address.
     */
    gateway6?: pulumi.Input<string>;
    /**
     * The interface MTU.
     */
    mtu?: pulumi.Input<number>;
    /**
     * The interface name. Commonly vmbr[N], where 0 ≤ N ≤ 4094 (vmbr0 - vmbr4094), but can be any alphanumeric string that starts with a character and is at most 10 characters long.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the node.
     */
    nodeName?: pulumi.Input<string>;
    /**
     * The interface bridge ports.
     */
    ports?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether the interface bridge is VLAN aware (defaults to `false`).
     */
    vlanAware?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a NetworkBridge resource.
 */
export interface NetworkBridgeArgs {
    /**
     * The interface IPv4/CIDR address.
     */
    address?: pulumi.Input<string>;
    /**
     * The interface IPv6/CIDR address.
     */
    address6?: pulumi.Input<string>;
    /**
     * Automatically start interface on boot (defaults to `true`).
     */
    autostart?: pulumi.Input<boolean>;
    /**
     * Comment for the interface.
     */
    comment?: pulumi.Input<string>;
    /**
     * Default gateway address.
     */
    gateway?: pulumi.Input<string>;
    /**
     * Default IPv6 gateway address.
     */
    gateway6?: pulumi.Input<string>;
    /**
     * The interface MTU.
     */
    mtu?: pulumi.Input<number>;
    /**
     * The interface name. Commonly vmbr[N], where 0 ≤ N ≤ 4094 (vmbr0 - vmbr4094), but can be any alphanumeric string that starts with a character and is at most 10 characters long.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the node.
     */
    nodeName: pulumi.Input<string>;
    /**
     * The interface bridge ports.
     */
    ports?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether the interface bridge is VLAN aware (defaults to `false`).
     */
    vlanAware?: pulumi.Input<boolean>;
}
