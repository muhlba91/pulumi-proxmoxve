// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { ClusterAliasArgs, ClusterAliasState } from "./clusterAlias";
export type ClusterAlias = import("./clusterAlias").ClusterAlias;
export const ClusterAlias: typeof import("./clusterAlias").ClusterAlias = null as any;
utilities.lazyLoad(exports, ["ClusterAlias"], () => require("./clusterAlias"));

export { ClusterIPSetArgs, ClusterIPSetState } from "./clusterIPSet";
export type ClusterIPSet = import("./clusterIPSet").ClusterIPSet;
export const ClusterIPSet: typeof import("./clusterIPSet").ClusterIPSet = null as any;
utilities.lazyLoad(exports, ["ClusterIPSet"], () => require("./clusterIPSet"));

export { GetClusterAliasArgs, GetClusterAliasResult, GetClusterAliasOutputArgs } from "./getClusterAlias";
export const getClusterAlias: typeof import("./getClusterAlias").getClusterAlias = null as any;
export const getClusterAliasOutput: typeof import("./getClusterAlias").getClusterAliasOutput = null as any;
utilities.lazyLoad(exports, ["getClusterAlias","getClusterAliasOutput"], () => require("./getClusterAlias"));

export { GetClusterAliasesResult } from "./getClusterAliases";
export const getClusterAliases: typeof import("./getClusterAliases").getClusterAliases = null as any;
utilities.lazyLoad(exports, ["getClusterAliases"], () => require("./getClusterAliases"));

export { GetNodesResult } from "./getNodes";
export const getNodes: typeof import("./getNodes").getNodes = null as any;
utilities.lazyLoad(exports, ["getNodes"], () => require("./getNodes"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "proxmoxve:Cluster/clusterAlias:ClusterAlias":
                return new ClusterAlias(name, <any>undefined, { urn })
            case "proxmoxve:Cluster/clusterIPSet:ClusterIPSet":
                return new ClusterIPSet(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("proxmoxve", "Cluster/clusterAlias", _module)
pulumi.runtime.registerResourceModule("proxmoxve", "Cluster/clusterIPSet", _module)
