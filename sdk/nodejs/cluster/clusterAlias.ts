// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class ClusterAlias extends pulumi.CustomResource {
    /**
     * Get an existing ClusterAlias resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClusterAliasState, opts?: pulumi.CustomResourceOptions): ClusterAlias {
        return new ClusterAlias(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'proxmoxve:Cluster/clusterAlias:ClusterAlias';

    /**
     * Returns true if the given object is an instance of ClusterAlias.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ClusterAlias {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ClusterAlias.__pulumiType;
    }

    /**
     * IP/CIDR block
     */
    public readonly cidr!: pulumi.Output<string>;
    /**
     * Alias comment
     */
    public readonly comment!: pulumi.Output<string | undefined>;
    /**
     * Alias name
     */
    public readonly name!: pulumi.Output<string>;

    /**
     * Create a ClusterAlias resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClusterAliasArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ClusterAliasArgs | ClusterAliasState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ClusterAliasState | undefined;
            inputs["cidr"] = state ? state.cidr : undefined;
            inputs["comment"] = state ? state.comment : undefined;
            inputs["name"] = state ? state.name : undefined;
        } else {
            const args = argsOrState as ClusterAliasArgs | undefined;
            if ((!args || args.cidr === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cidr'");
            }
            inputs["cidr"] = args ? args.cidr : undefined;
            inputs["comment"] = args ? args.comment : undefined;
            inputs["name"] = args ? args.name : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(ClusterAlias.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ClusterAlias resources.
 */
export interface ClusterAliasState {
    /**
     * IP/CIDR block
     */
    cidr?: pulumi.Input<string>;
    /**
     * Alias comment
     */
    comment?: pulumi.Input<string>;
    /**
     * Alias name
     */
    name?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ClusterAlias resource.
 */
export interface ClusterAliasArgs {
    /**
     * IP/CIDR block
     */
    cidr: pulumi.Input<string>;
    /**
     * Alias comment
     */
    comment?: pulumi.Input<string>;
    /**
     * Alias name
     */
    name?: pulumi.Input<string>;
}
