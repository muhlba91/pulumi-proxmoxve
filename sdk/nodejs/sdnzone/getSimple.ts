// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Retrieves information about a Simple Zone in Proxmox SDN. It will create an isolated VNet bridge. This bridge is not linked to a physical interface, and VM traffic is only local on each the node. It can be used in NAT or routed setups.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as proxmoxve from "@muhlba91/pulumi-proxmoxve";
 *
 * const example = proxmoxve.SDNZone.getSimple({
 *     id: "simple1",
 * });
 * export const dataProxmoxVirtualEnvironmentSdnZoneSimple = {
 *     id: example.then(example => example.id),
 *     nodes: example.then(example => example.nodes),
 *     mtu: example.then(example => example.mtu),
 *     dns: example.then(example => example.dns),
 *     dns_zone: example.then(example => example.dnsZone),
 *     ipam: example.then(example => example.ipam),
 *     reverse_dns: example.then(example => example.reverseDns),
 * };
 * ```
 */
export function getSimple(args: GetSimpleArgs, opts?: pulumi.InvokeOptions): Promise<GetSimpleResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("proxmoxve:SDNZone/getSimple:getSimple", {
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getSimple.
 */
export interface GetSimpleArgs {
    /**
     * The unique identifier of the SDN zone.
     */
    id: string;
}

/**
 * A collection of values returned by getSimple.
 */
export interface GetSimpleResult {
    /**
     * DNS API server address.
     */
    readonly dns: string;
    /**
     * DNS domain name. Used to register hostnames, such as `<hostname>.<domain>`. The DNS zone must already exist on the DNS server.
     */
    readonly dnsZone: string;
    /**
     * The unique identifier of the SDN zone.
     */
    readonly id: string;
    /**
     * IP Address Management system.
     */
    readonly ipam: string;
    /**
     * MTU value for the zone.
     */
    readonly mtu: number;
    /**
     * The Proxmox nodes which the zone and associated VNets are deployed on
     */
    readonly nodes: string[];
    /**
     * Reverse DNS API server address.
     */
    readonly reverseDns: string;
}
/**
 * Retrieves information about a Simple Zone in Proxmox SDN. It will create an isolated VNet bridge. This bridge is not linked to a physical interface, and VM traffic is only local on each the node. It can be used in NAT or routed setups.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as proxmoxve from "@muhlba91/pulumi-proxmoxve";
 *
 * const example = proxmoxve.SDNZone.getSimple({
 *     id: "simple1",
 * });
 * export const dataProxmoxVirtualEnvironmentSdnZoneSimple = {
 *     id: example.then(example => example.id),
 *     nodes: example.then(example => example.nodes),
 *     mtu: example.then(example => example.mtu),
 *     dns: example.then(example => example.dns),
 *     dns_zone: example.then(example => example.dnsZone),
 *     ipam: example.then(example => example.ipam),
 *     reverse_dns: example.then(example => example.reverseDns),
 * };
 * ```
 */
export function getSimpleOutput(args: GetSimpleOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSimpleResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("proxmoxve:SDNZone/getSimple:getSimple", {
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getSimple.
 */
export interface GetSimpleOutputArgs {
    /**
     * The unique identifier of the SDN zone.
     */
    id: pulumi.Input<string>;
}
