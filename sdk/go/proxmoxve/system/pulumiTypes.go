// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package system

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type HostsEntry struct {
	Address   string   `pulumi:"address"`
	Hostnames []string `pulumi:"hostnames"`
}

// HostsEntryInput is an input type that accepts HostsEntryArgs and HostsEntryOutput values.
// You can construct a concrete instance of `HostsEntryInput` via:
//
//          HostsEntryArgs{...}
type HostsEntryInput interface {
	pulumi.Input

	ToHostsEntryOutput() HostsEntryOutput
	ToHostsEntryOutputWithContext(context.Context) HostsEntryOutput
}

type HostsEntryArgs struct {
	Address   pulumi.StringInput      `pulumi:"address"`
	Hostnames pulumi.StringArrayInput `pulumi:"hostnames"`
}

func (HostsEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostsEntry)(nil)).Elem()
}

func (i HostsEntryArgs) ToHostsEntryOutput() HostsEntryOutput {
	return i.ToHostsEntryOutputWithContext(context.Background())
}

func (i HostsEntryArgs) ToHostsEntryOutputWithContext(ctx context.Context) HostsEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostsEntryOutput)
}

// HostsEntryArrayInput is an input type that accepts HostsEntryArray and HostsEntryArrayOutput values.
// You can construct a concrete instance of `HostsEntryArrayInput` via:
//
//          HostsEntryArray{ HostsEntryArgs{...} }
type HostsEntryArrayInput interface {
	pulumi.Input

	ToHostsEntryArrayOutput() HostsEntryArrayOutput
	ToHostsEntryArrayOutputWithContext(context.Context) HostsEntryArrayOutput
}

type HostsEntryArray []HostsEntryInput

func (HostsEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostsEntry)(nil)).Elem()
}

func (i HostsEntryArray) ToHostsEntryArrayOutput() HostsEntryArrayOutput {
	return i.ToHostsEntryArrayOutputWithContext(context.Background())
}

func (i HostsEntryArray) ToHostsEntryArrayOutputWithContext(ctx context.Context) HostsEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostsEntryArrayOutput)
}

type HostsEntryOutput struct{ *pulumi.OutputState }

func (HostsEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostsEntry)(nil)).Elem()
}

func (o HostsEntryOutput) ToHostsEntryOutput() HostsEntryOutput {
	return o
}

func (o HostsEntryOutput) ToHostsEntryOutputWithContext(ctx context.Context) HostsEntryOutput {
	return o
}

func (o HostsEntryOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v HostsEntry) string { return v.Address }).(pulumi.StringOutput)
}

func (o HostsEntryOutput) Hostnames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HostsEntry) []string { return v.Hostnames }).(pulumi.StringArrayOutput)
}

type HostsEntryArrayOutput struct{ *pulumi.OutputState }

func (HostsEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostsEntry)(nil)).Elem()
}

func (o HostsEntryArrayOutput) ToHostsEntryArrayOutput() HostsEntryArrayOutput {
	return o
}

func (o HostsEntryArrayOutput) ToHostsEntryArrayOutputWithContext(ctx context.Context) HostsEntryArrayOutput {
	return o
}

func (o HostsEntryArrayOutput) Index(i pulumi.IntInput) HostsEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HostsEntry {
		return vs[0].([]HostsEntry)[vs[1].(int)]
	}).(HostsEntryOutput)
}

type GetHostsEntry struct {
	Address   string   `pulumi:"address"`
	Hostnames []string `pulumi:"hostnames"`
}

// GetHostsEntryInput is an input type that accepts GetHostsEntryArgs and GetHostsEntryOutput values.
// You can construct a concrete instance of `GetHostsEntryInput` via:
//
//          GetHostsEntryArgs{...}
type GetHostsEntryInput interface {
	pulumi.Input

	ToGetHostsEntryOutput() GetHostsEntryOutput
	ToGetHostsEntryOutputWithContext(context.Context) GetHostsEntryOutput
}

type GetHostsEntryArgs struct {
	Address   pulumi.StringInput      `pulumi:"address"`
	Hostnames pulumi.StringArrayInput `pulumi:"hostnames"`
}

func (GetHostsEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHostsEntry)(nil)).Elem()
}

func (i GetHostsEntryArgs) ToGetHostsEntryOutput() GetHostsEntryOutput {
	return i.ToGetHostsEntryOutputWithContext(context.Background())
}

func (i GetHostsEntryArgs) ToGetHostsEntryOutputWithContext(ctx context.Context) GetHostsEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHostsEntryOutput)
}

// GetHostsEntryArrayInput is an input type that accepts GetHostsEntryArray and GetHostsEntryArrayOutput values.
// You can construct a concrete instance of `GetHostsEntryArrayInput` via:
//
//          GetHostsEntryArray{ GetHostsEntryArgs{...} }
type GetHostsEntryArrayInput interface {
	pulumi.Input

	ToGetHostsEntryArrayOutput() GetHostsEntryArrayOutput
	ToGetHostsEntryArrayOutputWithContext(context.Context) GetHostsEntryArrayOutput
}

type GetHostsEntryArray []GetHostsEntryInput

func (GetHostsEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHostsEntry)(nil)).Elem()
}

func (i GetHostsEntryArray) ToGetHostsEntryArrayOutput() GetHostsEntryArrayOutput {
	return i.ToGetHostsEntryArrayOutputWithContext(context.Background())
}

func (i GetHostsEntryArray) ToGetHostsEntryArrayOutputWithContext(ctx context.Context) GetHostsEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHostsEntryArrayOutput)
}

type GetHostsEntryOutput struct{ *pulumi.OutputState }

func (GetHostsEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHostsEntry)(nil)).Elem()
}

func (o GetHostsEntryOutput) ToGetHostsEntryOutput() GetHostsEntryOutput {
	return o
}

func (o GetHostsEntryOutput) ToGetHostsEntryOutputWithContext(ctx context.Context) GetHostsEntryOutput {
	return o
}

func (o GetHostsEntryOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostsEntry) string { return v.Address }).(pulumi.StringOutput)
}

func (o GetHostsEntryOutput) Hostnames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetHostsEntry) []string { return v.Hostnames }).(pulumi.StringArrayOutput)
}

type GetHostsEntryArrayOutput struct{ *pulumi.OutputState }

func (GetHostsEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHostsEntry)(nil)).Elem()
}

func (o GetHostsEntryArrayOutput) ToGetHostsEntryArrayOutput() GetHostsEntryArrayOutput {
	return o
}

func (o GetHostsEntryArrayOutput) ToGetHostsEntryArrayOutputWithContext(ctx context.Context) GetHostsEntryArrayOutput {
	return o
}

func (o GetHostsEntryArrayOutput) Index(i pulumi.IntInput) GetHostsEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHostsEntry {
		return vs[0].([]GetHostsEntry)[vs[1].(int)]
	}).(GetHostsEntryOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*HostsEntryInput)(nil)).Elem(), HostsEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostsEntryArrayInput)(nil)).Elem(), HostsEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHostsEntryInput)(nil)).Elem(), GetHostsEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHostsEntryArrayInput)(nil)).Elem(), GetHostsEntryArray{})
	pulumi.RegisterOutputType(HostsEntryOutput{})
	pulumi.RegisterOutputType(HostsEntryArrayOutput{})
	pulumi.RegisterOutputType(GetHostsEntryOutput{})
	pulumi.RegisterOutputType(GetHostsEntryArrayOutput{})
}
