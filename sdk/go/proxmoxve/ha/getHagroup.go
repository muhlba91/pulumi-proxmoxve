// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ha

import (
	"context"
	"reflect"

	"github.com/muhlba91/pulumi-proxmoxve/sdk/v6/go/proxmoxve/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves information about a specific High Availability group.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/muhlba91/pulumi-proxmoxve/sdk/v6/go/proxmoxve/HA"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			all, err := HA.GetHAGroups(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			example := "TODO: For expression"
//			ctx.Export("proxmoxVirtualEnvironmentHagroupsFull", example)
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func LookupHAGroup(ctx *pulumi.Context, args *LookupHAGroupArgs, opts ...pulumi.InvokeOption) (*LookupHAGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupHAGroupResult
	err := ctx.Invoke("proxmoxve:HA/getHAGroup:getHAGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getHAGroup.
type LookupHAGroupArgs struct {
	// The identifier of the High Availability group to read.
	Group string `pulumi:"group"`
}

// A collection of values returned by getHAGroup.
type LookupHAGroupResult struct {
	// The comment associated with this group
	Comment string `pulumi:"comment"`
	// The identifier of the High Availability group to read.
	Group string `pulumi:"group"`
	// The unique identifier of this resource.
	Id string `pulumi:"id"`
	// A flag that indicates that failing back to a higher priority node is disabled for this HA group.
	NoFailback bool `pulumi:"noFailback"`
	// The member nodes for this group. They are provided as a map, where the keys are the node names and the values represent their priority: integers for known priorities or `null` for unset priorities.
	Nodes map[string]int `pulumi:"nodes"`
	// A flag that indicates that other nodes may not be used to run resources associated to this HA group.
	Restricted bool `pulumi:"restricted"`
}

func LookupHAGroupOutput(ctx *pulumi.Context, args LookupHAGroupOutputArgs, opts ...pulumi.InvokeOption) LookupHAGroupResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupHAGroupResult, error) {
			args := v.(LookupHAGroupArgs)
			r, err := LookupHAGroup(ctx, &args, opts...)
			var s LookupHAGroupResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupHAGroupResultOutput)
}

// A collection of arguments for invoking getHAGroup.
type LookupHAGroupOutputArgs struct {
	// The identifier of the High Availability group to read.
	Group pulumi.StringInput `pulumi:"group"`
}

func (LookupHAGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupHAGroupArgs)(nil)).Elem()
}

// A collection of values returned by getHAGroup.
type LookupHAGroupResultOutput struct{ *pulumi.OutputState }

func (LookupHAGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupHAGroupResult)(nil)).Elem()
}

func (o LookupHAGroupResultOutput) ToLookupHAGroupResultOutput() LookupHAGroupResultOutput {
	return o
}

func (o LookupHAGroupResultOutput) ToLookupHAGroupResultOutputWithContext(ctx context.Context) LookupHAGroupResultOutput {
	return o
}

// The comment associated with this group
func (o LookupHAGroupResultOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHAGroupResult) string { return v.Comment }).(pulumi.StringOutput)
}

// The identifier of the High Availability group to read.
func (o LookupHAGroupResultOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHAGroupResult) string { return v.Group }).(pulumi.StringOutput)
}

// The unique identifier of this resource.
func (o LookupHAGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHAGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

// A flag that indicates that failing back to a higher priority node is disabled for this HA group.
func (o LookupHAGroupResultOutput) NoFailback() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupHAGroupResult) bool { return v.NoFailback }).(pulumi.BoolOutput)
}

// The member nodes for this group. They are provided as a map, where the keys are the node names and the values represent their priority: integers for known priorities or `null` for unset priorities.
func (o LookupHAGroupResultOutput) Nodes() pulumi.IntMapOutput {
	return o.ApplyT(func(v LookupHAGroupResult) map[string]int { return v.Nodes }).(pulumi.IntMapOutput)
}

// A flag that indicates that other nodes may not be used to run resources associated to this HA group.
func (o LookupHAGroupResultOutput) Restricted() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupHAGroupResult) bool { return v.Restricted }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupHAGroupResultOutput{})
}
