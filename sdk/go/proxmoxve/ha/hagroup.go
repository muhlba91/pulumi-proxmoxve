// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ha

import (
	"context"
	"reflect"

	"errors"
	"github.com/muhlba91/pulumi-proxmoxve/sdk/v5/go/proxmoxve/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a High Availability group in a Proxmox VE cluster.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/muhlba91/pulumi-proxmoxve/sdk/v5/go/proxmoxve/HA"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := HA.NewHAGroup(ctx, "example", &HA.HAGroupArgs{
//				Group:   pulumi.String("example"),
//				Comment: pulumi.String("This is a comment."),
//				Nodes: pulumi.IntMap{
//					"node1": nil,
//					"node2": pulumi.Int(2),
//					"node3": pulumi.Int(1),
//				},
//				Restricted: pulumi.Bool(true),
//				NoFailback: pulumi.Bool(false),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// #!/usr/bin/env sh
//
//	HA groups can be imported using their name, e.g.:
//
// ```sh
// $ pulumi import proxmoxve:HA/hAGroup:HAGroup example example
// ```
type HAGroup struct {
	pulumi.CustomResourceState

	// The comment associated with this group
	Comment pulumi.StringPtrOutput `pulumi:"comment"`
	// The identifier of the High Availability group to manage.
	Group pulumi.StringOutput `pulumi:"group"`
	// A flag that indicates that failing back to a higher priority node is disabled for this HA group. Defaults to `false`.
	NoFailback pulumi.BoolOutput `pulumi:"noFailback"`
	// The member nodes for this group. They are provided as a map, where the keys are the node names and the values represent their priority: integers for known priorities or `null` for unset priorities.
	Nodes pulumi.IntMapOutput `pulumi:"nodes"`
	// A flag that indicates that other nodes may not be used to run resources associated to this HA group. Defaults to `false`.
	Restricted pulumi.BoolOutput `pulumi:"restricted"`
}

// NewHAGroup registers a new resource with the given unique name, arguments, and options.
func NewHAGroup(ctx *pulumi.Context,
	name string, args *HAGroupArgs, opts ...pulumi.ResourceOption) (*HAGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Group == nil {
		return nil, errors.New("invalid value for required argument 'Group'")
	}
	if args.Nodes == nil {
		return nil, errors.New("invalid value for required argument 'Nodes'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource HAGroup
	err := ctx.RegisterResource("proxmoxve:HA/hAGroup:HAGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetHAGroup gets an existing HAGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHAGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *HAGroupState, opts ...pulumi.ResourceOption) (*HAGroup, error) {
	var resource HAGroup
	err := ctx.ReadResource("proxmoxve:HA/hAGroup:HAGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering HAGroup resources.
type hagroupState struct {
	// The comment associated with this group
	Comment *string `pulumi:"comment"`
	// The identifier of the High Availability group to manage.
	Group *string `pulumi:"group"`
	// A flag that indicates that failing back to a higher priority node is disabled for this HA group. Defaults to `false`.
	NoFailback *bool `pulumi:"noFailback"`
	// The member nodes for this group. They are provided as a map, where the keys are the node names and the values represent their priority: integers for known priorities or `null` for unset priorities.
	Nodes map[string]int `pulumi:"nodes"`
	// A flag that indicates that other nodes may not be used to run resources associated to this HA group. Defaults to `false`.
	Restricted *bool `pulumi:"restricted"`
}

type HAGroupState struct {
	// The comment associated with this group
	Comment pulumi.StringPtrInput
	// The identifier of the High Availability group to manage.
	Group pulumi.StringPtrInput
	// A flag that indicates that failing back to a higher priority node is disabled for this HA group. Defaults to `false`.
	NoFailback pulumi.BoolPtrInput
	// The member nodes for this group. They are provided as a map, where the keys are the node names and the values represent their priority: integers for known priorities or `null` for unset priorities.
	Nodes pulumi.IntMapInput
	// A flag that indicates that other nodes may not be used to run resources associated to this HA group. Defaults to `false`.
	Restricted pulumi.BoolPtrInput
}

func (HAGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*hagroupState)(nil)).Elem()
}

type hagroupArgs struct {
	// The comment associated with this group
	Comment *string `pulumi:"comment"`
	// The identifier of the High Availability group to manage.
	Group string `pulumi:"group"`
	// A flag that indicates that failing back to a higher priority node is disabled for this HA group. Defaults to `false`.
	NoFailback *bool `pulumi:"noFailback"`
	// The member nodes for this group. They are provided as a map, where the keys are the node names and the values represent their priority: integers for known priorities or `null` for unset priorities.
	Nodes map[string]int `pulumi:"nodes"`
	// A flag that indicates that other nodes may not be used to run resources associated to this HA group. Defaults to `false`.
	Restricted *bool `pulumi:"restricted"`
}

// The set of arguments for constructing a HAGroup resource.
type HAGroupArgs struct {
	// The comment associated with this group
	Comment pulumi.StringPtrInput
	// The identifier of the High Availability group to manage.
	Group pulumi.StringInput
	// A flag that indicates that failing back to a higher priority node is disabled for this HA group. Defaults to `false`.
	NoFailback pulumi.BoolPtrInput
	// The member nodes for this group. They are provided as a map, where the keys are the node names and the values represent their priority: integers for known priorities or `null` for unset priorities.
	Nodes pulumi.IntMapInput
	// A flag that indicates that other nodes may not be used to run resources associated to this HA group. Defaults to `false`.
	Restricted pulumi.BoolPtrInput
}

func (HAGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*hagroupArgs)(nil)).Elem()
}

type HAGroupInput interface {
	pulumi.Input

	ToHAGroupOutput() HAGroupOutput
	ToHAGroupOutputWithContext(ctx context.Context) HAGroupOutput
}

func (*HAGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**HAGroup)(nil)).Elem()
}

func (i *HAGroup) ToHAGroupOutput() HAGroupOutput {
	return i.ToHAGroupOutputWithContext(context.Background())
}

func (i *HAGroup) ToHAGroupOutputWithContext(ctx context.Context) HAGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HAGroupOutput)
}

// HAGroupArrayInput is an input type that accepts HAGroupArray and HAGroupArrayOutput values.
// You can construct a concrete instance of `HAGroupArrayInput` via:
//
//	HAGroupArray{ HAGroupArgs{...} }
type HAGroupArrayInput interface {
	pulumi.Input

	ToHAGroupArrayOutput() HAGroupArrayOutput
	ToHAGroupArrayOutputWithContext(context.Context) HAGroupArrayOutput
}

type HAGroupArray []HAGroupInput

func (HAGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*HAGroup)(nil)).Elem()
}

func (i HAGroupArray) ToHAGroupArrayOutput() HAGroupArrayOutput {
	return i.ToHAGroupArrayOutputWithContext(context.Background())
}

func (i HAGroupArray) ToHAGroupArrayOutputWithContext(ctx context.Context) HAGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HAGroupArrayOutput)
}

// HAGroupMapInput is an input type that accepts HAGroupMap and HAGroupMapOutput values.
// You can construct a concrete instance of `HAGroupMapInput` via:
//
//	HAGroupMap{ "key": HAGroupArgs{...} }
type HAGroupMapInput interface {
	pulumi.Input

	ToHAGroupMapOutput() HAGroupMapOutput
	ToHAGroupMapOutputWithContext(context.Context) HAGroupMapOutput
}

type HAGroupMap map[string]HAGroupInput

func (HAGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*HAGroup)(nil)).Elem()
}

func (i HAGroupMap) ToHAGroupMapOutput() HAGroupMapOutput {
	return i.ToHAGroupMapOutputWithContext(context.Background())
}

func (i HAGroupMap) ToHAGroupMapOutputWithContext(ctx context.Context) HAGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HAGroupMapOutput)
}

type HAGroupOutput struct{ *pulumi.OutputState }

func (HAGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HAGroup)(nil)).Elem()
}

func (o HAGroupOutput) ToHAGroupOutput() HAGroupOutput {
	return o
}

func (o HAGroupOutput) ToHAGroupOutputWithContext(ctx context.Context) HAGroupOutput {
	return o
}

// The comment associated with this group
func (o HAGroupOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HAGroup) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

// The identifier of the High Availability group to manage.
func (o HAGroupOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v *HAGroup) pulumi.StringOutput { return v.Group }).(pulumi.StringOutput)
}

// A flag that indicates that failing back to a higher priority node is disabled for this HA group. Defaults to `false`.
func (o HAGroupOutput) NoFailback() pulumi.BoolOutput {
	return o.ApplyT(func(v *HAGroup) pulumi.BoolOutput { return v.NoFailback }).(pulumi.BoolOutput)
}

// The member nodes for this group. They are provided as a map, where the keys are the node names and the values represent their priority: integers for known priorities or `null` for unset priorities.
func (o HAGroupOutput) Nodes() pulumi.IntMapOutput {
	return o.ApplyT(func(v *HAGroup) pulumi.IntMapOutput { return v.Nodes }).(pulumi.IntMapOutput)
}

// A flag that indicates that other nodes may not be used to run resources associated to this HA group. Defaults to `false`.
func (o HAGroupOutput) Restricted() pulumi.BoolOutput {
	return o.ApplyT(func(v *HAGroup) pulumi.BoolOutput { return v.Restricted }).(pulumi.BoolOutput)
}

type HAGroupArrayOutput struct{ *pulumi.OutputState }

func (HAGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*HAGroup)(nil)).Elem()
}

func (o HAGroupArrayOutput) ToHAGroupArrayOutput() HAGroupArrayOutput {
	return o
}

func (o HAGroupArrayOutput) ToHAGroupArrayOutputWithContext(ctx context.Context) HAGroupArrayOutput {
	return o
}

func (o HAGroupArrayOutput) Index(i pulumi.IntInput) HAGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *HAGroup {
		return vs[0].([]*HAGroup)[vs[1].(int)]
	}).(HAGroupOutput)
}

type HAGroupMapOutput struct{ *pulumi.OutputState }

func (HAGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*HAGroup)(nil)).Elem()
}

func (o HAGroupMapOutput) ToHAGroupMapOutput() HAGroupMapOutput {
	return o
}

func (o HAGroupMapOutput) ToHAGroupMapOutputWithContext(ctx context.Context) HAGroupMapOutput {
	return o
}

func (o HAGroupMapOutput) MapIndex(k pulumi.StringInput) HAGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *HAGroup {
		return vs[0].(map[string]*HAGroup)[vs[1].(string)]
	}).(HAGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*HAGroupInput)(nil)).Elem(), &HAGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*HAGroupArrayInput)(nil)).Elem(), HAGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HAGroupMapInput)(nil)).Elem(), HAGroupMap{})
	pulumi.RegisterOutputType(HAGroupOutput{})
	pulumi.RegisterOutputType(HAGroupArrayOutput{})
	pulumi.RegisterOutputType(HAGroupMapOutput{})
}
