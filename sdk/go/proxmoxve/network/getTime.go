// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"github.com/muhlba91/pulumi-proxmoxve/sdk/v5/go/proxmoxve/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves the current time for a specific node.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/muhlba91/pulumi-proxmoxve/sdk/v5/go/proxmoxve/Network"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Network.GetTime(ctx, &network.GetTimeArgs{
//				NodeName: "first-node",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetTime(ctx *pulumi.Context, args *GetTimeArgs, opts ...pulumi.InvokeOption) (*GetTimeResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetTimeResult
	err := ctx.Invoke("proxmoxve:Network/getTime:getTime", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTime.
type GetTimeArgs struct {
	// A node name.
	NodeName string `pulumi:"nodeName"`
}

// A collection of values returned by getTime.
type GetTimeResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The node's local time.
	LocalTime string `pulumi:"localTime"`
	NodeName  string `pulumi:"nodeName"`
	// The node's time zone.
	TimeZone string `pulumi:"timeZone"`
	// The node's local time formatted as UTC.
	UtcTime string `pulumi:"utcTime"`
}

func GetTimeOutput(ctx *pulumi.Context, args GetTimeOutputArgs, opts ...pulumi.InvokeOption) GetTimeResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetTimeResult, error) {
			args := v.(GetTimeArgs)
			r, err := GetTime(ctx, &args, opts...)
			var s GetTimeResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetTimeResultOutput)
}

// A collection of arguments for invoking getTime.
type GetTimeOutputArgs struct {
	// A node name.
	NodeName pulumi.StringInput `pulumi:"nodeName"`
}

func (GetTimeOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTimeArgs)(nil)).Elem()
}

// A collection of values returned by getTime.
type GetTimeResultOutput struct{ *pulumi.OutputState }

func (GetTimeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTimeResult)(nil)).Elem()
}

func (o GetTimeResultOutput) ToGetTimeResultOutput() GetTimeResultOutput {
	return o
}

func (o GetTimeResultOutput) ToGetTimeResultOutputWithContext(ctx context.Context) GetTimeResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetTimeResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTimeResult) string { return v.Id }).(pulumi.StringOutput)
}

// The node's local time.
func (o GetTimeResultOutput) LocalTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetTimeResult) string { return v.LocalTime }).(pulumi.StringOutput)
}

func (o GetTimeResultOutput) NodeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTimeResult) string { return v.NodeName }).(pulumi.StringOutput)
}

// The node's time zone.
func (o GetTimeResultOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetTimeResult) string { return v.TimeZone }).(pulumi.StringOutput)
}

// The node's local time formatted as UTC.
func (o GetTimeResultOutput) UtcTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetTimeResult) string { return v.UtcTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetTimeResultOutput{})
}
