// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"github.com/muhlba91/pulumi-proxmoxve/sdk/v5/go/proxmoxve/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves the DNS configuration for a specific node.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/muhlba91/pulumi-proxmoxve/sdk/v5/go/proxmoxve/Network"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Network.GetDNS(ctx, &network.GetDNSArgs{
//				NodeName: "first-node",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDNS(ctx *pulumi.Context, args *GetDNSArgs, opts ...pulumi.InvokeOption) (*GetDNSResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDNSResult
	err := ctx.Invoke("proxmoxve:Network/getDNS:getDNS", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDNS.
type GetDNSArgs struct {
	// A node name.
	NodeName string `pulumi:"nodeName"`
}

// A collection of values returned by getDNS.
type GetDNSResult struct {
	// The DNS search domain.
	Domain string `pulumi:"domain"`
	// The provider-assigned unique ID for this managed resource.
	Id       string `pulumi:"id"`
	NodeName string `pulumi:"nodeName"`
	// The DNS servers.
	Servers []string `pulumi:"servers"`
}

func GetDNSOutput(ctx *pulumi.Context, args GetDNSOutputArgs, opts ...pulumi.InvokeOption) GetDNSResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDNSResult, error) {
			args := v.(GetDNSArgs)
			r, err := GetDNS(ctx, &args, opts...)
			var s GetDNSResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDNSResultOutput)
}

// A collection of arguments for invoking getDNS.
type GetDNSOutputArgs struct {
	// A node name.
	NodeName pulumi.StringInput `pulumi:"nodeName"`
}

func (GetDNSOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDNSArgs)(nil)).Elem()
}

// A collection of values returned by getDNS.
type GetDNSResultOutput struct{ *pulumi.OutputState }

func (GetDNSResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDNSResult)(nil)).Elem()
}

func (o GetDNSResultOutput) ToGetDNSResultOutput() GetDNSResultOutput {
	return o
}

func (o GetDNSResultOutput) ToGetDNSResultOutputWithContext(ctx context.Context) GetDNSResultOutput {
	return o
}

// The DNS search domain.
func (o GetDNSResultOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GetDNSResult) string { return v.Domain }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDNSResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDNSResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDNSResultOutput) NodeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDNSResult) string { return v.NodeName }).(pulumi.StringOutput)
}

// The DNS servers.
func (o GetDNSResultOutput) Servers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDNSResult) []string { return v.Servers }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDNSResultOutput{})
}
