// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package proxmoxve

import (
	"context"
	"reflect"

	"errors"
	"github.com/muhlba91/pulumi-proxmoxve/sdk/v7/go/proxmoxve/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an ACME account in a Proxmox VE cluster.
//
// > This resource requires `root@pam` authentication.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/muhlba91/pulumi-proxmoxve/sdk/v7/go/proxmoxve"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := proxmoxve.NewAcmeAccount(ctx, "example", &proxmoxve.AcmeAccountArgs{
//				Contact:   pulumi.String("example@email.com"),
//				Directory: pulumi.String("https://acme-staging-v02.api.letsencrypt.org/directory"),
//				Tos:       pulumi.String("https://letsencrypt.org/documents/LE-SA-v1.3-September-21-2022.pdf"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// #!/usr/bin/env sh
//
// ACME accounts can be imported using their name, e.g.:
//
// ```sh
// $ pulumi import proxmoxve:index/acmeAccount:AcmeAccount example example
// ```
type AcmeAccount struct {
	pulumi.CustomResourceState

	// The contact email addresses.
	Contact pulumi.StringOutput `pulumi:"contact"`
	// The timestamp of the ACME account creation.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The URL of the ACME CA directory endpoint.
	Directory pulumi.StringPtrOutput `pulumi:"directory"`
	// The HMAC key for External Account Binding.
	EabHmacKey pulumi.StringPtrOutput `pulumi:"eabHmacKey"`
	// The Key Identifier for External Account Binding.
	EabKid pulumi.StringPtrOutput `pulumi:"eabKid"`
	// The location of the ACME account.
	Location pulumi.StringOutput `pulumi:"location"`
	// The ACME account config file name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The URL of CA TermsOfService - setting this indicates agreement.
	Tos pulumi.StringPtrOutput `pulumi:"tos"`
}

// NewAcmeAccount registers a new resource with the given unique name, arguments, and options.
func NewAcmeAccount(ctx *pulumi.Context,
	name string, args *AcmeAccountArgs, opts ...pulumi.ResourceOption) (*AcmeAccount, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Contact == nil {
		return nil, errors.New("invalid value for required argument 'Contact'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AcmeAccount
	err := ctx.RegisterResource("proxmoxve:index/acmeAccount:AcmeAccount", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAcmeAccount gets an existing AcmeAccount resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAcmeAccount(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AcmeAccountState, opts ...pulumi.ResourceOption) (*AcmeAccount, error) {
	var resource AcmeAccount
	err := ctx.ReadResource("proxmoxve:index/acmeAccount:AcmeAccount", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AcmeAccount resources.
type acmeAccountState struct {
	// The contact email addresses.
	Contact *string `pulumi:"contact"`
	// The timestamp of the ACME account creation.
	CreatedAt *string `pulumi:"createdAt"`
	// The URL of the ACME CA directory endpoint.
	Directory *string `pulumi:"directory"`
	// The HMAC key for External Account Binding.
	EabHmacKey *string `pulumi:"eabHmacKey"`
	// The Key Identifier for External Account Binding.
	EabKid *string `pulumi:"eabKid"`
	// The location of the ACME account.
	Location *string `pulumi:"location"`
	// The ACME account config file name.
	Name *string `pulumi:"name"`
	// The URL of CA TermsOfService - setting this indicates agreement.
	Tos *string `pulumi:"tos"`
}

type AcmeAccountState struct {
	// The contact email addresses.
	Contact pulumi.StringPtrInput
	// The timestamp of the ACME account creation.
	CreatedAt pulumi.StringPtrInput
	// The URL of the ACME CA directory endpoint.
	Directory pulumi.StringPtrInput
	// The HMAC key for External Account Binding.
	EabHmacKey pulumi.StringPtrInput
	// The Key Identifier for External Account Binding.
	EabKid pulumi.StringPtrInput
	// The location of the ACME account.
	Location pulumi.StringPtrInput
	// The ACME account config file name.
	Name pulumi.StringPtrInput
	// The URL of CA TermsOfService - setting this indicates agreement.
	Tos pulumi.StringPtrInput
}

func (AcmeAccountState) ElementType() reflect.Type {
	return reflect.TypeOf((*acmeAccountState)(nil)).Elem()
}

type acmeAccountArgs struct {
	// The contact email addresses.
	Contact string `pulumi:"contact"`
	// The URL of the ACME CA directory endpoint.
	Directory *string `pulumi:"directory"`
	// The HMAC key for External Account Binding.
	EabHmacKey *string `pulumi:"eabHmacKey"`
	// The Key Identifier for External Account Binding.
	EabKid *string `pulumi:"eabKid"`
	// The ACME account config file name.
	Name *string `pulumi:"name"`
	// The URL of CA TermsOfService - setting this indicates agreement.
	Tos *string `pulumi:"tos"`
}

// The set of arguments for constructing a AcmeAccount resource.
type AcmeAccountArgs struct {
	// The contact email addresses.
	Contact pulumi.StringInput
	// The URL of the ACME CA directory endpoint.
	Directory pulumi.StringPtrInput
	// The HMAC key for External Account Binding.
	EabHmacKey pulumi.StringPtrInput
	// The Key Identifier for External Account Binding.
	EabKid pulumi.StringPtrInput
	// The ACME account config file name.
	Name pulumi.StringPtrInput
	// The URL of CA TermsOfService - setting this indicates agreement.
	Tos pulumi.StringPtrInput
}

func (AcmeAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*acmeAccountArgs)(nil)).Elem()
}

type AcmeAccountInput interface {
	pulumi.Input

	ToAcmeAccountOutput() AcmeAccountOutput
	ToAcmeAccountOutputWithContext(ctx context.Context) AcmeAccountOutput
}

func (*AcmeAccount) ElementType() reflect.Type {
	return reflect.TypeOf((**AcmeAccount)(nil)).Elem()
}

func (i *AcmeAccount) ToAcmeAccountOutput() AcmeAccountOutput {
	return i.ToAcmeAccountOutputWithContext(context.Background())
}

func (i *AcmeAccount) ToAcmeAccountOutputWithContext(ctx context.Context) AcmeAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AcmeAccountOutput)
}

// AcmeAccountArrayInput is an input type that accepts AcmeAccountArray and AcmeAccountArrayOutput values.
// You can construct a concrete instance of `AcmeAccountArrayInput` via:
//
//	AcmeAccountArray{ AcmeAccountArgs{...} }
type AcmeAccountArrayInput interface {
	pulumi.Input

	ToAcmeAccountArrayOutput() AcmeAccountArrayOutput
	ToAcmeAccountArrayOutputWithContext(context.Context) AcmeAccountArrayOutput
}

type AcmeAccountArray []AcmeAccountInput

func (AcmeAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AcmeAccount)(nil)).Elem()
}

func (i AcmeAccountArray) ToAcmeAccountArrayOutput() AcmeAccountArrayOutput {
	return i.ToAcmeAccountArrayOutputWithContext(context.Background())
}

func (i AcmeAccountArray) ToAcmeAccountArrayOutputWithContext(ctx context.Context) AcmeAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AcmeAccountArrayOutput)
}

// AcmeAccountMapInput is an input type that accepts AcmeAccountMap and AcmeAccountMapOutput values.
// You can construct a concrete instance of `AcmeAccountMapInput` via:
//
//	AcmeAccountMap{ "key": AcmeAccountArgs{...} }
type AcmeAccountMapInput interface {
	pulumi.Input

	ToAcmeAccountMapOutput() AcmeAccountMapOutput
	ToAcmeAccountMapOutputWithContext(context.Context) AcmeAccountMapOutput
}

type AcmeAccountMap map[string]AcmeAccountInput

func (AcmeAccountMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AcmeAccount)(nil)).Elem()
}

func (i AcmeAccountMap) ToAcmeAccountMapOutput() AcmeAccountMapOutput {
	return i.ToAcmeAccountMapOutputWithContext(context.Background())
}

func (i AcmeAccountMap) ToAcmeAccountMapOutputWithContext(ctx context.Context) AcmeAccountMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AcmeAccountMapOutput)
}

type AcmeAccountOutput struct{ *pulumi.OutputState }

func (AcmeAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AcmeAccount)(nil)).Elem()
}

func (o AcmeAccountOutput) ToAcmeAccountOutput() AcmeAccountOutput {
	return o
}

func (o AcmeAccountOutput) ToAcmeAccountOutputWithContext(ctx context.Context) AcmeAccountOutput {
	return o
}

// The contact email addresses.
func (o AcmeAccountOutput) Contact() pulumi.StringOutput {
	return o.ApplyT(func(v *AcmeAccount) pulumi.StringOutput { return v.Contact }).(pulumi.StringOutput)
}

// The timestamp of the ACME account creation.
func (o AcmeAccountOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *AcmeAccount) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The URL of the ACME CA directory endpoint.
func (o AcmeAccountOutput) Directory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AcmeAccount) pulumi.StringPtrOutput { return v.Directory }).(pulumi.StringPtrOutput)
}

// The HMAC key for External Account Binding.
func (o AcmeAccountOutput) EabHmacKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AcmeAccount) pulumi.StringPtrOutput { return v.EabHmacKey }).(pulumi.StringPtrOutput)
}

// The Key Identifier for External Account Binding.
func (o AcmeAccountOutput) EabKid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AcmeAccount) pulumi.StringPtrOutput { return v.EabKid }).(pulumi.StringPtrOutput)
}

// The location of the ACME account.
func (o AcmeAccountOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *AcmeAccount) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The ACME account config file name.
func (o AcmeAccountOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AcmeAccount) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The URL of CA TermsOfService - setting this indicates agreement.
func (o AcmeAccountOutput) Tos() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AcmeAccount) pulumi.StringPtrOutput { return v.Tos }).(pulumi.StringPtrOutput)
}

type AcmeAccountArrayOutput struct{ *pulumi.OutputState }

func (AcmeAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AcmeAccount)(nil)).Elem()
}

func (o AcmeAccountArrayOutput) ToAcmeAccountArrayOutput() AcmeAccountArrayOutput {
	return o
}

func (o AcmeAccountArrayOutput) ToAcmeAccountArrayOutputWithContext(ctx context.Context) AcmeAccountArrayOutput {
	return o
}

func (o AcmeAccountArrayOutput) Index(i pulumi.IntInput) AcmeAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AcmeAccount {
		return vs[0].([]*AcmeAccount)[vs[1].(int)]
	}).(AcmeAccountOutput)
}

type AcmeAccountMapOutput struct{ *pulumi.OutputState }

func (AcmeAccountMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AcmeAccount)(nil)).Elem()
}

func (o AcmeAccountMapOutput) ToAcmeAccountMapOutput() AcmeAccountMapOutput {
	return o
}

func (o AcmeAccountMapOutput) ToAcmeAccountMapOutputWithContext(ctx context.Context) AcmeAccountMapOutput {
	return o
}

func (o AcmeAccountMapOutput) MapIndex(k pulumi.StringInput) AcmeAccountOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AcmeAccount {
		return vs[0].(map[string]*AcmeAccount)[vs[1].(string)]
	}).(AcmeAccountOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AcmeAccountInput)(nil)).Elem(), &AcmeAccount{})
	pulumi.RegisterInputType(reflect.TypeOf((*AcmeAccountArrayInput)(nil)).Elem(), AcmeAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AcmeAccountMapInput)(nil)).Elem(), AcmeAccountMap{})
	pulumi.RegisterOutputType(AcmeAccountOutput{})
	pulumi.RegisterOutputType(AcmeAccountArrayOutput{})
	pulumi.RegisterOutputType(AcmeAccountMapOutput{})
}
