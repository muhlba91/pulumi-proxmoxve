// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdn

import (
	"context"
	"reflect"

	"github.com/muhlba91/pulumi-proxmoxve/sdk/v7/go/proxmoxve/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type SubnetDhcpRange struct {
	// End of the DHCP range.
	EndAddress string `pulumi:"endAddress"`
	// Start of the DHCP range.
	StartAddress string `pulumi:"startAddress"`
}

// SubnetDhcpRangeInput is an input type that accepts SubnetDhcpRangeArgs and SubnetDhcpRangeOutput values.
// You can construct a concrete instance of `SubnetDhcpRangeInput` via:
//
//	SubnetDhcpRangeArgs{...}
type SubnetDhcpRangeInput interface {
	pulumi.Input

	ToSubnetDhcpRangeOutput() SubnetDhcpRangeOutput
	ToSubnetDhcpRangeOutputWithContext(context.Context) SubnetDhcpRangeOutput
}

type SubnetDhcpRangeArgs struct {
	// End of the DHCP range.
	EndAddress pulumi.StringInput `pulumi:"endAddress"`
	// Start of the DHCP range.
	StartAddress pulumi.StringInput `pulumi:"startAddress"`
}

func (SubnetDhcpRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetDhcpRange)(nil)).Elem()
}

func (i SubnetDhcpRangeArgs) ToSubnetDhcpRangeOutput() SubnetDhcpRangeOutput {
	return i.ToSubnetDhcpRangeOutputWithContext(context.Background())
}

func (i SubnetDhcpRangeArgs) ToSubnetDhcpRangeOutputWithContext(ctx context.Context) SubnetDhcpRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetDhcpRangeOutput)
}

func (i SubnetDhcpRangeArgs) ToSubnetDhcpRangePtrOutput() SubnetDhcpRangePtrOutput {
	return i.ToSubnetDhcpRangePtrOutputWithContext(context.Background())
}

func (i SubnetDhcpRangeArgs) ToSubnetDhcpRangePtrOutputWithContext(ctx context.Context) SubnetDhcpRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetDhcpRangeOutput).ToSubnetDhcpRangePtrOutputWithContext(ctx)
}

// SubnetDhcpRangePtrInput is an input type that accepts SubnetDhcpRangeArgs, SubnetDhcpRangePtr and SubnetDhcpRangePtrOutput values.
// You can construct a concrete instance of `SubnetDhcpRangePtrInput` via:
//
//	        SubnetDhcpRangeArgs{...}
//
//	or:
//
//	        nil
type SubnetDhcpRangePtrInput interface {
	pulumi.Input

	ToSubnetDhcpRangePtrOutput() SubnetDhcpRangePtrOutput
	ToSubnetDhcpRangePtrOutputWithContext(context.Context) SubnetDhcpRangePtrOutput
}

type subnetDhcpRangePtrType SubnetDhcpRangeArgs

func SubnetDhcpRangePtr(v *SubnetDhcpRangeArgs) SubnetDhcpRangePtrInput {
	return (*subnetDhcpRangePtrType)(v)
}

func (*subnetDhcpRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetDhcpRange)(nil)).Elem()
}

func (i *subnetDhcpRangePtrType) ToSubnetDhcpRangePtrOutput() SubnetDhcpRangePtrOutput {
	return i.ToSubnetDhcpRangePtrOutputWithContext(context.Background())
}

func (i *subnetDhcpRangePtrType) ToSubnetDhcpRangePtrOutputWithContext(ctx context.Context) SubnetDhcpRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetDhcpRangePtrOutput)
}

type SubnetDhcpRangeOutput struct{ *pulumi.OutputState }

func (SubnetDhcpRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetDhcpRange)(nil)).Elem()
}

func (o SubnetDhcpRangeOutput) ToSubnetDhcpRangeOutput() SubnetDhcpRangeOutput {
	return o
}

func (o SubnetDhcpRangeOutput) ToSubnetDhcpRangeOutputWithContext(ctx context.Context) SubnetDhcpRangeOutput {
	return o
}

func (o SubnetDhcpRangeOutput) ToSubnetDhcpRangePtrOutput() SubnetDhcpRangePtrOutput {
	return o.ToSubnetDhcpRangePtrOutputWithContext(context.Background())
}

func (o SubnetDhcpRangeOutput) ToSubnetDhcpRangePtrOutputWithContext(ctx context.Context) SubnetDhcpRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubnetDhcpRange) *SubnetDhcpRange {
		return &v
	}).(SubnetDhcpRangePtrOutput)
}

// End of the DHCP range.
func (o SubnetDhcpRangeOutput) EndAddress() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetDhcpRange) string { return v.EndAddress }).(pulumi.StringOutput)
}

// Start of the DHCP range.
func (o SubnetDhcpRangeOutput) StartAddress() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetDhcpRange) string { return v.StartAddress }).(pulumi.StringOutput)
}

type SubnetDhcpRangePtrOutput struct{ *pulumi.OutputState }

func (SubnetDhcpRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetDhcpRange)(nil)).Elem()
}

func (o SubnetDhcpRangePtrOutput) ToSubnetDhcpRangePtrOutput() SubnetDhcpRangePtrOutput {
	return o
}

func (o SubnetDhcpRangePtrOutput) ToSubnetDhcpRangePtrOutputWithContext(ctx context.Context) SubnetDhcpRangePtrOutput {
	return o
}

func (o SubnetDhcpRangePtrOutput) Elem() SubnetDhcpRangeOutput {
	return o.ApplyT(func(v *SubnetDhcpRange) SubnetDhcpRange {
		if v != nil {
			return *v
		}
		var ret SubnetDhcpRange
		return ret
	}).(SubnetDhcpRangeOutput)
}

// End of the DHCP range.
func (o SubnetDhcpRangePtrOutput) EndAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetDhcpRange) *string {
		if v == nil {
			return nil
		}
		return &v.EndAddress
	}).(pulumi.StringPtrOutput)
}

// Start of the DHCP range.
func (o SubnetDhcpRangePtrOutput) StartAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetDhcpRange) *string {
		if v == nil {
			return nil
		}
		return &v.StartAddress
	}).(pulumi.StringPtrOutput)
}

type GetSubnetDhcpRange struct {
	// End of the DHCP range.
	EndAddress string `pulumi:"endAddress"`
	// Start of the DHCP range.
	StartAddress string `pulumi:"startAddress"`
}

// GetSubnetDhcpRangeInput is an input type that accepts GetSubnetDhcpRangeArgs and GetSubnetDhcpRangeOutput values.
// You can construct a concrete instance of `GetSubnetDhcpRangeInput` via:
//
//	GetSubnetDhcpRangeArgs{...}
type GetSubnetDhcpRangeInput interface {
	pulumi.Input

	ToGetSubnetDhcpRangeOutput() GetSubnetDhcpRangeOutput
	ToGetSubnetDhcpRangeOutputWithContext(context.Context) GetSubnetDhcpRangeOutput
}

type GetSubnetDhcpRangeArgs struct {
	// End of the DHCP range.
	EndAddress pulumi.StringInput `pulumi:"endAddress"`
	// Start of the DHCP range.
	StartAddress pulumi.StringInput `pulumi:"startAddress"`
}

func (GetSubnetDhcpRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubnetDhcpRange)(nil)).Elem()
}

func (i GetSubnetDhcpRangeArgs) ToGetSubnetDhcpRangeOutput() GetSubnetDhcpRangeOutput {
	return i.ToGetSubnetDhcpRangeOutputWithContext(context.Background())
}

func (i GetSubnetDhcpRangeArgs) ToGetSubnetDhcpRangeOutputWithContext(ctx context.Context) GetSubnetDhcpRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubnetDhcpRangeOutput)
}

func (i GetSubnetDhcpRangeArgs) ToGetSubnetDhcpRangePtrOutput() GetSubnetDhcpRangePtrOutput {
	return i.ToGetSubnetDhcpRangePtrOutputWithContext(context.Background())
}

func (i GetSubnetDhcpRangeArgs) ToGetSubnetDhcpRangePtrOutputWithContext(ctx context.Context) GetSubnetDhcpRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubnetDhcpRangeOutput).ToGetSubnetDhcpRangePtrOutputWithContext(ctx)
}

// GetSubnetDhcpRangePtrInput is an input type that accepts GetSubnetDhcpRangeArgs, GetSubnetDhcpRangePtr and GetSubnetDhcpRangePtrOutput values.
// You can construct a concrete instance of `GetSubnetDhcpRangePtrInput` via:
//
//	        GetSubnetDhcpRangeArgs{...}
//
//	or:
//
//	        nil
type GetSubnetDhcpRangePtrInput interface {
	pulumi.Input

	ToGetSubnetDhcpRangePtrOutput() GetSubnetDhcpRangePtrOutput
	ToGetSubnetDhcpRangePtrOutputWithContext(context.Context) GetSubnetDhcpRangePtrOutput
}

type getSubnetDhcpRangePtrType GetSubnetDhcpRangeArgs

func GetSubnetDhcpRangePtr(v *GetSubnetDhcpRangeArgs) GetSubnetDhcpRangePtrInput {
	return (*getSubnetDhcpRangePtrType)(v)
}

func (*getSubnetDhcpRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSubnetDhcpRange)(nil)).Elem()
}

func (i *getSubnetDhcpRangePtrType) ToGetSubnetDhcpRangePtrOutput() GetSubnetDhcpRangePtrOutput {
	return i.ToGetSubnetDhcpRangePtrOutputWithContext(context.Background())
}

func (i *getSubnetDhcpRangePtrType) ToGetSubnetDhcpRangePtrOutputWithContext(ctx context.Context) GetSubnetDhcpRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubnetDhcpRangePtrOutput)
}

type GetSubnetDhcpRangeOutput struct{ *pulumi.OutputState }

func (GetSubnetDhcpRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubnetDhcpRange)(nil)).Elem()
}

func (o GetSubnetDhcpRangeOutput) ToGetSubnetDhcpRangeOutput() GetSubnetDhcpRangeOutput {
	return o
}

func (o GetSubnetDhcpRangeOutput) ToGetSubnetDhcpRangeOutputWithContext(ctx context.Context) GetSubnetDhcpRangeOutput {
	return o
}

func (o GetSubnetDhcpRangeOutput) ToGetSubnetDhcpRangePtrOutput() GetSubnetDhcpRangePtrOutput {
	return o.ToGetSubnetDhcpRangePtrOutputWithContext(context.Background())
}

func (o GetSubnetDhcpRangeOutput) ToGetSubnetDhcpRangePtrOutputWithContext(ctx context.Context) GetSubnetDhcpRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSubnetDhcpRange) *GetSubnetDhcpRange {
		return &v
	}).(GetSubnetDhcpRangePtrOutput)
}

// End of the DHCP range.
func (o GetSubnetDhcpRangeOutput) EndAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetDhcpRange) string { return v.EndAddress }).(pulumi.StringOutput)
}

// Start of the DHCP range.
func (o GetSubnetDhcpRangeOutput) StartAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetDhcpRange) string { return v.StartAddress }).(pulumi.StringOutput)
}

type GetSubnetDhcpRangePtrOutput struct{ *pulumi.OutputState }

func (GetSubnetDhcpRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSubnetDhcpRange)(nil)).Elem()
}

func (o GetSubnetDhcpRangePtrOutput) ToGetSubnetDhcpRangePtrOutput() GetSubnetDhcpRangePtrOutput {
	return o
}

func (o GetSubnetDhcpRangePtrOutput) ToGetSubnetDhcpRangePtrOutputWithContext(ctx context.Context) GetSubnetDhcpRangePtrOutput {
	return o
}

func (o GetSubnetDhcpRangePtrOutput) Elem() GetSubnetDhcpRangeOutput {
	return o.ApplyT(func(v *GetSubnetDhcpRange) GetSubnetDhcpRange {
		if v != nil {
			return *v
		}
		var ret GetSubnetDhcpRange
		return ret
	}).(GetSubnetDhcpRangeOutput)
}

// End of the DHCP range.
func (o GetSubnetDhcpRangePtrOutput) EndAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSubnetDhcpRange) *string {
		if v == nil {
			return nil
		}
		return &v.EndAddress
	}).(pulumi.StringPtrOutput)
}

// Start of the DHCP range.
func (o GetSubnetDhcpRangePtrOutput) StartAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSubnetDhcpRange) *string {
		if v == nil {
			return nil
		}
		return &v.StartAddress
	}).(pulumi.StringPtrOutput)
}

type GetZonesZone struct {
	AdvertiseSubnets        bool     `pulumi:"advertiseSubnets"`
	Bridge                  string   `pulumi:"bridge"`
	Controller              string   `pulumi:"controller"`
	Dhcp                    string   `pulumi:"dhcp"`
	DisableArpNdSuppression bool     `pulumi:"disableArpNdSuppression"`
	Dns                     string   `pulumi:"dns"`
	DnsZone                 string   `pulumi:"dnsZone"`
	ExitNodes               []string `pulumi:"exitNodes"`
	ExitNodesLocalRouting   bool     `pulumi:"exitNodesLocalRouting"`
	Id                      string   `pulumi:"id"`
	Ipam                    string   `pulumi:"ipam"`
	Mtu                     int      `pulumi:"mtu"`
	Nodes                   []string `pulumi:"nodes"`
	Peers                   []string `pulumi:"peers"`
	Pending                 bool     `pulumi:"pending"`
	PrimaryExitNode         string   `pulumi:"primaryExitNode"`
	ReverseDns              string   `pulumi:"reverseDns"`
	RtImport                string   `pulumi:"rtImport"`
	ServiceVlan             int      `pulumi:"serviceVlan"`
	ServiceVlanProtocol     string   `pulumi:"serviceVlanProtocol"`
	State                   string   `pulumi:"state"`
	Type                    string   `pulumi:"type"`
	VrfVxlan                int      `pulumi:"vrfVxlan"`
}

// GetZonesZoneInput is an input type that accepts GetZonesZoneArgs and GetZonesZoneOutput values.
// You can construct a concrete instance of `GetZonesZoneInput` via:
//
//	GetZonesZoneArgs{...}
type GetZonesZoneInput interface {
	pulumi.Input

	ToGetZonesZoneOutput() GetZonesZoneOutput
	ToGetZonesZoneOutputWithContext(context.Context) GetZonesZoneOutput
}

type GetZonesZoneArgs struct {
	AdvertiseSubnets        pulumi.BoolInput        `pulumi:"advertiseSubnets"`
	Bridge                  pulumi.StringInput      `pulumi:"bridge"`
	Controller              pulumi.StringInput      `pulumi:"controller"`
	Dhcp                    pulumi.StringInput      `pulumi:"dhcp"`
	DisableArpNdSuppression pulumi.BoolInput        `pulumi:"disableArpNdSuppression"`
	Dns                     pulumi.StringInput      `pulumi:"dns"`
	DnsZone                 pulumi.StringInput      `pulumi:"dnsZone"`
	ExitNodes               pulumi.StringArrayInput `pulumi:"exitNodes"`
	ExitNodesLocalRouting   pulumi.BoolInput        `pulumi:"exitNodesLocalRouting"`
	Id                      pulumi.StringInput      `pulumi:"id"`
	Ipam                    pulumi.StringInput      `pulumi:"ipam"`
	Mtu                     pulumi.IntInput         `pulumi:"mtu"`
	Nodes                   pulumi.StringArrayInput `pulumi:"nodes"`
	Peers                   pulumi.StringArrayInput `pulumi:"peers"`
	Pending                 pulumi.BoolInput        `pulumi:"pending"`
	PrimaryExitNode         pulumi.StringInput      `pulumi:"primaryExitNode"`
	ReverseDns              pulumi.StringInput      `pulumi:"reverseDns"`
	RtImport                pulumi.StringInput      `pulumi:"rtImport"`
	ServiceVlan             pulumi.IntInput         `pulumi:"serviceVlan"`
	ServiceVlanProtocol     pulumi.StringInput      `pulumi:"serviceVlanProtocol"`
	State                   pulumi.StringInput      `pulumi:"state"`
	Type                    pulumi.StringInput      `pulumi:"type"`
	VrfVxlan                pulumi.IntInput         `pulumi:"vrfVxlan"`
}

func (GetZonesZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesZone)(nil)).Elem()
}

func (i GetZonesZoneArgs) ToGetZonesZoneOutput() GetZonesZoneOutput {
	return i.ToGetZonesZoneOutputWithContext(context.Background())
}

func (i GetZonesZoneArgs) ToGetZonesZoneOutputWithContext(ctx context.Context) GetZonesZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesZoneOutput)
}

// GetZonesZoneArrayInput is an input type that accepts GetZonesZoneArray and GetZonesZoneArrayOutput values.
// You can construct a concrete instance of `GetZonesZoneArrayInput` via:
//
//	GetZonesZoneArray{ GetZonesZoneArgs{...} }
type GetZonesZoneArrayInput interface {
	pulumi.Input

	ToGetZonesZoneArrayOutput() GetZonesZoneArrayOutput
	ToGetZonesZoneArrayOutputWithContext(context.Context) GetZonesZoneArrayOutput
}

type GetZonesZoneArray []GetZonesZoneInput

func (GetZonesZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesZone)(nil)).Elem()
}

func (i GetZonesZoneArray) ToGetZonesZoneArrayOutput() GetZonesZoneArrayOutput {
	return i.ToGetZonesZoneArrayOutputWithContext(context.Background())
}

func (i GetZonesZoneArray) ToGetZonesZoneArrayOutputWithContext(ctx context.Context) GetZonesZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesZoneArrayOutput)
}

type GetZonesZoneOutput struct{ *pulumi.OutputState }

func (GetZonesZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesZone)(nil)).Elem()
}

func (o GetZonesZoneOutput) ToGetZonesZoneOutput() GetZonesZoneOutput {
	return o
}

func (o GetZonesZoneOutput) ToGetZonesZoneOutputWithContext(ctx context.Context) GetZonesZoneOutput {
	return o
}

func (o GetZonesZoneOutput) AdvertiseSubnets() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZonesZone) bool { return v.AdvertiseSubnets }).(pulumi.BoolOutput)
}

func (o GetZonesZoneOutput) Bridge() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZone) string { return v.Bridge }).(pulumi.StringOutput)
}

func (o GetZonesZoneOutput) Controller() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZone) string { return v.Controller }).(pulumi.StringOutput)
}

func (o GetZonesZoneOutput) Dhcp() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZone) string { return v.Dhcp }).(pulumi.StringOutput)
}

func (o GetZonesZoneOutput) DisableArpNdSuppression() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZonesZone) bool { return v.DisableArpNdSuppression }).(pulumi.BoolOutput)
}

func (o GetZonesZoneOutput) Dns() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZone) string { return v.Dns }).(pulumi.StringOutput)
}

func (o GetZonesZoneOutput) DnsZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZone) string { return v.DnsZone }).(pulumi.StringOutput)
}

func (o GetZonesZoneOutput) ExitNodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetZonesZone) []string { return v.ExitNodes }).(pulumi.StringArrayOutput)
}

func (o GetZonesZoneOutput) ExitNodesLocalRouting() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZonesZone) bool { return v.ExitNodesLocalRouting }).(pulumi.BoolOutput)
}

func (o GetZonesZoneOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZone) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetZonesZoneOutput) Ipam() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZone) string { return v.Ipam }).(pulumi.StringOutput)
}

func (o GetZonesZoneOutput) Mtu() pulumi.IntOutput {
	return o.ApplyT(func(v GetZonesZone) int { return v.Mtu }).(pulumi.IntOutput)
}

func (o GetZonesZoneOutput) Nodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetZonesZone) []string { return v.Nodes }).(pulumi.StringArrayOutput)
}

func (o GetZonesZoneOutput) Peers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetZonesZone) []string { return v.Peers }).(pulumi.StringArrayOutput)
}

func (o GetZonesZoneOutput) Pending() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZonesZone) bool { return v.Pending }).(pulumi.BoolOutput)
}

func (o GetZonesZoneOutput) PrimaryExitNode() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZone) string { return v.PrimaryExitNode }).(pulumi.StringOutput)
}

func (o GetZonesZoneOutput) ReverseDns() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZone) string { return v.ReverseDns }).(pulumi.StringOutput)
}

func (o GetZonesZoneOutput) RtImport() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZone) string { return v.RtImport }).(pulumi.StringOutput)
}

func (o GetZonesZoneOutput) ServiceVlan() pulumi.IntOutput {
	return o.ApplyT(func(v GetZonesZone) int { return v.ServiceVlan }).(pulumi.IntOutput)
}

func (o GetZonesZoneOutput) ServiceVlanProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZone) string { return v.ServiceVlanProtocol }).(pulumi.StringOutput)
}

func (o GetZonesZoneOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZone) string { return v.State }).(pulumi.StringOutput)
}

func (o GetZonesZoneOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZone) string { return v.Type }).(pulumi.StringOutput)
}

func (o GetZonesZoneOutput) VrfVxlan() pulumi.IntOutput {
	return o.ApplyT(func(v GetZonesZone) int { return v.VrfVxlan }).(pulumi.IntOutput)
}

type GetZonesZoneArrayOutput struct{ *pulumi.OutputState }

func (GetZonesZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesZone)(nil)).Elem()
}

func (o GetZonesZoneArrayOutput) ToGetZonesZoneArrayOutput() GetZonesZoneArrayOutput {
	return o
}

func (o GetZonesZoneArrayOutput) ToGetZonesZoneArrayOutputWithContext(ctx context.Context) GetZonesZoneArrayOutput {
	return o
}

func (o GetZonesZoneArrayOutput) Index(i pulumi.IntInput) GetZonesZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZonesZone {
		return vs[0].([]GetZonesZone)[vs[1].(int)]
	}).(GetZonesZoneOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetDhcpRangeInput)(nil)).Elem(), SubnetDhcpRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetDhcpRangePtrInput)(nil)).Elem(), SubnetDhcpRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubnetDhcpRangeInput)(nil)).Elem(), GetSubnetDhcpRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubnetDhcpRangePtrInput)(nil)).Elem(), GetSubnetDhcpRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZonesZoneInput)(nil)).Elem(), GetZonesZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZonesZoneArrayInput)(nil)).Elem(), GetZonesZoneArray{})
	pulumi.RegisterOutputType(SubnetDhcpRangeOutput{})
	pulumi.RegisterOutputType(SubnetDhcpRangePtrOutput{})
	pulumi.RegisterOutputType(GetSubnetDhcpRangeOutput{})
	pulumi.RegisterOutputType(GetSubnetDhcpRangePtrOutput{})
	pulumi.RegisterOutputType(GetZonesZoneOutput{})
	pulumi.RegisterOutputType(GetZonesZoneArrayOutput{})
}
