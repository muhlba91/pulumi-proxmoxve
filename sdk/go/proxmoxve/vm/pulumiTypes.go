// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vm

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type VirtualMachineAgent struct {
	Enabled *bool   `pulumi:"enabled"`
	Timeout *string `pulumi:"timeout"`
	Trim    *bool   `pulumi:"trim"`
	Type    *string `pulumi:"type"`
}

// VirtualMachineAgentInput is an input type that accepts VirtualMachineAgentArgs and VirtualMachineAgentOutput values.
// You can construct a concrete instance of `VirtualMachineAgentInput` via:
//
//	VirtualMachineAgentArgs{...}
type VirtualMachineAgentInput interface {
	pulumi.Input

	ToVirtualMachineAgentOutput() VirtualMachineAgentOutput
	ToVirtualMachineAgentOutputWithContext(context.Context) VirtualMachineAgentOutput
}

type VirtualMachineAgentArgs struct {
	Enabled pulumi.BoolPtrInput   `pulumi:"enabled"`
	Timeout pulumi.StringPtrInput `pulumi:"timeout"`
	Trim    pulumi.BoolPtrInput   `pulumi:"trim"`
	Type    pulumi.StringPtrInput `pulumi:"type"`
}

func (VirtualMachineAgentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineAgent)(nil)).Elem()
}

func (i VirtualMachineAgentArgs) ToVirtualMachineAgentOutput() VirtualMachineAgentOutput {
	return i.ToVirtualMachineAgentOutputWithContext(context.Background())
}

func (i VirtualMachineAgentArgs) ToVirtualMachineAgentOutputWithContext(ctx context.Context) VirtualMachineAgentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineAgentOutput)
}

func (i VirtualMachineAgentArgs) ToVirtualMachineAgentPtrOutput() VirtualMachineAgentPtrOutput {
	return i.ToVirtualMachineAgentPtrOutputWithContext(context.Background())
}

func (i VirtualMachineAgentArgs) ToVirtualMachineAgentPtrOutputWithContext(ctx context.Context) VirtualMachineAgentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineAgentOutput).ToVirtualMachineAgentPtrOutputWithContext(ctx)
}

// VirtualMachineAgentPtrInput is an input type that accepts VirtualMachineAgentArgs, VirtualMachineAgentPtr and VirtualMachineAgentPtrOutput values.
// You can construct a concrete instance of `VirtualMachineAgentPtrInput` via:
//
//	        VirtualMachineAgentArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineAgentPtrInput interface {
	pulumi.Input

	ToVirtualMachineAgentPtrOutput() VirtualMachineAgentPtrOutput
	ToVirtualMachineAgentPtrOutputWithContext(context.Context) VirtualMachineAgentPtrOutput
}

type virtualMachineAgentPtrType VirtualMachineAgentArgs

func VirtualMachineAgentPtr(v *VirtualMachineAgentArgs) VirtualMachineAgentPtrInput {
	return (*virtualMachineAgentPtrType)(v)
}

func (*virtualMachineAgentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineAgent)(nil)).Elem()
}

func (i *virtualMachineAgentPtrType) ToVirtualMachineAgentPtrOutput() VirtualMachineAgentPtrOutput {
	return i.ToVirtualMachineAgentPtrOutputWithContext(context.Background())
}

func (i *virtualMachineAgentPtrType) ToVirtualMachineAgentPtrOutputWithContext(ctx context.Context) VirtualMachineAgentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineAgentPtrOutput)
}

type VirtualMachineAgentOutput struct{ *pulumi.OutputState }

func (VirtualMachineAgentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineAgent)(nil)).Elem()
}

func (o VirtualMachineAgentOutput) ToVirtualMachineAgentOutput() VirtualMachineAgentOutput {
	return o
}

func (o VirtualMachineAgentOutput) ToVirtualMachineAgentOutputWithContext(ctx context.Context) VirtualMachineAgentOutput {
	return o
}

func (o VirtualMachineAgentOutput) ToVirtualMachineAgentPtrOutput() VirtualMachineAgentPtrOutput {
	return o.ToVirtualMachineAgentPtrOutputWithContext(context.Background())
}

func (o VirtualMachineAgentOutput) ToVirtualMachineAgentPtrOutputWithContext(ctx context.Context) VirtualMachineAgentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineAgent) *VirtualMachineAgent {
		return &v
	}).(VirtualMachineAgentPtrOutput)
}

func (o VirtualMachineAgentOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineAgent) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o VirtualMachineAgentOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineAgent) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

func (o VirtualMachineAgentOutput) Trim() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineAgent) *bool { return v.Trim }).(pulumi.BoolPtrOutput)
}

func (o VirtualMachineAgentOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineAgent) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type VirtualMachineAgentPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineAgentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineAgent)(nil)).Elem()
}

func (o VirtualMachineAgentPtrOutput) ToVirtualMachineAgentPtrOutput() VirtualMachineAgentPtrOutput {
	return o
}

func (o VirtualMachineAgentPtrOutput) ToVirtualMachineAgentPtrOutputWithContext(ctx context.Context) VirtualMachineAgentPtrOutput {
	return o
}

func (o VirtualMachineAgentPtrOutput) Elem() VirtualMachineAgentOutput {
	return o.ApplyT(func(v *VirtualMachineAgent) VirtualMachineAgent {
		if v != nil {
			return *v
		}
		var ret VirtualMachineAgent
		return ret
	}).(VirtualMachineAgentOutput)
}

func (o VirtualMachineAgentPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineAgent) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o VirtualMachineAgentPtrOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineAgent) *string {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.StringPtrOutput)
}

func (o VirtualMachineAgentPtrOutput) Trim() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineAgent) *bool {
		if v == nil {
			return nil
		}
		return v.Trim
	}).(pulumi.BoolPtrOutput)
}

func (o VirtualMachineAgentPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineAgent) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type VirtualMachineAudioDevice struct {
	Device  *string `pulumi:"device"`
	Driver  *string `pulumi:"driver"`
	Enabled *bool   `pulumi:"enabled"`
}

// VirtualMachineAudioDeviceInput is an input type that accepts VirtualMachineAudioDeviceArgs and VirtualMachineAudioDeviceOutput values.
// You can construct a concrete instance of `VirtualMachineAudioDeviceInput` via:
//
//	VirtualMachineAudioDeviceArgs{...}
type VirtualMachineAudioDeviceInput interface {
	pulumi.Input

	ToVirtualMachineAudioDeviceOutput() VirtualMachineAudioDeviceOutput
	ToVirtualMachineAudioDeviceOutputWithContext(context.Context) VirtualMachineAudioDeviceOutput
}

type VirtualMachineAudioDeviceArgs struct {
	Device  pulumi.StringPtrInput `pulumi:"device"`
	Driver  pulumi.StringPtrInput `pulumi:"driver"`
	Enabled pulumi.BoolPtrInput   `pulumi:"enabled"`
}

func (VirtualMachineAudioDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineAudioDevice)(nil)).Elem()
}

func (i VirtualMachineAudioDeviceArgs) ToVirtualMachineAudioDeviceOutput() VirtualMachineAudioDeviceOutput {
	return i.ToVirtualMachineAudioDeviceOutputWithContext(context.Background())
}

func (i VirtualMachineAudioDeviceArgs) ToVirtualMachineAudioDeviceOutputWithContext(ctx context.Context) VirtualMachineAudioDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineAudioDeviceOutput)
}

func (i VirtualMachineAudioDeviceArgs) ToVirtualMachineAudioDevicePtrOutput() VirtualMachineAudioDevicePtrOutput {
	return i.ToVirtualMachineAudioDevicePtrOutputWithContext(context.Background())
}

func (i VirtualMachineAudioDeviceArgs) ToVirtualMachineAudioDevicePtrOutputWithContext(ctx context.Context) VirtualMachineAudioDevicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineAudioDeviceOutput).ToVirtualMachineAudioDevicePtrOutputWithContext(ctx)
}

// VirtualMachineAudioDevicePtrInput is an input type that accepts VirtualMachineAudioDeviceArgs, VirtualMachineAudioDevicePtr and VirtualMachineAudioDevicePtrOutput values.
// You can construct a concrete instance of `VirtualMachineAudioDevicePtrInput` via:
//
//	        VirtualMachineAudioDeviceArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineAudioDevicePtrInput interface {
	pulumi.Input

	ToVirtualMachineAudioDevicePtrOutput() VirtualMachineAudioDevicePtrOutput
	ToVirtualMachineAudioDevicePtrOutputWithContext(context.Context) VirtualMachineAudioDevicePtrOutput
}

type virtualMachineAudioDevicePtrType VirtualMachineAudioDeviceArgs

func VirtualMachineAudioDevicePtr(v *VirtualMachineAudioDeviceArgs) VirtualMachineAudioDevicePtrInput {
	return (*virtualMachineAudioDevicePtrType)(v)
}

func (*virtualMachineAudioDevicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineAudioDevice)(nil)).Elem()
}

func (i *virtualMachineAudioDevicePtrType) ToVirtualMachineAudioDevicePtrOutput() VirtualMachineAudioDevicePtrOutput {
	return i.ToVirtualMachineAudioDevicePtrOutputWithContext(context.Background())
}

func (i *virtualMachineAudioDevicePtrType) ToVirtualMachineAudioDevicePtrOutputWithContext(ctx context.Context) VirtualMachineAudioDevicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineAudioDevicePtrOutput)
}

type VirtualMachineAudioDeviceOutput struct{ *pulumi.OutputState }

func (VirtualMachineAudioDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineAudioDevice)(nil)).Elem()
}

func (o VirtualMachineAudioDeviceOutput) ToVirtualMachineAudioDeviceOutput() VirtualMachineAudioDeviceOutput {
	return o
}

func (o VirtualMachineAudioDeviceOutput) ToVirtualMachineAudioDeviceOutputWithContext(ctx context.Context) VirtualMachineAudioDeviceOutput {
	return o
}

func (o VirtualMachineAudioDeviceOutput) ToVirtualMachineAudioDevicePtrOutput() VirtualMachineAudioDevicePtrOutput {
	return o.ToVirtualMachineAudioDevicePtrOutputWithContext(context.Background())
}

func (o VirtualMachineAudioDeviceOutput) ToVirtualMachineAudioDevicePtrOutputWithContext(ctx context.Context) VirtualMachineAudioDevicePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineAudioDevice) *VirtualMachineAudioDevice {
		return &v
	}).(VirtualMachineAudioDevicePtrOutput)
}

func (o VirtualMachineAudioDeviceOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineAudioDevice) *string { return v.Device }).(pulumi.StringPtrOutput)
}

func (o VirtualMachineAudioDeviceOutput) Driver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineAudioDevice) *string { return v.Driver }).(pulumi.StringPtrOutput)
}

func (o VirtualMachineAudioDeviceOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineAudioDevice) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type VirtualMachineAudioDevicePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineAudioDevicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineAudioDevice)(nil)).Elem()
}

func (o VirtualMachineAudioDevicePtrOutput) ToVirtualMachineAudioDevicePtrOutput() VirtualMachineAudioDevicePtrOutput {
	return o
}

func (o VirtualMachineAudioDevicePtrOutput) ToVirtualMachineAudioDevicePtrOutputWithContext(ctx context.Context) VirtualMachineAudioDevicePtrOutput {
	return o
}

func (o VirtualMachineAudioDevicePtrOutput) Elem() VirtualMachineAudioDeviceOutput {
	return o.ApplyT(func(v *VirtualMachineAudioDevice) VirtualMachineAudioDevice {
		if v != nil {
			return *v
		}
		var ret VirtualMachineAudioDevice
		return ret
	}).(VirtualMachineAudioDeviceOutput)
}

func (o VirtualMachineAudioDevicePtrOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineAudioDevice) *string {
		if v == nil {
			return nil
		}
		return v.Device
	}).(pulumi.StringPtrOutput)
}

func (o VirtualMachineAudioDevicePtrOutput) Driver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineAudioDevice) *string {
		if v == nil {
			return nil
		}
		return v.Driver
	}).(pulumi.StringPtrOutput)
}

func (o VirtualMachineAudioDevicePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineAudioDevice) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type VirtualMachineCdrom struct {
	Enabled *bool   `pulumi:"enabled"`
	FileId  *string `pulumi:"fileId"`
}

// VirtualMachineCdromInput is an input type that accepts VirtualMachineCdromArgs and VirtualMachineCdromOutput values.
// You can construct a concrete instance of `VirtualMachineCdromInput` via:
//
//	VirtualMachineCdromArgs{...}
type VirtualMachineCdromInput interface {
	pulumi.Input

	ToVirtualMachineCdromOutput() VirtualMachineCdromOutput
	ToVirtualMachineCdromOutputWithContext(context.Context) VirtualMachineCdromOutput
}

type VirtualMachineCdromArgs struct {
	Enabled pulumi.BoolPtrInput   `pulumi:"enabled"`
	FileId  pulumi.StringPtrInput `pulumi:"fileId"`
}

func (VirtualMachineCdromArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineCdrom)(nil)).Elem()
}

func (i VirtualMachineCdromArgs) ToVirtualMachineCdromOutput() VirtualMachineCdromOutput {
	return i.ToVirtualMachineCdromOutputWithContext(context.Background())
}

func (i VirtualMachineCdromArgs) ToVirtualMachineCdromOutputWithContext(ctx context.Context) VirtualMachineCdromOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineCdromOutput)
}

func (i VirtualMachineCdromArgs) ToVirtualMachineCdromPtrOutput() VirtualMachineCdromPtrOutput {
	return i.ToVirtualMachineCdromPtrOutputWithContext(context.Background())
}

func (i VirtualMachineCdromArgs) ToVirtualMachineCdromPtrOutputWithContext(ctx context.Context) VirtualMachineCdromPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineCdromOutput).ToVirtualMachineCdromPtrOutputWithContext(ctx)
}

// VirtualMachineCdromPtrInput is an input type that accepts VirtualMachineCdromArgs, VirtualMachineCdromPtr and VirtualMachineCdromPtrOutput values.
// You can construct a concrete instance of `VirtualMachineCdromPtrInput` via:
//
//	        VirtualMachineCdromArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineCdromPtrInput interface {
	pulumi.Input

	ToVirtualMachineCdromPtrOutput() VirtualMachineCdromPtrOutput
	ToVirtualMachineCdromPtrOutputWithContext(context.Context) VirtualMachineCdromPtrOutput
}

type virtualMachineCdromPtrType VirtualMachineCdromArgs

func VirtualMachineCdromPtr(v *VirtualMachineCdromArgs) VirtualMachineCdromPtrInput {
	return (*virtualMachineCdromPtrType)(v)
}

func (*virtualMachineCdromPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineCdrom)(nil)).Elem()
}

func (i *virtualMachineCdromPtrType) ToVirtualMachineCdromPtrOutput() VirtualMachineCdromPtrOutput {
	return i.ToVirtualMachineCdromPtrOutputWithContext(context.Background())
}

func (i *virtualMachineCdromPtrType) ToVirtualMachineCdromPtrOutputWithContext(ctx context.Context) VirtualMachineCdromPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineCdromPtrOutput)
}

type VirtualMachineCdromOutput struct{ *pulumi.OutputState }

func (VirtualMachineCdromOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineCdrom)(nil)).Elem()
}

func (o VirtualMachineCdromOutput) ToVirtualMachineCdromOutput() VirtualMachineCdromOutput {
	return o
}

func (o VirtualMachineCdromOutput) ToVirtualMachineCdromOutputWithContext(ctx context.Context) VirtualMachineCdromOutput {
	return o
}

func (o VirtualMachineCdromOutput) ToVirtualMachineCdromPtrOutput() VirtualMachineCdromPtrOutput {
	return o.ToVirtualMachineCdromPtrOutputWithContext(context.Background())
}

func (o VirtualMachineCdromOutput) ToVirtualMachineCdromPtrOutputWithContext(ctx context.Context) VirtualMachineCdromPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineCdrom) *VirtualMachineCdrom {
		return &v
	}).(VirtualMachineCdromPtrOutput)
}

func (o VirtualMachineCdromOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineCdrom) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o VirtualMachineCdromOutput) FileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineCdrom) *string { return v.FileId }).(pulumi.StringPtrOutput)
}

type VirtualMachineCdromPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineCdromPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineCdrom)(nil)).Elem()
}

func (o VirtualMachineCdromPtrOutput) ToVirtualMachineCdromPtrOutput() VirtualMachineCdromPtrOutput {
	return o
}

func (o VirtualMachineCdromPtrOutput) ToVirtualMachineCdromPtrOutputWithContext(ctx context.Context) VirtualMachineCdromPtrOutput {
	return o
}

func (o VirtualMachineCdromPtrOutput) Elem() VirtualMachineCdromOutput {
	return o.ApplyT(func(v *VirtualMachineCdrom) VirtualMachineCdrom {
		if v != nil {
			return *v
		}
		var ret VirtualMachineCdrom
		return ret
	}).(VirtualMachineCdromOutput)
}

func (o VirtualMachineCdromPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineCdrom) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o VirtualMachineCdromPtrOutput) FileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineCdrom) *string {
		if v == nil {
			return nil
		}
		return v.FileId
	}).(pulumi.StringPtrOutput)
}

type VirtualMachineClone struct {
	DatastoreId *string `pulumi:"datastoreId"`
	Full        *bool   `pulumi:"full"`
	NodeName    *string `pulumi:"nodeName"`
	Retries     *int    `pulumi:"retries"`
	VmId        int     `pulumi:"vmId"`
}

// VirtualMachineCloneInput is an input type that accepts VirtualMachineCloneArgs and VirtualMachineCloneOutput values.
// You can construct a concrete instance of `VirtualMachineCloneInput` via:
//
//	VirtualMachineCloneArgs{...}
type VirtualMachineCloneInput interface {
	pulumi.Input

	ToVirtualMachineCloneOutput() VirtualMachineCloneOutput
	ToVirtualMachineCloneOutputWithContext(context.Context) VirtualMachineCloneOutput
}

type VirtualMachineCloneArgs struct {
	DatastoreId pulumi.StringPtrInput `pulumi:"datastoreId"`
	Full        pulumi.BoolPtrInput   `pulumi:"full"`
	NodeName    pulumi.StringPtrInput `pulumi:"nodeName"`
	Retries     pulumi.IntPtrInput    `pulumi:"retries"`
	VmId        pulumi.IntInput       `pulumi:"vmId"`
}

func (VirtualMachineCloneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineClone)(nil)).Elem()
}

func (i VirtualMachineCloneArgs) ToVirtualMachineCloneOutput() VirtualMachineCloneOutput {
	return i.ToVirtualMachineCloneOutputWithContext(context.Background())
}

func (i VirtualMachineCloneArgs) ToVirtualMachineCloneOutputWithContext(ctx context.Context) VirtualMachineCloneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineCloneOutput)
}

func (i VirtualMachineCloneArgs) ToVirtualMachineClonePtrOutput() VirtualMachineClonePtrOutput {
	return i.ToVirtualMachineClonePtrOutputWithContext(context.Background())
}

func (i VirtualMachineCloneArgs) ToVirtualMachineClonePtrOutputWithContext(ctx context.Context) VirtualMachineClonePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineCloneOutput).ToVirtualMachineClonePtrOutputWithContext(ctx)
}

// VirtualMachineClonePtrInput is an input type that accepts VirtualMachineCloneArgs, VirtualMachineClonePtr and VirtualMachineClonePtrOutput values.
// You can construct a concrete instance of `VirtualMachineClonePtrInput` via:
//
//	        VirtualMachineCloneArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineClonePtrInput interface {
	pulumi.Input

	ToVirtualMachineClonePtrOutput() VirtualMachineClonePtrOutput
	ToVirtualMachineClonePtrOutputWithContext(context.Context) VirtualMachineClonePtrOutput
}

type virtualMachineClonePtrType VirtualMachineCloneArgs

func VirtualMachineClonePtr(v *VirtualMachineCloneArgs) VirtualMachineClonePtrInput {
	return (*virtualMachineClonePtrType)(v)
}

func (*virtualMachineClonePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineClone)(nil)).Elem()
}

func (i *virtualMachineClonePtrType) ToVirtualMachineClonePtrOutput() VirtualMachineClonePtrOutput {
	return i.ToVirtualMachineClonePtrOutputWithContext(context.Background())
}

func (i *virtualMachineClonePtrType) ToVirtualMachineClonePtrOutputWithContext(ctx context.Context) VirtualMachineClonePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineClonePtrOutput)
}

type VirtualMachineCloneOutput struct{ *pulumi.OutputState }

func (VirtualMachineCloneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineClone)(nil)).Elem()
}

func (o VirtualMachineCloneOutput) ToVirtualMachineCloneOutput() VirtualMachineCloneOutput {
	return o
}

func (o VirtualMachineCloneOutput) ToVirtualMachineCloneOutputWithContext(ctx context.Context) VirtualMachineCloneOutput {
	return o
}

func (o VirtualMachineCloneOutput) ToVirtualMachineClonePtrOutput() VirtualMachineClonePtrOutput {
	return o.ToVirtualMachineClonePtrOutputWithContext(context.Background())
}

func (o VirtualMachineCloneOutput) ToVirtualMachineClonePtrOutputWithContext(ctx context.Context) VirtualMachineClonePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineClone) *VirtualMachineClone {
		return &v
	}).(VirtualMachineClonePtrOutput)
}

func (o VirtualMachineCloneOutput) DatastoreId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineClone) *string { return v.DatastoreId }).(pulumi.StringPtrOutput)
}

func (o VirtualMachineCloneOutput) Full() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineClone) *bool { return v.Full }).(pulumi.BoolPtrOutput)
}

func (o VirtualMachineCloneOutput) NodeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineClone) *string { return v.NodeName }).(pulumi.StringPtrOutput)
}

func (o VirtualMachineCloneOutput) Retries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineClone) *int { return v.Retries }).(pulumi.IntPtrOutput)
}

func (o VirtualMachineCloneOutput) VmId() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualMachineClone) int { return v.VmId }).(pulumi.IntOutput)
}

type VirtualMachineClonePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineClonePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineClone)(nil)).Elem()
}

func (o VirtualMachineClonePtrOutput) ToVirtualMachineClonePtrOutput() VirtualMachineClonePtrOutput {
	return o
}

func (o VirtualMachineClonePtrOutput) ToVirtualMachineClonePtrOutputWithContext(ctx context.Context) VirtualMachineClonePtrOutput {
	return o
}

func (o VirtualMachineClonePtrOutput) Elem() VirtualMachineCloneOutput {
	return o.ApplyT(func(v *VirtualMachineClone) VirtualMachineClone {
		if v != nil {
			return *v
		}
		var ret VirtualMachineClone
		return ret
	}).(VirtualMachineCloneOutput)
}

func (o VirtualMachineClonePtrOutput) DatastoreId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineClone) *string {
		if v == nil {
			return nil
		}
		return v.DatastoreId
	}).(pulumi.StringPtrOutput)
}

func (o VirtualMachineClonePtrOutput) Full() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineClone) *bool {
		if v == nil {
			return nil
		}
		return v.Full
	}).(pulumi.BoolPtrOutput)
}

func (o VirtualMachineClonePtrOutput) NodeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineClone) *string {
		if v == nil {
			return nil
		}
		return v.NodeName
	}).(pulumi.StringPtrOutput)
}

func (o VirtualMachineClonePtrOutput) Retries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineClone) *int {
		if v == nil {
			return nil
		}
		return v.Retries
	}).(pulumi.IntPtrOutput)
}

func (o VirtualMachineClonePtrOutput) VmId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineClone) *int {
		if v == nil {
			return nil
		}
		return &v.VmId
	}).(pulumi.IntPtrOutput)
}

type VirtualMachineCpu struct {
	Architecture *string  `pulumi:"architecture"`
	Cores        *int     `pulumi:"cores"`
	Flags        []string `pulumi:"flags"`
	Hotplugged   *int     `pulumi:"hotplugged"`
	Sockets      *int     `pulumi:"sockets"`
	Type         *string  `pulumi:"type"`
	Units        *int     `pulumi:"units"`
}

// VirtualMachineCpuInput is an input type that accepts VirtualMachineCpuArgs and VirtualMachineCpuOutput values.
// You can construct a concrete instance of `VirtualMachineCpuInput` via:
//
//	VirtualMachineCpuArgs{...}
type VirtualMachineCpuInput interface {
	pulumi.Input

	ToVirtualMachineCpuOutput() VirtualMachineCpuOutput
	ToVirtualMachineCpuOutputWithContext(context.Context) VirtualMachineCpuOutput
}

type VirtualMachineCpuArgs struct {
	Architecture pulumi.StringPtrInput   `pulumi:"architecture"`
	Cores        pulumi.IntPtrInput      `pulumi:"cores"`
	Flags        pulumi.StringArrayInput `pulumi:"flags"`
	Hotplugged   pulumi.IntPtrInput      `pulumi:"hotplugged"`
	Sockets      pulumi.IntPtrInput      `pulumi:"sockets"`
	Type         pulumi.StringPtrInput   `pulumi:"type"`
	Units        pulumi.IntPtrInput      `pulumi:"units"`
}

func (VirtualMachineCpuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineCpu)(nil)).Elem()
}

func (i VirtualMachineCpuArgs) ToVirtualMachineCpuOutput() VirtualMachineCpuOutput {
	return i.ToVirtualMachineCpuOutputWithContext(context.Background())
}

func (i VirtualMachineCpuArgs) ToVirtualMachineCpuOutputWithContext(ctx context.Context) VirtualMachineCpuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineCpuOutput)
}

func (i VirtualMachineCpuArgs) ToVirtualMachineCpuPtrOutput() VirtualMachineCpuPtrOutput {
	return i.ToVirtualMachineCpuPtrOutputWithContext(context.Background())
}

func (i VirtualMachineCpuArgs) ToVirtualMachineCpuPtrOutputWithContext(ctx context.Context) VirtualMachineCpuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineCpuOutput).ToVirtualMachineCpuPtrOutputWithContext(ctx)
}

// VirtualMachineCpuPtrInput is an input type that accepts VirtualMachineCpuArgs, VirtualMachineCpuPtr and VirtualMachineCpuPtrOutput values.
// You can construct a concrete instance of `VirtualMachineCpuPtrInput` via:
//
//	        VirtualMachineCpuArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineCpuPtrInput interface {
	pulumi.Input

	ToVirtualMachineCpuPtrOutput() VirtualMachineCpuPtrOutput
	ToVirtualMachineCpuPtrOutputWithContext(context.Context) VirtualMachineCpuPtrOutput
}

type virtualMachineCpuPtrType VirtualMachineCpuArgs

func VirtualMachineCpuPtr(v *VirtualMachineCpuArgs) VirtualMachineCpuPtrInput {
	return (*virtualMachineCpuPtrType)(v)
}

func (*virtualMachineCpuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineCpu)(nil)).Elem()
}

func (i *virtualMachineCpuPtrType) ToVirtualMachineCpuPtrOutput() VirtualMachineCpuPtrOutput {
	return i.ToVirtualMachineCpuPtrOutputWithContext(context.Background())
}

func (i *virtualMachineCpuPtrType) ToVirtualMachineCpuPtrOutputWithContext(ctx context.Context) VirtualMachineCpuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineCpuPtrOutput)
}

type VirtualMachineCpuOutput struct{ *pulumi.OutputState }

func (VirtualMachineCpuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineCpu)(nil)).Elem()
}

func (o VirtualMachineCpuOutput) ToVirtualMachineCpuOutput() VirtualMachineCpuOutput {
	return o
}

func (o VirtualMachineCpuOutput) ToVirtualMachineCpuOutputWithContext(ctx context.Context) VirtualMachineCpuOutput {
	return o
}

func (o VirtualMachineCpuOutput) ToVirtualMachineCpuPtrOutput() VirtualMachineCpuPtrOutput {
	return o.ToVirtualMachineCpuPtrOutputWithContext(context.Background())
}

func (o VirtualMachineCpuOutput) ToVirtualMachineCpuPtrOutputWithContext(ctx context.Context) VirtualMachineCpuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineCpu) *VirtualMachineCpu {
		return &v
	}).(VirtualMachineCpuPtrOutput)
}

func (o VirtualMachineCpuOutput) Architecture() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineCpu) *string { return v.Architecture }).(pulumi.StringPtrOutput)
}

func (o VirtualMachineCpuOutput) Cores() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineCpu) *int { return v.Cores }).(pulumi.IntPtrOutput)
}

func (o VirtualMachineCpuOutput) Flags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualMachineCpu) []string { return v.Flags }).(pulumi.StringArrayOutput)
}

func (o VirtualMachineCpuOutput) Hotplugged() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineCpu) *int { return v.Hotplugged }).(pulumi.IntPtrOutput)
}

func (o VirtualMachineCpuOutput) Sockets() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineCpu) *int { return v.Sockets }).(pulumi.IntPtrOutput)
}

func (o VirtualMachineCpuOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineCpu) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o VirtualMachineCpuOutput) Units() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineCpu) *int { return v.Units }).(pulumi.IntPtrOutput)
}

type VirtualMachineCpuPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineCpuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineCpu)(nil)).Elem()
}

func (o VirtualMachineCpuPtrOutput) ToVirtualMachineCpuPtrOutput() VirtualMachineCpuPtrOutput {
	return o
}

func (o VirtualMachineCpuPtrOutput) ToVirtualMachineCpuPtrOutputWithContext(ctx context.Context) VirtualMachineCpuPtrOutput {
	return o
}

func (o VirtualMachineCpuPtrOutput) Elem() VirtualMachineCpuOutput {
	return o.ApplyT(func(v *VirtualMachineCpu) VirtualMachineCpu {
		if v != nil {
			return *v
		}
		var ret VirtualMachineCpu
		return ret
	}).(VirtualMachineCpuOutput)
}

func (o VirtualMachineCpuPtrOutput) Architecture() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineCpu) *string {
		if v == nil {
			return nil
		}
		return v.Architecture
	}).(pulumi.StringPtrOutput)
}

func (o VirtualMachineCpuPtrOutput) Cores() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineCpu) *int {
		if v == nil {
			return nil
		}
		return v.Cores
	}).(pulumi.IntPtrOutput)
}

func (o VirtualMachineCpuPtrOutput) Flags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualMachineCpu) []string {
		if v == nil {
			return nil
		}
		return v.Flags
	}).(pulumi.StringArrayOutput)
}

func (o VirtualMachineCpuPtrOutput) Hotplugged() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineCpu) *int {
		if v == nil {
			return nil
		}
		return v.Hotplugged
	}).(pulumi.IntPtrOutput)
}

func (o VirtualMachineCpuPtrOutput) Sockets() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineCpu) *int {
		if v == nil {
			return nil
		}
		return v.Sockets
	}).(pulumi.IntPtrOutput)
}

func (o VirtualMachineCpuPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineCpu) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

func (o VirtualMachineCpuPtrOutput) Units() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineCpu) *int {
		if v == nil {
			return nil
		}
		return v.Units
	}).(pulumi.IntPtrOutput)
}

type VirtualMachineDisk struct {
	DatastoreId *string                  `pulumi:"datastoreId"`
	Discard     *string                  `pulumi:"discard"`
	FileFormat  *string                  `pulumi:"fileFormat"`
	FileId      *string                  `pulumi:"fileId"`
	Interface   string                   `pulumi:"interface"`
	Iothread    *bool                    `pulumi:"iothread"`
	Size        *int                     `pulumi:"size"`
	Speed       *VirtualMachineDiskSpeed `pulumi:"speed"`
	Ssd         *bool                    `pulumi:"ssd"`
}

// VirtualMachineDiskInput is an input type that accepts VirtualMachineDiskArgs and VirtualMachineDiskOutput values.
// You can construct a concrete instance of `VirtualMachineDiskInput` via:
//
//	VirtualMachineDiskArgs{...}
type VirtualMachineDiskInput interface {
	pulumi.Input

	ToVirtualMachineDiskOutput() VirtualMachineDiskOutput
	ToVirtualMachineDiskOutputWithContext(context.Context) VirtualMachineDiskOutput
}

type VirtualMachineDiskArgs struct {
	DatastoreId pulumi.StringPtrInput           `pulumi:"datastoreId"`
	Discard     pulumi.StringPtrInput           `pulumi:"discard"`
	FileFormat  pulumi.StringPtrInput           `pulumi:"fileFormat"`
	FileId      pulumi.StringPtrInput           `pulumi:"fileId"`
	Interface   pulumi.StringInput              `pulumi:"interface"`
	Iothread    pulumi.BoolPtrInput             `pulumi:"iothread"`
	Size        pulumi.IntPtrInput              `pulumi:"size"`
	Speed       VirtualMachineDiskSpeedPtrInput `pulumi:"speed"`
	Ssd         pulumi.BoolPtrInput             `pulumi:"ssd"`
}

func (VirtualMachineDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineDisk)(nil)).Elem()
}

func (i VirtualMachineDiskArgs) ToVirtualMachineDiskOutput() VirtualMachineDiskOutput {
	return i.ToVirtualMachineDiskOutputWithContext(context.Background())
}

func (i VirtualMachineDiskArgs) ToVirtualMachineDiskOutputWithContext(ctx context.Context) VirtualMachineDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineDiskOutput)
}

// VirtualMachineDiskArrayInput is an input type that accepts VirtualMachineDiskArray and VirtualMachineDiskArrayOutput values.
// You can construct a concrete instance of `VirtualMachineDiskArrayInput` via:
//
//	VirtualMachineDiskArray{ VirtualMachineDiskArgs{...} }
type VirtualMachineDiskArrayInput interface {
	pulumi.Input

	ToVirtualMachineDiskArrayOutput() VirtualMachineDiskArrayOutput
	ToVirtualMachineDiskArrayOutputWithContext(context.Context) VirtualMachineDiskArrayOutput
}

type VirtualMachineDiskArray []VirtualMachineDiskInput

func (VirtualMachineDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineDisk)(nil)).Elem()
}

func (i VirtualMachineDiskArray) ToVirtualMachineDiskArrayOutput() VirtualMachineDiskArrayOutput {
	return i.ToVirtualMachineDiskArrayOutputWithContext(context.Background())
}

func (i VirtualMachineDiskArray) ToVirtualMachineDiskArrayOutputWithContext(ctx context.Context) VirtualMachineDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineDiskArrayOutput)
}

type VirtualMachineDiskOutput struct{ *pulumi.OutputState }

func (VirtualMachineDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineDisk)(nil)).Elem()
}

func (o VirtualMachineDiskOutput) ToVirtualMachineDiskOutput() VirtualMachineDiskOutput {
	return o
}

func (o VirtualMachineDiskOutput) ToVirtualMachineDiskOutputWithContext(ctx context.Context) VirtualMachineDiskOutput {
	return o
}

func (o VirtualMachineDiskOutput) DatastoreId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineDisk) *string { return v.DatastoreId }).(pulumi.StringPtrOutput)
}

func (o VirtualMachineDiskOutput) Discard() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineDisk) *string { return v.Discard }).(pulumi.StringPtrOutput)
}

func (o VirtualMachineDiskOutput) FileFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineDisk) *string { return v.FileFormat }).(pulumi.StringPtrOutput)
}

func (o VirtualMachineDiskOutput) FileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineDisk) *string { return v.FileId }).(pulumi.StringPtrOutput)
}

func (o VirtualMachineDiskOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineDisk) string { return v.Interface }).(pulumi.StringOutput)
}

func (o VirtualMachineDiskOutput) Iothread() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineDisk) *bool { return v.Iothread }).(pulumi.BoolPtrOutput)
}

func (o VirtualMachineDiskOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineDisk) *int { return v.Size }).(pulumi.IntPtrOutput)
}

func (o VirtualMachineDiskOutput) Speed() VirtualMachineDiskSpeedPtrOutput {
	return o.ApplyT(func(v VirtualMachineDisk) *VirtualMachineDiskSpeed { return v.Speed }).(VirtualMachineDiskSpeedPtrOutput)
}

func (o VirtualMachineDiskOutput) Ssd() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineDisk) *bool { return v.Ssd }).(pulumi.BoolPtrOutput)
}

type VirtualMachineDiskArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineDisk)(nil)).Elem()
}

func (o VirtualMachineDiskArrayOutput) ToVirtualMachineDiskArrayOutput() VirtualMachineDiskArrayOutput {
	return o
}

func (o VirtualMachineDiskArrayOutput) ToVirtualMachineDiskArrayOutputWithContext(ctx context.Context) VirtualMachineDiskArrayOutput {
	return o
}

func (o VirtualMachineDiskArrayOutput) Index(i pulumi.IntInput) VirtualMachineDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualMachineDisk {
		return vs[0].([]VirtualMachineDisk)[vs[1].(int)]
	}).(VirtualMachineDiskOutput)
}

type VirtualMachineDiskSpeed struct {
	Read           *int `pulumi:"read"`
	ReadBurstable  *int `pulumi:"readBurstable"`
	Write          *int `pulumi:"write"`
	WriteBurstable *int `pulumi:"writeBurstable"`
}

// VirtualMachineDiskSpeedInput is an input type that accepts VirtualMachineDiskSpeedArgs and VirtualMachineDiskSpeedOutput values.
// You can construct a concrete instance of `VirtualMachineDiskSpeedInput` via:
//
//	VirtualMachineDiskSpeedArgs{...}
type VirtualMachineDiskSpeedInput interface {
	pulumi.Input

	ToVirtualMachineDiskSpeedOutput() VirtualMachineDiskSpeedOutput
	ToVirtualMachineDiskSpeedOutputWithContext(context.Context) VirtualMachineDiskSpeedOutput
}

type VirtualMachineDiskSpeedArgs struct {
	Read           pulumi.IntPtrInput `pulumi:"read"`
	ReadBurstable  pulumi.IntPtrInput `pulumi:"readBurstable"`
	Write          pulumi.IntPtrInput `pulumi:"write"`
	WriteBurstable pulumi.IntPtrInput `pulumi:"writeBurstable"`
}

func (VirtualMachineDiskSpeedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineDiskSpeed)(nil)).Elem()
}

func (i VirtualMachineDiskSpeedArgs) ToVirtualMachineDiskSpeedOutput() VirtualMachineDiskSpeedOutput {
	return i.ToVirtualMachineDiskSpeedOutputWithContext(context.Background())
}

func (i VirtualMachineDiskSpeedArgs) ToVirtualMachineDiskSpeedOutputWithContext(ctx context.Context) VirtualMachineDiskSpeedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineDiskSpeedOutput)
}

func (i VirtualMachineDiskSpeedArgs) ToVirtualMachineDiskSpeedPtrOutput() VirtualMachineDiskSpeedPtrOutput {
	return i.ToVirtualMachineDiskSpeedPtrOutputWithContext(context.Background())
}

func (i VirtualMachineDiskSpeedArgs) ToVirtualMachineDiskSpeedPtrOutputWithContext(ctx context.Context) VirtualMachineDiskSpeedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineDiskSpeedOutput).ToVirtualMachineDiskSpeedPtrOutputWithContext(ctx)
}

// VirtualMachineDiskSpeedPtrInput is an input type that accepts VirtualMachineDiskSpeedArgs, VirtualMachineDiskSpeedPtr and VirtualMachineDiskSpeedPtrOutput values.
// You can construct a concrete instance of `VirtualMachineDiskSpeedPtrInput` via:
//
//	        VirtualMachineDiskSpeedArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineDiskSpeedPtrInput interface {
	pulumi.Input

	ToVirtualMachineDiskSpeedPtrOutput() VirtualMachineDiskSpeedPtrOutput
	ToVirtualMachineDiskSpeedPtrOutputWithContext(context.Context) VirtualMachineDiskSpeedPtrOutput
}

type virtualMachineDiskSpeedPtrType VirtualMachineDiskSpeedArgs

func VirtualMachineDiskSpeedPtr(v *VirtualMachineDiskSpeedArgs) VirtualMachineDiskSpeedPtrInput {
	return (*virtualMachineDiskSpeedPtrType)(v)
}

func (*virtualMachineDiskSpeedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineDiskSpeed)(nil)).Elem()
}

func (i *virtualMachineDiskSpeedPtrType) ToVirtualMachineDiskSpeedPtrOutput() VirtualMachineDiskSpeedPtrOutput {
	return i.ToVirtualMachineDiskSpeedPtrOutputWithContext(context.Background())
}

func (i *virtualMachineDiskSpeedPtrType) ToVirtualMachineDiskSpeedPtrOutputWithContext(ctx context.Context) VirtualMachineDiskSpeedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineDiskSpeedPtrOutput)
}

type VirtualMachineDiskSpeedOutput struct{ *pulumi.OutputState }

func (VirtualMachineDiskSpeedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineDiskSpeed)(nil)).Elem()
}

func (o VirtualMachineDiskSpeedOutput) ToVirtualMachineDiskSpeedOutput() VirtualMachineDiskSpeedOutput {
	return o
}

func (o VirtualMachineDiskSpeedOutput) ToVirtualMachineDiskSpeedOutputWithContext(ctx context.Context) VirtualMachineDiskSpeedOutput {
	return o
}

func (o VirtualMachineDiskSpeedOutput) ToVirtualMachineDiskSpeedPtrOutput() VirtualMachineDiskSpeedPtrOutput {
	return o.ToVirtualMachineDiskSpeedPtrOutputWithContext(context.Background())
}

func (o VirtualMachineDiskSpeedOutput) ToVirtualMachineDiskSpeedPtrOutputWithContext(ctx context.Context) VirtualMachineDiskSpeedPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineDiskSpeed) *VirtualMachineDiskSpeed {
		return &v
	}).(VirtualMachineDiskSpeedPtrOutput)
}

func (o VirtualMachineDiskSpeedOutput) Read() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineDiskSpeed) *int { return v.Read }).(pulumi.IntPtrOutput)
}

func (o VirtualMachineDiskSpeedOutput) ReadBurstable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineDiskSpeed) *int { return v.ReadBurstable }).(pulumi.IntPtrOutput)
}

func (o VirtualMachineDiskSpeedOutput) Write() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineDiskSpeed) *int { return v.Write }).(pulumi.IntPtrOutput)
}

func (o VirtualMachineDiskSpeedOutput) WriteBurstable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineDiskSpeed) *int { return v.WriteBurstable }).(pulumi.IntPtrOutput)
}

type VirtualMachineDiskSpeedPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineDiskSpeedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineDiskSpeed)(nil)).Elem()
}

func (o VirtualMachineDiskSpeedPtrOutput) ToVirtualMachineDiskSpeedPtrOutput() VirtualMachineDiskSpeedPtrOutput {
	return o
}

func (o VirtualMachineDiskSpeedPtrOutput) ToVirtualMachineDiskSpeedPtrOutputWithContext(ctx context.Context) VirtualMachineDiskSpeedPtrOutput {
	return o
}

func (o VirtualMachineDiskSpeedPtrOutput) Elem() VirtualMachineDiskSpeedOutput {
	return o.ApplyT(func(v *VirtualMachineDiskSpeed) VirtualMachineDiskSpeed {
		if v != nil {
			return *v
		}
		var ret VirtualMachineDiskSpeed
		return ret
	}).(VirtualMachineDiskSpeedOutput)
}

func (o VirtualMachineDiskSpeedPtrOutput) Read() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineDiskSpeed) *int {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.IntPtrOutput)
}

func (o VirtualMachineDiskSpeedPtrOutput) ReadBurstable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineDiskSpeed) *int {
		if v == nil {
			return nil
		}
		return v.ReadBurstable
	}).(pulumi.IntPtrOutput)
}

func (o VirtualMachineDiskSpeedPtrOutput) Write() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineDiskSpeed) *int {
		if v == nil {
			return nil
		}
		return v.Write
	}).(pulumi.IntPtrOutput)
}

func (o VirtualMachineDiskSpeedPtrOutput) WriteBurstable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineDiskSpeed) *int {
		if v == nil {
			return nil
		}
		return v.WriteBurstable
	}).(pulumi.IntPtrOutput)
}

type VirtualMachineHostpci struct {
	Device  string  `pulumi:"device"`
	Id      string  `pulumi:"id"`
	Mdev    *string `pulumi:"mdev"`
	Pcie    *bool   `pulumi:"pcie"`
	RomFile *string `pulumi:"romFile"`
	Rombar  *bool   `pulumi:"rombar"`
	Xvga    *bool   `pulumi:"xvga"`
}

// VirtualMachineHostpciInput is an input type that accepts VirtualMachineHostpciArgs and VirtualMachineHostpciOutput values.
// You can construct a concrete instance of `VirtualMachineHostpciInput` via:
//
//	VirtualMachineHostpciArgs{...}
type VirtualMachineHostpciInput interface {
	pulumi.Input

	ToVirtualMachineHostpciOutput() VirtualMachineHostpciOutput
	ToVirtualMachineHostpciOutputWithContext(context.Context) VirtualMachineHostpciOutput
}

type VirtualMachineHostpciArgs struct {
	Device  pulumi.StringInput    `pulumi:"device"`
	Id      pulumi.StringInput    `pulumi:"id"`
	Mdev    pulumi.StringPtrInput `pulumi:"mdev"`
	Pcie    pulumi.BoolPtrInput   `pulumi:"pcie"`
	RomFile pulumi.StringPtrInput `pulumi:"romFile"`
	Rombar  pulumi.BoolPtrInput   `pulumi:"rombar"`
	Xvga    pulumi.BoolPtrInput   `pulumi:"xvga"`
}

func (VirtualMachineHostpciArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineHostpci)(nil)).Elem()
}

func (i VirtualMachineHostpciArgs) ToVirtualMachineHostpciOutput() VirtualMachineHostpciOutput {
	return i.ToVirtualMachineHostpciOutputWithContext(context.Background())
}

func (i VirtualMachineHostpciArgs) ToVirtualMachineHostpciOutputWithContext(ctx context.Context) VirtualMachineHostpciOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineHostpciOutput)
}

// VirtualMachineHostpciArrayInput is an input type that accepts VirtualMachineHostpciArray and VirtualMachineHostpciArrayOutput values.
// You can construct a concrete instance of `VirtualMachineHostpciArrayInput` via:
//
//	VirtualMachineHostpciArray{ VirtualMachineHostpciArgs{...} }
type VirtualMachineHostpciArrayInput interface {
	pulumi.Input

	ToVirtualMachineHostpciArrayOutput() VirtualMachineHostpciArrayOutput
	ToVirtualMachineHostpciArrayOutputWithContext(context.Context) VirtualMachineHostpciArrayOutput
}

type VirtualMachineHostpciArray []VirtualMachineHostpciInput

func (VirtualMachineHostpciArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineHostpci)(nil)).Elem()
}

func (i VirtualMachineHostpciArray) ToVirtualMachineHostpciArrayOutput() VirtualMachineHostpciArrayOutput {
	return i.ToVirtualMachineHostpciArrayOutputWithContext(context.Background())
}

func (i VirtualMachineHostpciArray) ToVirtualMachineHostpciArrayOutputWithContext(ctx context.Context) VirtualMachineHostpciArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineHostpciArrayOutput)
}

type VirtualMachineHostpciOutput struct{ *pulumi.OutputState }

func (VirtualMachineHostpciOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineHostpci)(nil)).Elem()
}

func (o VirtualMachineHostpciOutput) ToVirtualMachineHostpciOutput() VirtualMachineHostpciOutput {
	return o
}

func (o VirtualMachineHostpciOutput) ToVirtualMachineHostpciOutputWithContext(ctx context.Context) VirtualMachineHostpciOutput {
	return o
}

func (o VirtualMachineHostpciOutput) Device() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineHostpci) string { return v.Device }).(pulumi.StringOutput)
}

func (o VirtualMachineHostpciOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineHostpci) string { return v.Id }).(pulumi.StringOutput)
}

func (o VirtualMachineHostpciOutput) Mdev() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineHostpci) *string { return v.Mdev }).(pulumi.StringPtrOutput)
}

func (o VirtualMachineHostpciOutput) Pcie() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineHostpci) *bool { return v.Pcie }).(pulumi.BoolPtrOutput)
}

func (o VirtualMachineHostpciOutput) RomFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineHostpci) *string { return v.RomFile }).(pulumi.StringPtrOutput)
}

func (o VirtualMachineHostpciOutput) Rombar() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineHostpci) *bool { return v.Rombar }).(pulumi.BoolPtrOutput)
}

func (o VirtualMachineHostpciOutput) Xvga() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineHostpci) *bool { return v.Xvga }).(pulumi.BoolPtrOutput)
}

type VirtualMachineHostpciArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineHostpciArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineHostpci)(nil)).Elem()
}

func (o VirtualMachineHostpciArrayOutput) ToVirtualMachineHostpciArrayOutput() VirtualMachineHostpciArrayOutput {
	return o
}

func (o VirtualMachineHostpciArrayOutput) ToVirtualMachineHostpciArrayOutputWithContext(ctx context.Context) VirtualMachineHostpciArrayOutput {
	return o
}

func (o VirtualMachineHostpciArrayOutput) Index(i pulumi.IntInput) VirtualMachineHostpciOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualMachineHostpci {
		return vs[0].([]VirtualMachineHostpci)[vs[1].(int)]
	}).(VirtualMachineHostpciOutput)
}

type VirtualMachineInitialization struct {
	DatastoreId       *string                                  `pulumi:"datastoreId"`
	Dns               *VirtualMachineInitializationDns         `pulumi:"dns"`
	IpConfigs         []VirtualMachineInitializationIpConfig   `pulumi:"ipConfigs"`
	NetworkDataFileId *string                                  `pulumi:"networkDataFileId"`
	Type              *string                                  `pulumi:"type"`
	UserAccount       *VirtualMachineInitializationUserAccount `pulumi:"userAccount"`
	UserDataFileId    *string                                  `pulumi:"userDataFileId"`
	VendorDataFileId  *string                                  `pulumi:"vendorDataFileId"`
}

// VirtualMachineInitializationInput is an input type that accepts VirtualMachineInitializationArgs and VirtualMachineInitializationOutput values.
// You can construct a concrete instance of `VirtualMachineInitializationInput` via:
//
//	VirtualMachineInitializationArgs{...}
type VirtualMachineInitializationInput interface {
	pulumi.Input

	ToVirtualMachineInitializationOutput() VirtualMachineInitializationOutput
	ToVirtualMachineInitializationOutputWithContext(context.Context) VirtualMachineInitializationOutput
}

type VirtualMachineInitializationArgs struct {
	DatastoreId       pulumi.StringPtrInput                           `pulumi:"datastoreId"`
	Dns               VirtualMachineInitializationDnsPtrInput         `pulumi:"dns"`
	IpConfigs         VirtualMachineInitializationIpConfigArrayInput  `pulumi:"ipConfigs"`
	NetworkDataFileId pulumi.StringPtrInput                           `pulumi:"networkDataFileId"`
	Type              pulumi.StringPtrInput                           `pulumi:"type"`
	UserAccount       VirtualMachineInitializationUserAccountPtrInput `pulumi:"userAccount"`
	UserDataFileId    pulumi.StringPtrInput                           `pulumi:"userDataFileId"`
	VendorDataFileId  pulumi.StringPtrInput                           `pulumi:"vendorDataFileId"`
}

func (VirtualMachineInitializationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInitialization)(nil)).Elem()
}

func (i VirtualMachineInitializationArgs) ToVirtualMachineInitializationOutput() VirtualMachineInitializationOutput {
	return i.ToVirtualMachineInitializationOutputWithContext(context.Background())
}

func (i VirtualMachineInitializationArgs) ToVirtualMachineInitializationOutputWithContext(ctx context.Context) VirtualMachineInitializationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInitializationOutput)
}

func (i VirtualMachineInitializationArgs) ToVirtualMachineInitializationPtrOutput() VirtualMachineInitializationPtrOutput {
	return i.ToVirtualMachineInitializationPtrOutputWithContext(context.Background())
}

func (i VirtualMachineInitializationArgs) ToVirtualMachineInitializationPtrOutputWithContext(ctx context.Context) VirtualMachineInitializationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInitializationOutput).ToVirtualMachineInitializationPtrOutputWithContext(ctx)
}

// VirtualMachineInitializationPtrInput is an input type that accepts VirtualMachineInitializationArgs, VirtualMachineInitializationPtr and VirtualMachineInitializationPtrOutput values.
// You can construct a concrete instance of `VirtualMachineInitializationPtrInput` via:
//
//	        VirtualMachineInitializationArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineInitializationPtrInput interface {
	pulumi.Input

	ToVirtualMachineInitializationPtrOutput() VirtualMachineInitializationPtrOutput
	ToVirtualMachineInitializationPtrOutputWithContext(context.Context) VirtualMachineInitializationPtrOutput
}

type virtualMachineInitializationPtrType VirtualMachineInitializationArgs

func VirtualMachineInitializationPtr(v *VirtualMachineInitializationArgs) VirtualMachineInitializationPtrInput {
	return (*virtualMachineInitializationPtrType)(v)
}

func (*virtualMachineInitializationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineInitialization)(nil)).Elem()
}

func (i *virtualMachineInitializationPtrType) ToVirtualMachineInitializationPtrOutput() VirtualMachineInitializationPtrOutput {
	return i.ToVirtualMachineInitializationPtrOutputWithContext(context.Background())
}

func (i *virtualMachineInitializationPtrType) ToVirtualMachineInitializationPtrOutputWithContext(ctx context.Context) VirtualMachineInitializationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInitializationPtrOutput)
}

type VirtualMachineInitializationOutput struct{ *pulumi.OutputState }

func (VirtualMachineInitializationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInitialization)(nil)).Elem()
}

func (o VirtualMachineInitializationOutput) ToVirtualMachineInitializationOutput() VirtualMachineInitializationOutput {
	return o
}

func (o VirtualMachineInitializationOutput) ToVirtualMachineInitializationOutputWithContext(ctx context.Context) VirtualMachineInitializationOutput {
	return o
}

func (o VirtualMachineInitializationOutput) ToVirtualMachineInitializationPtrOutput() VirtualMachineInitializationPtrOutput {
	return o.ToVirtualMachineInitializationPtrOutputWithContext(context.Background())
}

func (o VirtualMachineInitializationOutput) ToVirtualMachineInitializationPtrOutputWithContext(ctx context.Context) VirtualMachineInitializationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineInitialization) *VirtualMachineInitialization {
		return &v
	}).(VirtualMachineInitializationPtrOutput)
}

func (o VirtualMachineInitializationOutput) DatastoreId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineInitialization) *string { return v.DatastoreId }).(pulumi.StringPtrOutput)
}

func (o VirtualMachineInitializationOutput) Dns() VirtualMachineInitializationDnsPtrOutput {
	return o.ApplyT(func(v VirtualMachineInitialization) *VirtualMachineInitializationDns { return v.Dns }).(VirtualMachineInitializationDnsPtrOutput)
}

func (o VirtualMachineInitializationOutput) IpConfigs() VirtualMachineInitializationIpConfigArrayOutput {
	return o.ApplyT(func(v VirtualMachineInitialization) []VirtualMachineInitializationIpConfig { return v.IpConfigs }).(VirtualMachineInitializationIpConfigArrayOutput)
}

func (o VirtualMachineInitializationOutput) NetworkDataFileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineInitialization) *string { return v.NetworkDataFileId }).(pulumi.StringPtrOutput)
}

func (o VirtualMachineInitializationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineInitialization) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o VirtualMachineInitializationOutput) UserAccount() VirtualMachineInitializationUserAccountPtrOutput {
	return o.ApplyT(func(v VirtualMachineInitialization) *VirtualMachineInitializationUserAccount { return v.UserAccount }).(VirtualMachineInitializationUserAccountPtrOutput)
}

func (o VirtualMachineInitializationOutput) UserDataFileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineInitialization) *string { return v.UserDataFileId }).(pulumi.StringPtrOutput)
}

func (o VirtualMachineInitializationOutput) VendorDataFileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineInitialization) *string { return v.VendorDataFileId }).(pulumi.StringPtrOutput)
}

type VirtualMachineInitializationPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineInitializationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineInitialization)(nil)).Elem()
}

func (o VirtualMachineInitializationPtrOutput) ToVirtualMachineInitializationPtrOutput() VirtualMachineInitializationPtrOutput {
	return o
}

func (o VirtualMachineInitializationPtrOutput) ToVirtualMachineInitializationPtrOutputWithContext(ctx context.Context) VirtualMachineInitializationPtrOutput {
	return o
}

func (o VirtualMachineInitializationPtrOutput) Elem() VirtualMachineInitializationOutput {
	return o.ApplyT(func(v *VirtualMachineInitialization) VirtualMachineInitialization {
		if v != nil {
			return *v
		}
		var ret VirtualMachineInitialization
		return ret
	}).(VirtualMachineInitializationOutput)
}

func (o VirtualMachineInitializationPtrOutput) DatastoreId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInitialization) *string {
		if v == nil {
			return nil
		}
		return v.DatastoreId
	}).(pulumi.StringPtrOutput)
}

func (o VirtualMachineInitializationPtrOutput) Dns() VirtualMachineInitializationDnsPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInitialization) *VirtualMachineInitializationDns {
		if v == nil {
			return nil
		}
		return v.Dns
	}).(VirtualMachineInitializationDnsPtrOutput)
}

func (o VirtualMachineInitializationPtrOutput) IpConfigs() VirtualMachineInitializationIpConfigArrayOutput {
	return o.ApplyT(func(v *VirtualMachineInitialization) []VirtualMachineInitializationIpConfig {
		if v == nil {
			return nil
		}
		return v.IpConfigs
	}).(VirtualMachineInitializationIpConfigArrayOutput)
}

func (o VirtualMachineInitializationPtrOutput) NetworkDataFileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInitialization) *string {
		if v == nil {
			return nil
		}
		return v.NetworkDataFileId
	}).(pulumi.StringPtrOutput)
}

func (o VirtualMachineInitializationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInitialization) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

func (o VirtualMachineInitializationPtrOutput) UserAccount() VirtualMachineInitializationUserAccountPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInitialization) *VirtualMachineInitializationUserAccount {
		if v == nil {
			return nil
		}
		return v.UserAccount
	}).(VirtualMachineInitializationUserAccountPtrOutput)
}

func (o VirtualMachineInitializationPtrOutput) UserDataFileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInitialization) *string {
		if v == nil {
			return nil
		}
		return v.UserDataFileId
	}).(pulumi.StringPtrOutput)
}

func (o VirtualMachineInitializationPtrOutput) VendorDataFileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInitialization) *string {
		if v == nil {
			return nil
		}
		return v.VendorDataFileId
	}).(pulumi.StringPtrOutput)
}

type VirtualMachineInitializationDns struct {
	Domain *string `pulumi:"domain"`
	Server *string `pulumi:"server"`
}

// VirtualMachineInitializationDnsInput is an input type that accepts VirtualMachineInitializationDnsArgs and VirtualMachineInitializationDnsOutput values.
// You can construct a concrete instance of `VirtualMachineInitializationDnsInput` via:
//
//	VirtualMachineInitializationDnsArgs{...}
type VirtualMachineInitializationDnsInput interface {
	pulumi.Input

	ToVirtualMachineInitializationDnsOutput() VirtualMachineInitializationDnsOutput
	ToVirtualMachineInitializationDnsOutputWithContext(context.Context) VirtualMachineInitializationDnsOutput
}

type VirtualMachineInitializationDnsArgs struct {
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	Server pulumi.StringPtrInput `pulumi:"server"`
}

func (VirtualMachineInitializationDnsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInitializationDns)(nil)).Elem()
}

func (i VirtualMachineInitializationDnsArgs) ToVirtualMachineInitializationDnsOutput() VirtualMachineInitializationDnsOutput {
	return i.ToVirtualMachineInitializationDnsOutputWithContext(context.Background())
}

func (i VirtualMachineInitializationDnsArgs) ToVirtualMachineInitializationDnsOutputWithContext(ctx context.Context) VirtualMachineInitializationDnsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInitializationDnsOutput)
}

func (i VirtualMachineInitializationDnsArgs) ToVirtualMachineInitializationDnsPtrOutput() VirtualMachineInitializationDnsPtrOutput {
	return i.ToVirtualMachineInitializationDnsPtrOutputWithContext(context.Background())
}

func (i VirtualMachineInitializationDnsArgs) ToVirtualMachineInitializationDnsPtrOutputWithContext(ctx context.Context) VirtualMachineInitializationDnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInitializationDnsOutput).ToVirtualMachineInitializationDnsPtrOutputWithContext(ctx)
}

// VirtualMachineInitializationDnsPtrInput is an input type that accepts VirtualMachineInitializationDnsArgs, VirtualMachineInitializationDnsPtr and VirtualMachineInitializationDnsPtrOutput values.
// You can construct a concrete instance of `VirtualMachineInitializationDnsPtrInput` via:
//
//	        VirtualMachineInitializationDnsArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineInitializationDnsPtrInput interface {
	pulumi.Input

	ToVirtualMachineInitializationDnsPtrOutput() VirtualMachineInitializationDnsPtrOutput
	ToVirtualMachineInitializationDnsPtrOutputWithContext(context.Context) VirtualMachineInitializationDnsPtrOutput
}

type virtualMachineInitializationDnsPtrType VirtualMachineInitializationDnsArgs

func VirtualMachineInitializationDnsPtr(v *VirtualMachineInitializationDnsArgs) VirtualMachineInitializationDnsPtrInput {
	return (*virtualMachineInitializationDnsPtrType)(v)
}

func (*virtualMachineInitializationDnsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineInitializationDns)(nil)).Elem()
}

func (i *virtualMachineInitializationDnsPtrType) ToVirtualMachineInitializationDnsPtrOutput() VirtualMachineInitializationDnsPtrOutput {
	return i.ToVirtualMachineInitializationDnsPtrOutputWithContext(context.Background())
}

func (i *virtualMachineInitializationDnsPtrType) ToVirtualMachineInitializationDnsPtrOutputWithContext(ctx context.Context) VirtualMachineInitializationDnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInitializationDnsPtrOutput)
}

type VirtualMachineInitializationDnsOutput struct{ *pulumi.OutputState }

func (VirtualMachineInitializationDnsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInitializationDns)(nil)).Elem()
}

func (o VirtualMachineInitializationDnsOutput) ToVirtualMachineInitializationDnsOutput() VirtualMachineInitializationDnsOutput {
	return o
}

func (o VirtualMachineInitializationDnsOutput) ToVirtualMachineInitializationDnsOutputWithContext(ctx context.Context) VirtualMachineInitializationDnsOutput {
	return o
}

func (o VirtualMachineInitializationDnsOutput) ToVirtualMachineInitializationDnsPtrOutput() VirtualMachineInitializationDnsPtrOutput {
	return o.ToVirtualMachineInitializationDnsPtrOutputWithContext(context.Background())
}

func (o VirtualMachineInitializationDnsOutput) ToVirtualMachineInitializationDnsPtrOutputWithContext(ctx context.Context) VirtualMachineInitializationDnsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineInitializationDns) *VirtualMachineInitializationDns {
		return &v
	}).(VirtualMachineInitializationDnsPtrOutput)
}

func (o VirtualMachineInitializationDnsOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineInitializationDns) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

func (o VirtualMachineInitializationDnsOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineInitializationDns) *string { return v.Server }).(pulumi.StringPtrOutput)
}

type VirtualMachineInitializationDnsPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineInitializationDnsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineInitializationDns)(nil)).Elem()
}

func (o VirtualMachineInitializationDnsPtrOutput) ToVirtualMachineInitializationDnsPtrOutput() VirtualMachineInitializationDnsPtrOutput {
	return o
}

func (o VirtualMachineInitializationDnsPtrOutput) ToVirtualMachineInitializationDnsPtrOutputWithContext(ctx context.Context) VirtualMachineInitializationDnsPtrOutput {
	return o
}

func (o VirtualMachineInitializationDnsPtrOutput) Elem() VirtualMachineInitializationDnsOutput {
	return o.ApplyT(func(v *VirtualMachineInitializationDns) VirtualMachineInitializationDns {
		if v != nil {
			return *v
		}
		var ret VirtualMachineInitializationDns
		return ret
	}).(VirtualMachineInitializationDnsOutput)
}

func (o VirtualMachineInitializationDnsPtrOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInitializationDns) *string {
		if v == nil {
			return nil
		}
		return v.Domain
	}).(pulumi.StringPtrOutput)
}

func (o VirtualMachineInitializationDnsPtrOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInitializationDns) *string {
		if v == nil {
			return nil
		}
		return v.Server
	}).(pulumi.StringPtrOutput)
}

type VirtualMachineInitializationIpConfig struct {
	Ipv4 *VirtualMachineInitializationIpConfigIpv4 `pulumi:"ipv4"`
	Ipv6 *VirtualMachineInitializationIpConfigIpv6 `pulumi:"ipv6"`
}

// VirtualMachineInitializationIpConfigInput is an input type that accepts VirtualMachineInitializationIpConfigArgs and VirtualMachineInitializationIpConfigOutput values.
// You can construct a concrete instance of `VirtualMachineInitializationIpConfigInput` via:
//
//	VirtualMachineInitializationIpConfigArgs{...}
type VirtualMachineInitializationIpConfigInput interface {
	pulumi.Input

	ToVirtualMachineInitializationIpConfigOutput() VirtualMachineInitializationIpConfigOutput
	ToVirtualMachineInitializationIpConfigOutputWithContext(context.Context) VirtualMachineInitializationIpConfigOutput
}

type VirtualMachineInitializationIpConfigArgs struct {
	Ipv4 VirtualMachineInitializationIpConfigIpv4PtrInput `pulumi:"ipv4"`
	Ipv6 VirtualMachineInitializationIpConfigIpv6PtrInput `pulumi:"ipv6"`
}

func (VirtualMachineInitializationIpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInitializationIpConfig)(nil)).Elem()
}

func (i VirtualMachineInitializationIpConfigArgs) ToVirtualMachineInitializationIpConfigOutput() VirtualMachineInitializationIpConfigOutput {
	return i.ToVirtualMachineInitializationIpConfigOutputWithContext(context.Background())
}

func (i VirtualMachineInitializationIpConfigArgs) ToVirtualMachineInitializationIpConfigOutputWithContext(ctx context.Context) VirtualMachineInitializationIpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInitializationIpConfigOutput)
}

// VirtualMachineInitializationIpConfigArrayInput is an input type that accepts VirtualMachineInitializationIpConfigArray and VirtualMachineInitializationIpConfigArrayOutput values.
// You can construct a concrete instance of `VirtualMachineInitializationIpConfigArrayInput` via:
//
//	VirtualMachineInitializationIpConfigArray{ VirtualMachineInitializationIpConfigArgs{...} }
type VirtualMachineInitializationIpConfigArrayInput interface {
	pulumi.Input

	ToVirtualMachineInitializationIpConfigArrayOutput() VirtualMachineInitializationIpConfigArrayOutput
	ToVirtualMachineInitializationIpConfigArrayOutputWithContext(context.Context) VirtualMachineInitializationIpConfigArrayOutput
}

type VirtualMachineInitializationIpConfigArray []VirtualMachineInitializationIpConfigInput

func (VirtualMachineInitializationIpConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineInitializationIpConfig)(nil)).Elem()
}

func (i VirtualMachineInitializationIpConfigArray) ToVirtualMachineInitializationIpConfigArrayOutput() VirtualMachineInitializationIpConfigArrayOutput {
	return i.ToVirtualMachineInitializationIpConfigArrayOutputWithContext(context.Background())
}

func (i VirtualMachineInitializationIpConfigArray) ToVirtualMachineInitializationIpConfigArrayOutputWithContext(ctx context.Context) VirtualMachineInitializationIpConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInitializationIpConfigArrayOutput)
}

type VirtualMachineInitializationIpConfigOutput struct{ *pulumi.OutputState }

func (VirtualMachineInitializationIpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInitializationIpConfig)(nil)).Elem()
}

func (o VirtualMachineInitializationIpConfigOutput) ToVirtualMachineInitializationIpConfigOutput() VirtualMachineInitializationIpConfigOutput {
	return o
}

func (o VirtualMachineInitializationIpConfigOutput) ToVirtualMachineInitializationIpConfigOutputWithContext(ctx context.Context) VirtualMachineInitializationIpConfigOutput {
	return o
}

func (o VirtualMachineInitializationIpConfigOutput) Ipv4() VirtualMachineInitializationIpConfigIpv4PtrOutput {
	return o.ApplyT(func(v VirtualMachineInitializationIpConfig) *VirtualMachineInitializationIpConfigIpv4 { return v.Ipv4 }).(VirtualMachineInitializationIpConfigIpv4PtrOutput)
}

func (o VirtualMachineInitializationIpConfigOutput) Ipv6() VirtualMachineInitializationIpConfigIpv6PtrOutput {
	return o.ApplyT(func(v VirtualMachineInitializationIpConfig) *VirtualMachineInitializationIpConfigIpv6 { return v.Ipv6 }).(VirtualMachineInitializationIpConfigIpv6PtrOutput)
}

type VirtualMachineInitializationIpConfigArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineInitializationIpConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineInitializationIpConfig)(nil)).Elem()
}

func (o VirtualMachineInitializationIpConfigArrayOutput) ToVirtualMachineInitializationIpConfigArrayOutput() VirtualMachineInitializationIpConfigArrayOutput {
	return o
}

func (o VirtualMachineInitializationIpConfigArrayOutput) ToVirtualMachineInitializationIpConfigArrayOutputWithContext(ctx context.Context) VirtualMachineInitializationIpConfigArrayOutput {
	return o
}

func (o VirtualMachineInitializationIpConfigArrayOutput) Index(i pulumi.IntInput) VirtualMachineInitializationIpConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualMachineInitializationIpConfig {
		return vs[0].([]VirtualMachineInitializationIpConfig)[vs[1].(int)]
	}).(VirtualMachineInitializationIpConfigOutput)
}

type VirtualMachineInitializationIpConfigIpv4 struct {
	Address *string `pulumi:"address"`
	Gateway *string `pulumi:"gateway"`
}

// VirtualMachineInitializationIpConfigIpv4Input is an input type that accepts VirtualMachineInitializationIpConfigIpv4Args and VirtualMachineInitializationIpConfigIpv4Output values.
// You can construct a concrete instance of `VirtualMachineInitializationIpConfigIpv4Input` via:
//
//	VirtualMachineInitializationIpConfigIpv4Args{...}
type VirtualMachineInitializationIpConfigIpv4Input interface {
	pulumi.Input

	ToVirtualMachineInitializationIpConfigIpv4Output() VirtualMachineInitializationIpConfigIpv4Output
	ToVirtualMachineInitializationIpConfigIpv4OutputWithContext(context.Context) VirtualMachineInitializationIpConfigIpv4Output
}

type VirtualMachineInitializationIpConfigIpv4Args struct {
	Address pulumi.StringPtrInput `pulumi:"address"`
	Gateway pulumi.StringPtrInput `pulumi:"gateway"`
}

func (VirtualMachineInitializationIpConfigIpv4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInitializationIpConfigIpv4)(nil)).Elem()
}

func (i VirtualMachineInitializationIpConfigIpv4Args) ToVirtualMachineInitializationIpConfigIpv4Output() VirtualMachineInitializationIpConfigIpv4Output {
	return i.ToVirtualMachineInitializationIpConfigIpv4OutputWithContext(context.Background())
}

func (i VirtualMachineInitializationIpConfigIpv4Args) ToVirtualMachineInitializationIpConfigIpv4OutputWithContext(ctx context.Context) VirtualMachineInitializationIpConfigIpv4Output {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInitializationIpConfigIpv4Output)
}

func (i VirtualMachineInitializationIpConfigIpv4Args) ToVirtualMachineInitializationIpConfigIpv4PtrOutput() VirtualMachineInitializationIpConfigIpv4PtrOutput {
	return i.ToVirtualMachineInitializationIpConfigIpv4PtrOutputWithContext(context.Background())
}

func (i VirtualMachineInitializationIpConfigIpv4Args) ToVirtualMachineInitializationIpConfigIpv4PtrOutputWithContext(ctx context.Context) VirtualMachineInitializationIpConfigIpv4PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInitializationIpConfigIpv4Output).ToVirtualMachineInitializationIpConfigIpv4PtrOutputWithContext(ctx)
}

// VirtualMachineInitializationIpConfigIpv4PtrInput is an input type that accepts VirtualMachineInitializationIpConfigIpv4Args, VirtualMachineInitializationIpConfigIpv4Ptr and VirtualMachineInitializationIpConfigIpv4PtrOutput values.
// You can construct a concrete instance of `VirtualMachineInitializationIpConfigIpv4PtrInput` via:
//
//	        VirtualMachineInitializationIpConfigIpv4Args{...}
//
//	or:
//
//	        nil
type VirtualMachineInitializationIpConfigIpv4PtrInput interface {
	pulumi.Input

	ToVirtualMachineInitializationIpConfigIpv4PtrOutput() VirtualMachineInitializationIpConfigIpv4PtrOutput
	ToVirtualMachineInitializationIpConfigIpv4PtrOutputWithContext(context.Context) VirtualMachineInitializationIpConfigIpv4PtrOutput
}

type virtualMachineInitializationIpConfigIpv4PtrType VirtualMachineInitializationIpConfigIpv4Args

func VirtualMachineInitializationIpConfigIpv4Ptr(v *VirtualMachineInitializationIpConfigIpv4Args) VirtualMachineInitializationIpConfigIpv4PtrInput {
	return (*virtualMachineInitializationIpConfigIpv4PtrType)(v)
}

func (*virtualMachineInitializationIpConfigIpv4PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineInitializationIpConfigIpv4)(nil)).Elem()
}

func (i *virtualMachineInitializationIpConfigIpv4PtrType) ToVirtualMachineInitializationIpConfigIpv4PtrOutput() VirtualMachineInitializationIpConfigIpv4PtrOutput {
	return i.ToVirtualMachineInitializationIpConfigIpv4PtrOutputWithContext(context.Background())
}

func (i *virtualMachineInitializationIpConfigIpv4PtrType) ToVirtualMachineInitializationIpConfigIpv4PtrOutputWithContext(ctx context.Context) VirtualMachineInitializationIpConfigIpv4PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInitializationIpConfigIpv4PtrOutput)
}

type VirtualMachineInitializationIpConfigIpv4Output struct{ *pulumi.OutputState }

func (VirtualMachineInitializationIpConfigIpv4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInitializationIpConfigIpv4)(nil)).Elem()
}

func (o VirtualMachineInitializationIpConfigIpv4Output) ToVirtualMachineInitializationIpConfigIpv4Output() VirtualMachineInitializationIpConfigIpv4Output {
	return o
}

func (o VirtualMachineInitializationIpConfigIpv4Output) ToVirtualMachineInitializationIpConfigIpv4OutputWithContext(ctx context.Context) VirtualMachineInitializationIpConfigIpv4Output {
	return o
}

func (o VirtualMachineInitializationIpConfigIpv4Output) ToVirtualMachineInitializationIpConfigIpv4PtrOutput() VirtualMachineInitializationIpConfigIpv4PtrOutput {
	return o.ToVirtualMachineInitializationIpConfigIpv4PtrOutputWithContext(context.Background())
}

func (o VirtualMachineInitializationIpConfigIpv4Output) ToVirtualMachineInitializationIpConfigIpv4PtrOutputWithContext(ctx context.Context) VirtualMachineInitializationIpConfigIpv4PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineInitializationIpConfigIpv4) *VirtualMachineInitializationIpConfigIpv4 {
		return &v
	}).(VirtualMachineInitializationIpConfigIpv4PtrOutput)
}

func (o VirtualMachineInitializationIpConfigIpv4Output) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineInitializationIpConfigIpv4) *string { return v.Address }).(pulumi.StringPtrOutput)
}

func (o VirtualMachineInitializationIpConfigIpv4Output) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineInitializationIpConfigIpv4) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

type VirtualMachineInitializationIpConfigIpv4PtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineInitializationIpConfigIpv4PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineInitializationIpConfigIpv4)(nil)).Elem()
}

func (o VirtualMachineInitializationIpConfigIpv4PtrOutput) ToVirtualMachineInitializationIpConfigIpv4PtrOutput() VirtualMachineInitializationIpConfigIpv4PtrOutput {
	return o
}

func (o VirtualMachineInitializationIpConfigIpv4PtrOutput) ToVirtualMachineInitializationIpConfigIpv4PtrOutputWithContext(ctx context.Context) VirtualMachineInitializationIpConfigIpv4PtrOutput {
	return o
}

func (o VirtualMachineInitializationIpConfigIpv4PtrOutput) Elem() VirtualMachineInitializationIpConfigIpv4Output {
	return o.ApplyT(func(v *VirtualMachineInitializationIpConfigIpv4) VirtualMachineInitializationIpConfigIpv4 {
		if v != nil {
			return *v
		}
		var ret VirtualMachineInitializationIpConfigIpv4
		return ret
	}).(VirtualMachineInitializationIpConfigIpv4Output)
}

func (o VirtualMachineInitializationIpConfigIpv4PtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInitializationIpConfigIpv4) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

func (o VirtualMachineInitializationIpConfigIpv4PtrOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInitializationIpConfigIpv4) *string {
		if v == nil {
			return nil
		}
		return v.Gateway
	}).(pulumi.StringPtrOutput)
}

type VirtualMachineInitializationIpConfigIpv6 struct {
	Address *string `pulumi:"address"`
	Gateway *string `pulumi:"gateway"`
}

// VirtualMachineInitializationIpConfigIpv6Input is an input type that accepts VirtualMachineInitializationIpConfigIpv6Args and VirtualMachineInitializationIpConfigIpv6Output values.
// You can construct a concrete instance of `VirtualMachineInitializationIpConfigIpv6Input` via:
//
//	VirtualMachineInitializationIpConfigIpv6Args{...}
type VirtualMachineInitializationIpConfigIpv6Input interface {
	pulumi.Input

	ToVirtualMachineInitializationIpConfigIpv6Output() VirtualMachineInitializationIpConfigIpv6Output
	ToVirtualMachineInitializationIpConfigIpv6OutputWithContext(context.Context) VirtualMachineInitializationIpConfigIpv6Output
}

type VirtualMachineInitializationIpConfigIpv6Args struct {
	Address pulumi.StringPtrInput `pulumi:"address"`
	Gateway pulumi.StringPtrInput `pulumi:"gateway"`
}

func (VirtualMachineInitializationIpConfigIpv6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInitializationIpConfigIpv6)(nil)).Elem()
}

func (i VirtualMachineInitializationIpConfigIpv6Args) ToVirtualMachineInitializationIpConfigIpv6Output() VirtualMachineInitializationIpConfigIpv6Output {
	return i.ToVirtualMachineInitializationIpConfigIpv6OutputWithContext(context.Background())
}

func (i VirtualMachineInitializationIpConfigIpv6Args) ToVirtualMachineInitializationIpConfigIpv6OutputWithContext(ctx context.Context) VirtualMachineInitializationIpConfigIpv6Output {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInitializationIpConfigIpv6Output)
}

func (i VirtualMachineInitializationIpConfigIpv6Args) ToVirtualMachineInitializationIpConfigIpv6PtrOutput() VirtualMachineInitializationIpConfigIpv6PtrOutput {
	return i.ToVirtualMachineInitializationIpConfigIpv6PtrOutputWithContext(context.Background())
}

func (i VirtualMachineInitializationIpConfigIpv6Args) ToVirtualMachineInitializationIpConfigIpv6PtrOutputWithContext(ctx context.Context) VirtualMachineInitializationIpConfigIpv6PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInitializationIpConfigIpv6Output).ToVirtualMachineInitializationIpConfigIpv6PtrOutputWithContext(ctx)
}

// VirtualMachineInitializationIpConfigIpv6PtrInput is an input type that accepts VirtualMachineInitializationIpConfigIpv6Args, VirtualMachineInitializationIpConfigIpv6Ptr and VirtualMachineInitializationIpConfigIpv6PtrOutput values.
// You can construct a concrete instance of `VirtualMachineInitializationIpConfigIpv6PtrInput` via:
//
//	        VirtualMachineInitializationIpConfigIpv6Args{...}
//
//	or:
//
//	        nil
type VirtualMachineInitializationIpConfigIpv6PtrInput interface {
	pulumi.Input

	ToVirtualMachineInitializationIpConfigIpv6PtrOutput() VirtualMachineInitializationIpConfigIpv6PtrOutput
	ToVirtualMachineInitializationIpConfigIpv6PtrOutputWithContext(context.Context) VirtualMachineInitializationIpConfigIpv6PtrOutput
}

type virtualMachineInitializationIpConfigIpv6PtrType VirtualMachineInitializationIpConfigIpv6Args

func VirtualMachineInitializationIpConfigIpv6Ptr(v *VirtualMachineInitializationIpConfigIpv6Args) VirtualMachineInitializationIpConfigIpv6PtrInput {
	return (*virtualMachineInitializationIpConfigIpv6PtrType)(v)
}

func (*virtualMachineInitializationIpConfigIpv6PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineInitializationIpConfigIpv6)(nil)).Elem()
}

func (i *virtualMachineInitializationIpConfigIpv6PtrType) ToVirtualMachineInitializationIpConfigIpv6PtrOutput() VirtualMachineInitializationIpConfigIpv6PtrOutput {
	return i.ToVirtualMachineInitializationIpConfigIpv6PtrOutputWithContext(context.Background())
}

func (i *virtualMachineInitializationIpConfigIpv6PtrType) ToVirtualMachineInitializationIpConfigIpv6PtrOutputWithContext(ctx context.Context) VirtualMachineInitializationIpConfigIpv6PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInitializationIpConfigIpv6PtrOutput)
}

type VirtualMachineInitializationIpConfigIpv6Output struct{ *pulumi.OutputState }

func (VirtualMachineInitializationIpConfigIpv6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInitializationIpConfigIpv6)(nil)).Elem()
}

func (o VirtualMachineInitializationIpConfigIpv6Output) ToVirtualMachineInitializationIpConfigIpv6Output() VirtualMachineInitializationIpConfigIpv6Output {
	return o
}

func (o VirtualMachineInitializationIpConfigIpv6Output) ToVirtualMachineInitializationIpConfigIpv6OutputWithContext(ctx context.Context) VirtualMachineInitializationIpConfigIpv6Output {
	return o
}

func (o VirtualMachineInitializationIpConfigIpv6Output) ToVirtualMachineInitializationIpConfigIpv6PtrOutput() VirtualMachineInitializationIpConfigIpv6PtrOutput {
	return o.ToVirtualMachineInitializationIpConfigIpv6PtrOutputWithContext(context.Background())
}

func (o VirtualMachineInitializationIpConfigIpv6Output) ToVirtualMachineInitializationIpConfigIpv6PtrOutputWithContext(ctx context.Context) VirtualMachineInitializationIpConfigIpv6PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineInitializationIpConfigIpv6) *VirtualMachineInitializationIpConfigIpv6 {
		return &v
	}).(VirtualMachineInitializationIpConfigIpv6PtrOutput)
}

func (o VirtualMachineInitializationIpConfigIpv6Output) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineInitializationIpConfigIpv6) *string { return v.Address }).(pulumi.StringPtrOutput)
}

func (o VirtualMachineInitializationIpConfigIpv6Output) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineInitializationIpConfigIpv6) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

type VirtualMachineInitializationIpConfigIpv6PtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineInitializationIpConfigIpv6PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineInitializationIpConfigIpv6)(nil)).Elem()
}

func (o VirtualMachineInitializationIpConfigIpv6PtrOutput) ToVirtualMachineInitializationIpConfigIpv6PtrOutput() VirtualMachineInitializationIpConfigIpv6PtrOutput {
	return o
}

func (o VirtualMachineInitializationIpConfigIpv6PtrOutput) ToVirtualMachineInitializationIpConfigIpv6PtrOutputWithContext(ctx context.Context) VirtualMachineInitializationIpConfigIpv6PtrOutput {
	return o
}

func (o VirtualMachineInitializationIpConfigIpv6PtrOutput) Elem() VirtualMachineInitializationIpConfigIpv6Output {
	return o.ApplyT(func(v *VirtualMachineInitializationIpConfigIpv6) VirtualMachineInitializationIpConfigIpv6 {
		if v != nil {
			return *v
		}
		var ret VirtualMachineInitializationIpConfigIpv6
		return ret
	}).(VirtualMachineInitializationIpConfigIpv6Output)
}

func (o VirtualMachineInitializationIpConfigIpv6PtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInitializationIpConfigIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

func (o VirtualMachineInitializationIpConfigIpv6PtrOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInitializationIpConfigIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Gateway
	}).(pulumi.StringPtrOutput)
}

type VirtualMachineInitializationUserAccount struct {
	Keys     []string `pulumi:"keys"`
	Password *string  `pulumi:"password"`
	Username *string  `pulumi:"username"`
}

// VirtualMachineInitializationUserAccountInput is an input type that accepts VirtualMachineInitializationUserAccountArgs and VirtualMachineInitializationUserAccountOutput values.
// You can construct a concrete instance of `VirtualMachineInitializationUserAccountInput` via:
//
//	VirtualMachineInitializationUserAccountArgs{...}
type VirtualMachineInitializationUserAccountInput interface {
	pulumi.Input

	ToVirtualMachineInitializationUserAccountOutput() VirtualMachineInitializationUserAccountOutput
	ToVirtualMachineInitializationUserAccountOutputWithContext(context.Context) VirtualMachineInitializationUserAccountOutput
}

type VirtualMachineInitializationUserAccountArgs struct {
	Keys     pulumi.StringArrayInput `pulumi:"keys"`
	Password pulumi.StringPtrInput   `pulumi:"password"`
	Username pulumi.StringPtrInput   `pulumi:"username"`
}

func (VirtualMachineInitializationUserAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInitializationUserAccount)(nil)).Elem()
}

func (i VirtualMachineInitializationUserAccountArgs) ToVirtualMachineInitializationUserAccountOutput() VirtualMachineInitializationUserAccountOutput {
	return i.ToVirtualMachineInitializationUserAccountOutputWithContext(context.Background())
}

func (i VirtualMachineInitializationUserAccountArgs) ToVirtualMachineInitializationUserAccountOutputWithContext(ctx context.Context) VirtualMachineInitializationUserAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInitializationUserAccountOutput)
}

func (i VirtualMachineInitializationUserAccountArgs) ToVirtualMachineInitializationUserAccountPtrOutput() VirtualMachineInitializationUserAccountPtrOutput {
	return i.ToVirtualMachineInitializationUserAccountPtrOutputWithContext(context.Background())
}

func (i VirtualMachineInitializationUserAccountArgs) ToVirtualMachineInitializationUserAccountPtrOutputWithContext(ctx context.Context) VirtualMachineInitializationUserAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInitializationUserAccountOutput).ToVirtualMachineInitializationUserAccountPtrOutputWithContext(ctx)
}

// VirtualMachineInitializationUserAccountPtrInput is an input type that accepts VirtualMachineInitializationUserAccountArgs, VirtualMachineInitializationUserAccountPtr and VirtualMachineInitializationUserAccountPtrOutput values.
// You can construct a concrete instance of `VirtualMachineInitializationUserAccountPtrInput` via:
//
//	        VirtualMachineInitializationUserAccountArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineInitializationUserAccountPtrInput interface {
	pulumi.Input

	ToVirtualMachineInitializationUserAccountPtrOutput() VirtualMachineInitializationUserAccountPtrOutput
	ToVirtualMachineInitializationUserAccountPtrOutputWithContext(context.Context) VirtualMachineInitializationUserAccountPtrOutput
}

type virtualMachineInitializationUserAccountPtrType VirtualMachineInitializationUserAccountArgs

func VirtualMachineInitializationUserAccountPtr(v *VirtualMachineInitializationUserAccountArgs) VirtualMachineInitializationUserAccountPtrInput {
	return (*virtualMachineInitializationUserAccountPtrType)(v)
}

func (*virtualMachineInitializationUserAccountPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineInitializationUserAccount)(nil)).Elem()
}

func (i *virtualMachineInitializationUserAccountPtrType) ToVirtualMachineInitializationUserAccountPtrOutput() VirtualMachineInitializationUserAccountPtrOutput {
	return i.ToVirtualMachineInitializationUserAccountPtrOutputWithContext(context.Background())
}

func (i *virtualMachineInitializationUserAccountPtrType) ToVirtualMachineInitializationUserAccountPtrOutputWithContext(ctx context.Context) VirtualMachineInitializationUserAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInitializationUserAccountPtrOutput)
}

type VirtualMachineInitializationUserAccountOutput struct{ *pulumi.OutputState }

func (VirtualMachineInitializationUserAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInitializationUserAccount)(nil)).Elem()
}

func (o VirtualMachineInitializationUserAccountOutput) ToVirtualMachineInitializationUserAccountOutput() VirtualMachineInitializationUserAccountOutput {
	return o
}

func (o VirtualMachineInitializationUserAccountOutput) ToVirtualMachineInitializationUserAccountOutputWithContext(ctx context.Context) VirtualMachineInitializationUserAccountOutput {
	return o
}

func (o VirtualMachineInitializationUserAccountOutput) ToVirtualMachineInitializationUserAccountPtrOutput() VirtualMachineInitializationUserAccountPtrOutput {
	return o.ToVirtualMachineInitializationUserAccountPtrOutputWithContext(context.Background())
}

func (o VirtualMachineInitializationUserAccountOutput) ToVirtualMachineInitializationUserAccountPtrOutputWithContext(ctx context.Context) VirtualMachineInitializationUserAccountPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineInitializationUserAccount) *VirtualMachineInitializationUserAccount {
		return &v
	}).(VirtualMachineInitializationUserAccountPtrOutput)
}

func (o VirtualMachineInitializationUserAccountOutput) Keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualMachineInitializationUserAccount) []string { return v.Keys }).(pulumi.StringArrayOutput)
}

func (o VirtualMachineInitializationUserAccountOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineInitializationUserAccount) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o VirtualMachineInitializationUserAccountOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineInitializationUserAccount) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type VirtualMachineInitializationUserAccountPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineInitializationUserAccountPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineInitializationUserAccount)(nil)).Elem()
}

func (o VirtualMachineInitializationUserAccountPtrOutput) ToVirtualMachineInitializationUserAccountPtrOutput() VirtualMachineInitializationUserAccountPtrOutput {
	return o
}

func (o VirtualMachineInitializationUserAccountPtrOutput) ToVirtualMachineInitializationUserAccountPtrOutputWithContext(ctx context.Context) VirtualMachineInitializationUserAccountPtrOutput {
	return o
}

func (o VirtualMachineInitializationUserAccountPtrOutput) Elem() VirtualMachineInitializationUserAccountOutput {
	return o.ApplyT(func(v *VirtualMachineInitializationUserAccount) VirtualMachineInitializationUserAccount {
		if v != nil {
			return *v
		}
		var ret VirtualMachineInitializationUserAccount
		return ret
	}).(VirtualMachineInitializationUserAccountOutput)
}

func (o VirtualMachineInitializationUserAccountPtrOutput) Keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualMachineInitializationUserAccount) []string {
		if v == nil {
			return nil
		}
		return v.Keys
	}).(pulumi.StringArrayOutput)
}

func (o VirtualMachineInitializationUserAccountPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInitializationUserAccount) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

func (o VirtualMachineInitializationUserAccountPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInitializationUserAccount) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type VirtualMachineMemory struct {
	Dedicated *int `pulumi:"dedicated"`
	Floating  *int `pulumi:"floating"`
	Shared    *int `pulumi:"shared"`
}

// VirtualMachineMemoryInput is an input type that accepts VirtualMachineMemoryArgs and VirtualMachineMemoryOutput values.
// You can construct a concrete instance of `VirtualMachineMemoryInput` via:
//
//	VirtualMachineMemoryArgs{...}
type VirtualMachineMemoryInput interface {
	pulumi.Input

	ToVirtualMachineMemoryOutput() VirtualMachineMemoryOutput
	ToVirtualMachineMemoryOutputWithContext(context.Context) VirtualMachineMemoryOutput
}

type VirtualMachineMemoryArgs struct {
	Dedicated pulumi.IntPtrInput `pulumi:"dedicated"`
	Floating  pulumi.IntPtrInput `pulumi:"floating"`
	Shared    pulumi.IntPtrInput `pulumi:"shared"`
}

func (VirtualMachineMemoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineMemory)(nil)).Elem()
}

func (i VirtualMachineMemoryArgs) ToVirtualMachineMemoryOutput() VirtualMachineMemoryOutput {
	return i.ToVirtualMachineMemoryOutputWithContext(context.Background())
}

func (i VirtualMachineMemoryArgs) ToVirtualMachineMemoryOutputWithContext(ctx context.Context) VirtualMachineMemoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineMemoryOutput)
}

func (i VirtualMachineMemoryArgs) ToVirtualMachineMemoryPtrOutput() VirtualMachineMemoryPtrOutput {
	return i.ToVirtualMachineMemoryPtrOutputWithContext(context.Background())
}

func (i VirtualMachineMemoryArgs) ToVirtualMachineMemoryPtrOutputWithContext(ctx context.Context) VirtualMachineMemoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineMemoryOutput).ToVirtualMachineMemoryPtrOutputWithContext(ctx)
}

// VirtualMachineMemoryPtrInput is an input type that accepts VirtualMachineMemoryArgs, VirtualMachineMemoryPtr and VirtualMachineMemoryPtrOutput values.
// You can construct a concrete instance of `VirtualMachineMemoryPtrInput` via:
//
//	        VirtualMachineMemoryArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineMemoryPtrInput interface {
	pulumi.Input

	ToVirtualMachineMemoryPtrOutput() VirtualMachineMemoryPtrOutput
	ToVirtualMachineMemoryPtrOutputWithContext(context.Context) VirtualMachineMemoryPtrOutput
}

type virtualMachineMemoryPtrType VirtualMachineMemoryArgs

func VirtualMachineMemoryPtr(v *VirtualMachineMemoryArgs) VirtualMachineMemoryPtrInput {
	return (*virtualMachineMemoryPtrType)(v)
}

func (*virtualMachineMemoryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineMemory)(nil)).Elem()
}

func (i *virtualMachineMemoryPtrType) ToVirtualMachineMemoryPtrOutput() VirtualMachineMemoryPtrOutput {
	return i.ToVirtualMachineMemoryPtrOutputWithContext(context.Background())
}

func (i *virtualMachineMemoryPtrType) ToVirtualMachineMemoryPtrOutputWithContext(ctx context.Context) VirtualMachineMemoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineMemoryPtrOutput)
}

type VirtualMachineMemoryOutput struct{ *pulumi.OutputState }

func (VirtualMachineMemoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineMemory)(nil)).Elem()
}

func (o VirtualMachineMemoryOutput) ToVirtualMachineMemoryOutput() VirtualMachineMemoryOutput {
	return o
}

func (o VirtualMachineMemoryOutput) ToVirtualMachineMemoryOutputWithContext(ctx context.Context) VirtualMachineMemoryOutput {
	return o
}

func (o VirtualMachineMemoryOutput) ToVirtualMachineMemoryPtrOutput() VirtualMachineMemoryPtrOutput {
	return o.ToVirtualMachineMemoryPtrOutputWithContext(context.Background())
}

func (o VirtualMachineMemoryOutput) ToVirtualMachineMemoryPtrOutputWithContext(ctx context.Context) VirtualMachineMemoryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineMemory) *VirtualMachineMemory {
		return &v
	}).(VirtualMachineMemoryPtrOutput)
}

func (o VirtualMachineMemoryOutput) Dedicated() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineMemory) *int { return v.Dedicated }).(pulumi.IntPtrOutput)
}

func (o VirtualMachineMemoryOutput) Floating() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineMemory) *int { return v.Floating }).(pulumi.IntPtrOutput)
}

func (o VirtualMachineMemoryOutput) Shared() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineMemory) *int { return v.Shared }).(pulumi.IntPtrOutput)
}

type VirtualMachineMemoryPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineMemoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineMemory)(nil)).Elem()
}

func (o VirtualMachineMemoryPtrOutput) ToVirtualMachineMemoryPtrOutput() VirtualMachineMemoryPtrOutput {
	return o
}

func (o VirtualMachineMemoryPtrOutput) ToVirtualMachineMemoryPtrOutputWithContext(ctx context.Context) VirtualMachineMemoryPtrOutput {
	return o
}

func (o VirtualMachineMemoryPtrOutput) Elem() VirtualMachineMemoryOutput {
	return o.ApplyT(func(v *VirtualMachineMemory) VirtualMachineMemory {
		if v != nil {
			return *v
		}
		var ret VirtualMachineMemory
		return ret
	}).(VirtualMachineMemoryOutput)
}

func (o VirtualMachineMemoryPtrOutput) Dedicated() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineMemory) *int {
		if v == nil {
			return nil
		}
		return v.Dedicated
	}).(pulumi.IntPtrOutput)
}

func (o VirtualMachineMemoryPtrOutput) Floating() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineMemory) *int {
		if v == nil {
			return nil
		}
		return v.Floating
	}).(pulumi.IntPtrOutput)
}

func (o VirtualMachineMemoryPtrOutput) Shared() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineMemory) *int {
		if v == nil {
			return nil
		}
		return v.Shared
	}).(pulumi.IntPtrOutput)
}

type VirtualMachineNetworkDevice struct {
	Bridge     *string  `pulumi:"bridge"`
	Enabled    *bool    `pulumi:"enabled"`
	MacAddress *string  `pulumi:"macAddress"`
	Model      *string  `pulumi:"model"`
	Mtu        *int     `pulumi:"mtu"`
	RateLimit  *float64 `pulumi:"rateLimit"`
	VlanId     *int     `pulumi:"vlanId"`
}

// VirtualMachineNetworkDeviceInput is an input type that accepts VirtualMachineNetworkDeviceArgs and VirtualMachineNetworkDeviceOutput values.
// You can construct a concrete instance of `VirtualMachineNetworkDeviceInput` via:
//
//	VirtualMachineNetworkDeviceArgs{...}
type VirtualMachineNetworkDeviceInput interface {
	pulumi.Input

	ToVirtualMachineNetworkDeviceOutput() VirtualMachineNetworkDeviceOutput
	ToVirtualMachineNetworkDeviceOutputWithContext(context.Context) VirtualMachineNetworkDeviceOutput
}

type VirtualMachineNetworkDeviceArgs struct {
	Bridge     pulumi.StringPtrInput  `pulumi:"bridge"`
	Enabled    pulumi.BoolPtrInput    `pulumi:"enabled"`
	MacAddress pulumi.StringPtrInput  `pulumi:"macAddress"`
	Model      pulumi.StringPtrInput  `pulumi:"model"`
	Mtu        pulumi.IntPtrInput     `pulumi:"mtu"`
	RateLimit  pulumi.Float64PtrInput `pulumi:"rateLimit"`
	VlanId     pulumi.IntPtrInput     `pulumi:"vlanId"`
}

func (VirtualMachineNetworkDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineNetworkDevice)(nil)).Elem()
}

func (i VirtualMachineNetworkDeviceArgs) ToVirtualMachineNetworkDeviceOutput() VirtualMachineNetworkDeviceOutput {
	return i.ToVirtualMachineNetworkDeviceOutputWithContext(context.Background())
}

func (i VirtualMachineNetworkDeviceArgs) ToVirtualMachineNetworkDeviceOutputWithContext(ctx context.Context) VirtualMachineNetworkDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineNetworkDeviceOutput)
}

// VirtualMachineNetworkDeviceArrayInput is an input type that accepts VirtualMachineNetworkDeviceArray and VirtualMachineNetworkDeviceArrayOutput values.
// You can construct a concrete instance of `VirtualMachineNetworkDeviceArrayInput` via:
//
//	VirtualMachineNetworkDeviceArray{ VirtualMachineNetworkDeviceArgs{...} }
type VirtualMachineNetworkDeviceArrayInput interface {
	pulumi.Input

	ToVirtualMachineNetworkDeviceArrayOutput() VirtualMachineNetworkDeviceArrayOutput
	ToVirtualMachineNetworkDeviceArrayOutputWithContext(context.Context) VirtualMachineNetworkDeviceArrayOutput
}

type VirtualMachineNetworkDeviceArray []VirtualMachineNetworkDeviceInput

func (VirtualMachineNetworkDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineNetworkDevice)(nil)).Elem()
}

func (i VirtualMachineNetworkDeviceArray) ToVirtualMachineNetworkDeviceArrayOutput() VirtualMachineNetworkDeviceArrayOutput {
	return i.ToVirtualMachineNetworkDeviceArrayOutputWithContext(context.Background())
}

func (i VirtualMachineNetworkDeviceArray) ToVirtualMachineNetworkDeviceArrayOutputWithContext(ctx context.Context) VirtualMachineNetworkDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineNetworkDeviceArrayOutput)
}

type VirtualMachineNetworkDeviceOutput struct{ *pulumi.OutputState }

func (VirtualMachineNetworkDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineNetworkDevice)(nil)).Elem()
}

func (o VirtualMachineNetworkDeviceOutput) ToVirtualMachineNetworkDeviceOutput() VirtualMachineNetworkDeviceOutput {
	return o
}

func (o VirtualMachineNetworkDeviceOutput) ToVirtualMachineNetworkDeviceOutputWithContext(ctx context.Context) VirtualMachineNetworkDeviceOutput {
	return o
}

func (o VirtualMachineNetworkDeviceOutput) Bridge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineNetworkDevice) *string { return v.Bridge }).(pulumi.StringPtrOutput)
}

func (o VirtualMachineNetworkDeviceOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineNetworkDevice) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o VirtualMachineNetworkDeviceOutput) MacAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineNetworkDevice) *string { return v.MacAddress }).(pulumi.StringPtrOutput)
}

func (o VirtualMachineNetworkDeviceOutput) Model() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineNetworkDevice) *string { return v.Model }).(pulumi.StringPtrOutput)
}

func (o VirtualMachineNetworkDeviceOutput) Mtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineNetworkDevice) *int { return v.Mtu }).(pulumi.IntPtrOutput)
}

func (o VirtualMachineNetworkDeviceOutput) RateLimit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v VirtualMachineNetworkDevice) *float64 { return v.RateLimit }).(pulumi.Float64PtrOutput)
}

func (o VirtualMachineNetworkDeviceOutput) VlanId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineNetworkDevice) *int { return v.VlanId }).(pulumi.IntPtrOutput)
}

type VirtualMachineNetworkDeviceArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineNetworkDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineNetworkDevice)(nil)).Elem()
}

func (o VirtualMachineNetworkDeviceArrayOutput) ToVirtualMachineNetworkDeviceArrayOutput() VirtualMachineNetworkDeviceArrayOutput {
	return o
}

func (o VirtualMachineNetworkDeviceArrayOutput) ToVirtualMachineNetworkDeviceArrayOutputWithContext(ctx context.Context) VirtualMachineNetworkDeviceArrayOutput {
	return o
}

func (o VirtualMachineNetworkDeviceArrayOutput) Index(i pulumi.IntInput) VirtualMachineNetworkDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualMachineNetworkDevice {
		return vs[0].([]VirtualMachineNetworkDevice)[vs[1].(int)]
	}).(VirtualMachineNetworkDeviceOutput)
}

type VirtualMachineOperatingSystem struct {
	Type *string `pulumi:"type"`
}

// VirtualMachineOperatingSystemInput is an input type that accepts VirtualMachineOperatingSystemArgs and VirtualMachineOperatingSystemOutput values.
// You can construct a concrete instance of `VirtualMachineOperatingSystemInput` via:
//
//	VirtualMachineOperatingSystemArgs{...}
type VirtualMachineOperatingSystemInput interface {
	pulumi.Input

	ToVirtualMachineOperatingSystemOutput() VirtualMachineOperatingSystemOutput
	ToVirtualMachineOperatingSystemOutputWithContext(context.Context) VirtualMachineOperatingSystemOutput
}

type VirtualMachineOperatingSystemArgs struct {
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (VirtualMachineOperatingSystemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineOperatingSystem)(nil)).Elem()
}

func (i VirtualMachineOperatingSystemArgs) ToVirtualMachineOperatingSystemOutput() VirtualMachineOperatingSystemOutput {
	return i.ToVirtualMachineOperatingSystemOutputWithContext(context.Background())
}

func (i VirtualMachineOperatingSystemArgs) ToVirtualMachineOperatingSystemOutputWithContext(ctx context.Context) VirtualMachineOperatingSystemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineOperatingSystemOutput)
}

func (i VirtualMachineOperatingSystemArgs) ToVirtualMachineOperatingSystemPtrOutput() VirtualMachineOperatingSystemPtrOutput {
	return i.ToVirtualMachineOperatingSystemPtrOutputWithContext(context.Background())
}

func (i VirtualMachineOperatingSystemArgs) ToVirtualMachineOperatingSystemPtrOutputWithContext(ctx context.Context) VirtualMachineOperatingSystemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineOperatingSystemOutput).ToVirtualMachineOperatingSystemPtrOutputWithContext(ctx)
}

// VirtualMachineOperatingSystemPtrInput is an input type that accepts VirtualMachineOperatingSystemArgs, VirtualMachineOperatingSystemPtr and VirtualMachineOperatingSystemPtrOutput values.
// You can construct a concrete instance of `VirtualMachineOperatingSystemPtrInput` via:
//
//	        VirtualMachineOperatingSystemArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineOperatingSystemPtrInput interface {
	pulumi.Input

	ToVirtualMachineOperatingSystemPtrOutput() VirtualMachineOperatingSystemPtrOutput
	ToVirtualMachineOperatingSystemPtrOutputWithContext(context.Context) VirtualMachineOperatingSystemPtrOutput
}

type virtualMachineOperatingSystemPtrType VirtualMachineOperatingSystemArgs

func VirtualMachineOperatingSystemPtr(v *VirtualMachineOperatingSystemArgs) VirtualMachineOperatingSystemPtrInput {
	return (*virtualMachineOperatingSystemPtrType)(v)
}

func (*virtualMachineOperatingSystemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineOperatingSystem)(nil)).Elem()
}

func (i *virtualMachineOperatingSystemPtrType) ToVirtualMachineOperatingSystemPtrOutput() VirtualMachineOperatingSystemPtrOutput {
	return i.ToVirtualMachineOperatingSystemPtrOutputWithContext(context.Background())
}

func (i *virtualMachineOperatingSystemPtrType) ToVirtualMachineOperatingSystemPtrOutputWithContext(ctx context.Context) VirtualMachineOperatingSystemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineOperatingSystemPtrOutput)
}

type VirtualMachineOperatingSystemOutput struct{ *pulumi.OutputState }

func (VirtualMachineOperatingSystemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineOperatingSystem)(nil)).Elem()
}

func (o VirtualMachineOperatingSystemOutput) ToVirtualMachineOperatingSystemOutput() VirtualMachineOperatingSystemOutput {
	return o
}

func (o VirtualMachineOperatingSystemOutput) ToVirtualMachineOperatingSystemOutputWithContext(ctx context.Context) VirtualMachineOperatingSystemOutput {
	return o
}

func (o VirtualMachineOperatingSystemOutput) ToVirtualMachineOperatingSystemPtrOutput() VirtualMachineOperatingSystemPtrOutput {
	return o.ToVirtualMachineOperatingSystemPtrOutputWithContext(context.Background())
}

func (o VirtualMachineOperatingSystemOutput) ToVirtualMachineOperatingSystemPtrOutputWithContext(ctx context.Context) VirtualMachineOperatingSystemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineOperatingSystem) *VirtualMachineOperatingSystem {
		return &v
	}).(VirtualMachineOperatingSystemPtrOutput)
}

func (o VirtualMachineOperatingSystemOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineOperatingSystem) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type VirtualMachineOperatingSystemPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineOperatingSystemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineOperatingSystem)(nil)).Elem()
}

func (o VirtualMachineOperatingSystemPtrOutput) ToVirtualMachineOperatingSystemPtrOutput() VirtualMachineOperatingSystemPtrOutput {
	return o
}

func (o VirtualMachineOperatingSystemPtrOutput) ToVirtualMachineOperatingSystemPtrOutputWithContext(ctx context.Context) VirtualMachineOperatingSystemPtrOutput {
	return o
}

func (o VirtualMachineOperatingSystemPtrOutput) Elem() VirtualMachineOperatingSystemOutput {
	return o.ApplyT(func(v *VirtualMachineOperatingSystem) VirtualMachineOperatingSystem {
		if v != nil {
			return *v
		}
		var ret VirtualMachineOperatingSystem
		return ret
	}).(VirtualMachineOperatingSystemOutput)
}

func (o VirtualMachineOperatingSystemPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineOperatingSystem) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type VirtualMachineSerialDevice struct {
	Device *string `pulumi:"device"`
}

// VirtualMachineSerialDeviceInput is an input type that accepts VirtualMachineSerialDeviceArgs and VirtualMachineSerialDeviceOutput values.
// You can construct a concrete instance of `VirtualMachineSerialDeviceInput` via:
//
//	VirtualMachineSerialDeviceArgs{...}
type VirtualMachineSerialDeviceInput interface {
	pulumi.Input

	ToVirtualMachineSerialDeviceOutput() VirtualMachineSerialDeviceOutput
	ToVirtualMachineSerialDeviceOutputWithContext(context.Context) VirtualMachineSerialDeviceOutput
}

type VirtualMachineSerialDeviceArgs struct {
	Device pulumi.StringPtrInput `pulumi:"device"`
}

func (VirtualMachineSerialDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineSerialDevice)(nil)).Elem()
}

func (i VirtualMachineSerialDeviceArgs) ToVirtualMachineSerialDeviceOutput() VirtualMachineSerialDeviceOutput {
	return i.ToVirtualMachineSerialDeviceOutputWithContext(context.Background())
}

func (i VirtualMachineSerialDeviceArgs) ToVirtualMachineSerialDeviceOutputWithContext(ctx context.Context) VirtualMachineSerialDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineSerialDeviceOutput)
}

// VirtualMachineSerialDeviceArrayInput is an input type that accepts VirtualMachineSerialDeviceArray and VirtualMachineSerialDeviceArrayOutput values.
// You can construct a concrete instance of `VirtualMachineSerialDeviceArrayInput` via:
//
//	VirtualMachineSerialDeviceArray{ VirtualMachineSerialDeviceArgs{...} }
type VirtualMachineSerialDeviceArrayInput interface {
	pulumi.Input

	ToVirtualMachineSerialDeviceArrayOutput() VirtualMachineSerialDeviceArrayOutput
	ToVirtualMachineSerialDeviceArrayOutputWithContext(context.Context) VirtualMachineSerialDeviceArrayOutput
}

type VirtualMachineSerialDeviceArray []VirtualMachineSerialDeviceInput

func (VirtualMachineSerialDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineSerialDevice)(nil)).Elem()
}

func (i VirtualMachineSerialDeviceArray) ToVirtualMachineSerialDeviceArrayOutput() VirtualMachineSerialDeviceArrayOutput {
	return i.ToVirtualMachineSerialDeviceArrayOutputWithContext(context.Background())
}

func (i VirtualMachineSerialDeviceArray) ToVirtualMachineSerialDeviceArrayOutputWithContext(ctx context.Context) VirtualMachineSerialDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineSerialDeviceArrayOutput)
}

type VirtualMachineSerialDeviceOutput struct{ *pulumi.OutputState }

func (VirtualMachineSerialDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineSerialDevice)(nil)).Elem()
}

func (o VirtualMachineSerialDeviceOutput) ToVirtualMachineSerialDeviceOutput() VirtualMachineSerialDeviceOutput {
	return o
}

func (o VirtualMachineSerialDeviceOutput) ToVirtualMachineSerialDeviceOutputWithContext(ctx context.Context) VirtualMachineSerialDeviceOutput {
	return o
}

func (o VirtualMachineSerialDeviceOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineSerialDevice) *string { return v.Device }).(pulumi.StringPtrOutput)
}

type VirtualMachineSerialDeviceArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineSerialDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineSerialDevice)(nil)).Elem()
}

func (o VirtualMachineSerialDeviceArrayOutput) ToVirtualMachineSerialDeviceArrayOutput() VirtualMachineSerialDeviceArrayOutput {
	return o
}

func (o VirtualMachineSerialDeviceArrayOutput) ToVirtualMachineSerialDeviceArrayOutputWithContext(ctx context.Context) VirtualMachineSerialDeviceArrayOutput {
	return o
}

func (o VirtualMachineSerialDeviceArrayOutput) Index(i pulumi.IntInput) VirtualMachineSerialDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualMachineSerialDevice {
		return vs[0].([]VirtualMachineSerialDevice)[vs[1].(int)]
	}).(VirtualMachineSerialDeviceOutput)
}

type VirtualMachineVga struct {
	Enabled *bool   `pulumi:"enabled"`
	Memory  *int    `pulumi:"memory"`
	Type    *string `pulumi:"type"`
}

// VirtualMachineVgaInput is an input type that accepts VirtualMachineVgaArgs and VirtualMachineVgaOutput values.
// You can construct a concrete instance of `VirtualMachineVgaInput` via:
//
//	VirtualMachineVgaArgs{...}
type VirtualMachineVgaInput interface {
	pulumi.Input

	ToVirtualMachineVgaOutput() VirtualMachineVgaOutput
	ToVirtualMachineVgaOutputWithContext(context.Context) VirtualMachineVgaOutput
}

type VirtualMachineVgaArgs struct {
	Enabled pulumi.BoolPtrInput   `pulumi:"enabled"`
	Memory  pulumi.IntPtrInput    `pulumi:"memory"`
	Type    pulumi.StringPtrInput `pulumi:"type"`
}

func (VirtualMachineVgaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineVga)(nil)).Elem()
}

func (i VirtualMachineVgaArgs) ToVirtualMachineVgaOutput() VirtualMachineVgaOutput {
	return i.ToVirtualMachineVgaOutputWithContext(context.Background())
}

func (i VirtualMachineVgaArgs) ToVirtualMachineVgaOutputWithContext(ctx context.Context) VirtualMachineVgaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineVgaOutput)
}

func (i VirtualMachineVgaArgs) ToVirtualMachineVgaPtrOutput() VirtualMachineVgaPtrOutput {
	return i.ToVirtualMachineVgaPtrOutputWithContext(context.Background())
}

func (i VirtualMachineVgaArgs) ToVirtualMachineVgaPtrOutputWithContext(ctx context.Context) VirtualMachineVgaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineVgaOutput).ToVirtualMachineVgaPtrOutputWithContext(ctx)
}

// VirtualMachineVgaPtrInput is an input type that accepts VirtualMachineVgaArgs, VirtualMachineVgaPtr and VirtualMachineVgaPtrOutput values.
// You can construct a concrete instance of `VirtualMachineVgaPtrInput` via:
//
//	        VirtualMachineVgaArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineVgaPtrInput interface {
	pulumi.Input

	ToVirtualMachineVgaPtrOutput() VirtualMachineVgaPtrOutput
	ToVirtualMachineVgaPtrOutputWithContext(context.Context) VirtualMachineVgaPtrOutput
}

type virtualMachineVgaPtrType VirtualMachineVgaArgs

func VirtualMachineVgaPtr(v *VirtualMachineVgaArgs) VirtualMachineVgaPtrInput {
	return (*virtualMachineVgaPtrType)(v)
}

func (*virtualMachineVgaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineVga)(nil)).Elem()
}

func (i *virtualMachineVgaPtrType) ToVirtualMachineVgaPtrOutput() VirtualMachineVgaPtrOutput {
	return i.ToVirtualMachineVgaPtrOutputWithContext(context.Background())
}

func (i *virtualMachineVgaPtrType) ToVirtualMachineVgaPtrOutputWithContext(ctx context.Context) VirtualMachineVgaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineVgaPtrOutput)
}

type VirtualMachineVgaOutput struct{ *pulumi.OutputState }

func (VirtualMachineVgaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineVga)(nil)).Elem()
}

func (o VirtualMachineVgaOutput) ToVirtualMachineVgaOutput() VirtualMachineVgaOutput {
	return o
}

func (o VirtualMachineVgaOutput) ToVirtualMachineVgaOutputWithContext(ctx context.Context) VirtualMachineVgaOutput {
	return o
}

func (o VirtualMachineVgaOutput) ToVirtualMachineVgaPtrOutput() VirtualMachineVgaPtrOutput {
	return o.ToVirtualMachineVgaPtrOutputWithContext(context.Background())
}

func (o VirtualMachineVgaOutput) ToVirtualMachineVgaPtrOutputWithContext(ctx context.Context) VirtualMachineVgaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineVga) *VirtualMachineVga {
		return &v
	}).(VirtualMachineVgaPtrOutput)
}

func (o VirtualMachineVgaOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineVga) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o VirtualMachineVgaOutput) Memory() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineVga) *int { return v.Memory }).(pulumi.IntPtrOutput)
}

func (o VirtualMachineVgaOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineVga) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type VirtualMachineVgaPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineVgaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineVga)(nil)).Elem()
}

func (o VirtualMachineVgaPtrOutput) ToVirtualMachineVgaPtrOutput() VirtualMachineVgaPtrOutput {
	return o
}

func (o VirtualMachineVgaPtrOutput) ToVirtualMachineVgaPtrOutputWithContext(ctx context.Context) VirtualMachineVgaPtrOutput {
	return o
}

func (o VirtualMachineVgaPtrOutput) Elem() VirtualMachineVgaOutput {
	return o.ApplyT(func(v *VirtualMachineVga) VirtualMachineVga {
		if v != nil {
			return *v
		}
		var ret VirtualMachineVga
		return ret
	}).(VirtualMachineVgaOutput)
}

func (o VirtualMachineVgaPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineVga) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o VirtualMachineVgaPtrOutput) Memory() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineVga) *int {
		if v == nil {
			return nil
		}
		return v.Memory
	}).(pulumi.IntPtrOutput)
}

func (o VirtualMachineVgaPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineVga) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineAgentInput)(nil)).Elem(), VirtualMachineAgentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineAgentPtrInput)(nil)).Elem(), VirtualMachineAgentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineAudioDeviceInput)(nil)).Elem(), VirtualMachineAudioDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineAudioDevicePtrInput)(nil)).Elem(), VirtualMachineAudioDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineCdromInput)(nil)).Elem(), VirtualMachineCdromArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineCdromPtrInput)(nil)).Elem(), VirtualMachineCdromArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineCloneInput)(nil)).Elem(), VirtualMachineCloneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineClonePtrInput)(nil)).Elem(), VirtualMachineCloneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineCpuInput)(nil)).Elem(), VirtualMachineCpuArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineCpuPtrInput)(nil)).Elem(), VirtualMachineCpuArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineDiskInput)(nil)).Elem(), VirtualMachineDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineDiskArrayInput)(nil)).Elem(), VirtualMachineDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineDiskSpeedInput)(nil)).Elem(), VirtualMachineDiskSpeedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineDiskSpeedPtrInput)(nil)).Elem(), VirtualMachineDiskSpeedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineHostpciInput)(nil)).Elem(), VirtualMachineHostpciArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineHostpciArrayInput)(nil)).Elem(), VirtualMachineHostpciArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineInitializationInput)(nil)).Elem(), VirtualMachineInitializationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineInitializationPtrInput)(nil)).Elem(), VirtualMachineInitializationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineInitializationDnsInput)(nil)).Elem(), VirtualMachineInitializationDnsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineInitializationDnsPtrInput)(nil)).Elem(), VirtualMachineInitializationDnsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineInitializationIpConfigInput)(nil)).Elem(), VirtualMachineInitializationIpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineInitializationIpConfigArrayInput)(nil)).Elem(), VirtualMachineInitializationIpConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineInitializationIpConfigIpv4Input)(nil)).Elem(), VirtualMachineInitializationIpConfigIpv4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineInitializationIpConfigIpv4PtrInput)(nil)).Elem(), VirtualMachineInitializationIpConfigIpv4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineInitializationIpConfigIpv6Input)(nil)).Elem(), VirtualMachineInitializationIpConfigIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineInitializationIpConfigIpv6PtrInput)(nil)).Elem(), VirtualMachineInitializationIpConfigIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineInitializationUserAccountInput)(nil)).Elem(), VirtualMachineInitializationUserAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineInitializationUserAccountPtrInput)(nil)).Elem(), VirtualMachineInitializationUserAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineMemoryInput)(nil)).Elem(), VirtualMachineMemoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineMemoryPtrInput)(nil)).Elem(), VirtualMachineMemoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineNetworkDeviceInput)(nil)).Elem(), VirtualMachineNetworkDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineNetworkDeviceArrayInput)(nil)).Elem(), VirtualMachineNetworkDeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineOperatingSystemInput)(nil)).Elem(), VirtualMachineOperatingSystemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineOperatingSystemPtrInput)(nil)).Elem(), VirtualMachineOperatingSystemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineSerialDeviceInput)(nil)).Elem(), VirtualMachineSerialDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineSerialDeviceArrayInput)(nil)).Elem(), VirtualMachineSerialDeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineVgaInput)(nil)).Elem(), VirtualMachineVgaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineVgaPtrInput)(nil)).Elem(), VirtualMachineVgaArgs{})
	pulumi.RegisterOutputType(VirtualMachineAgentOutput{})
	pulumi.RegisterOutputType(VirtualMachineAgentPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineAudioDeviceOutput{})
	pulumi.RegisterOutputType(VirtualMachineAudioDevicePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineCdromOutput{})
	pulumi.RegisterOutputType(VirtualMachineCdromPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineCloneOutput{})
	pulumi.RegisterOutputType(VirtualMachineClonePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineCpuOutput{})
	pulumi.RegisterOutputType(VirtualMachineCpuPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineDiskOutput{})
	pulumi.RegisterOutputType(VirtualMachineDiskArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineDiskSpeedOutput{})
	pulumi.RegisterOutputType(VirtualMachineDiskSpeedPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineHostpciOutput{})
	pulumi.RegisterOutputType(VirtualMachineHostpciArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineInitializationOutput{})
	pulumi.RegisterOutputType(VirtualMachineInitializationPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineInitializationDnsOutput{})
	pulumi.RegisterOutputType(VirtualMachineInitializationDnsPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineInitializationIpConfigOutput{})
	pulumi.RegisterOutputType(VirtualMachineInitializationIpConfigArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineInitializationIpConfigIpv4Output{})
	pulumi.RegisterOutputType(VirtualMachineInitializationIpConfigIpv4PtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineInitializationIpConfigIpv6Output{})
	pulumi.RegisterOutputType(VirtualMachineInitializationIpConfigIpv6PtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineInitializationUserAccountOutput{})
	pulumi.RegisterOutputType(VirtualMachineInitializationUserAccountPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineMemoryOutput{})
	pulumi.RegisterOutputType(VirtualMachineMemoryPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineNetworkDeviceOutput{})
	pulumi.RegisterOutputType(VirtualMachineNetworkDeviceArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineOperatingSystemOutput{})
	pulumi.RegisterOutputType(VirtualMachineOperatingSystemPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineSerialDeviceOutput{})
	pulumi.RegisterOutputType(VirtualMachineSerialDeviceArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineVgaOutput{})
	pulumi.RegisterOutputType(VirtualMachineVgaPtrOutput{})
}
