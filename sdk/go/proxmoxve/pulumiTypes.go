// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package proxmoxve

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type HostsEntry struct {
	Address   string   `pulumi:"address"`
	Hostnames []string `pulumi:"hostnames"`
}

// HostsEntryInput is an input type that accepts HostsEntryArgs and HostsEntryOutput values.
// You can construct a concrete instance of `HostsEntryInput` via:
//
//	HostsEntryArgs{...}
type HostsEntryInput interface {
	pulumi.Input

	ToHostsEntryOutput() HostsEntryOutput
	ToHostsEntryOutputWithContext(context.Context) HostsEntryOutput
}

type HostsEntryArgs struct {
	Address   pulumi.StringInput      `pulumi:"address"`
	Hostnames pulumi.StringArrayInput `pulumi:"hostnames"`
}

func (HostsEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostsEntry)(nil)).Elem()
}

func (i HostsEntryArgs) ToHostsEntryOutput() HostsEntryOutput {
	return i.ToHostsEntryOutputWithContext(context.Background())
}

func (i HostsEntryArgs) ToHostsEntryOutputWithContext(ctx context.Context) HostsEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostsEntryOutput)
}

// HostsEntryArrayInput is an input type that accepts HostsEntryArray and HostsEntryArrayOutput values.
// You can construct a concrete instance of `HostsEntryArrayInput` via:
//
//	HostsEntryArray{ HostsEntryArgs{...} }
type HostsEntryArrayInput interface {
	pulumi.Input

	ToHostsEntryArrayOutput() HostsEntryArrayOutput
	ToHostsEntryArrayOutputWithContext(context.Context) HostsEntryArrayOutput
}

type HostsEntryArray []HostsEntryInput

func (HostsEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostsEntry)(nil)).Elem()
}

func (i HostsEntryArray) ToHostsEntryArrayOutput() HostsEntryArrayOutput {
	return i.ToHostsEntryArrayOutputWithContext(context.Background())
}

func (i HostsEntryArray) ToHostsEntryArrayOutputWithContext(ctx context.Context) HostsEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostsEntryArrayOutput)
}

type HostsEntryOutput struct{ *pulumi.OutputState }

func (HostsEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostsEntry)(nil)).Elem()
}

func (o HostsEntryOutput) ToHostsEntryOutput() HostsEntryOutput {
	return o
}

func (o HostsEntryOutput) ToHostsEntryOutputWithContext(ctx context.Context) HostsEntryOutput {
	return o
}

func (o HostsEntryOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v HostsEntry) string { return v.Address }).(pulumi.StringOutput)
}

func (o HostsEntryOutput) Hostnames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HostsEntry) []string { return v.Hostnames }).(pulumi.StringArrayOutput)
}

type HostsEntryArrayOutput struct{ *pulumi.OutputState }

func (HostsEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostsEntry)(nil)).Elem()
}

func (o HostsEntryArrayOutput) ToHostsEntryArrayOutput() HostsEntryArrayOutput {
	return o
}

func (o HostsEntryArrayOutput) ToHostsEntryArrayOutputWithContext(ctx context.Context) HostsEntryArrayOutput {
	return o
}

func (o HostsEntryArrayOutput) Index(i pulumi.IntInput) HostsEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HostsEntry {
		return vs[0].([]HostsEntry)[vs[1].(int)]
	}).(HostsEntryOutput)
}

type ProviderSsh struct {
	Agent       *bool            `pulumi:"agent"`
	AgentSocket *string          `pulumi:"agentSocket"`
	Node        *ProviderSshNode `pulumi:"node"`
	Password    *string          `pulumi:"password"`
	Username    *string          `pulumi:"username"`
}

// ProviderSshInput is an input type that accepts ProviderSshArgs and ProviderSshOutput values.
// You can construct a concrete instance of `ProviderSshInput` via:
//
//	ProviderSshArgs{...}
type ProviderSshInput interface {
	pulumi.Input

	ToProviderSshOutput() ProviderSshOutput
	ToProviderSshOutputWithContext(context.Context) ProviderSshOutput
}

type ProviderSshArgs struct {
	Agent       pulumi.BoolPtrInput     `pulumi:"agent"`
	AgentSocket pulumi.StringPtrInput   `pulumi:"agentSocket"`
	Node        ProviderSshNodePtrInput `pulumi:"node"`
	Password    pulumi.StringPtrInput   `pulumi:"password"`
	Username    pulumi.StringPtrInput   `pulumi:"username"`
}

func (ProviderSshArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderSsh)(nil)).Elem()
}

func (i ProviderSshArgs) ToProviderSshOutput() ProviderSshOutput {
	return i.ToProviderSshOutputWithContext(context.Background())
}

func (i ProviderSshArgs) ToProviderSshOutputWithContext(ctx context.Context) ProviderSshOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderSshOutput)
}

func (i ProviderSshArgs) ToProviderSshPtrOutput() ProviderSshPtrOutput {
	return i.ToProviderSshPtrOutputWithContext(context.Background())
}

func (i ProviderSshArgs) ToProviderSshPtrOutputWithContext(ctx context.Context) ProviderSshPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderSshOutput).ToProviderSshPtrOutputWithContext(ctx)
}

// ProviderSshPtrInput is an input type that accepts ProviderSshArgs, ProviderSshPtr and ProviderSshPtrOutput values.
// You can construct a concrete instance of `ProviderSshPtrInput` via:
//
//	        ProviderSshArgs{...}
//
//	or:
//
//	        nil
type ProviderSshPtrInput interface {
	pulumi.Input

	ToProviderSshPtrOutput() ProviderSshPtrOutput
	ToProviderSshPtrOutputWithContext(context.Context) ProviderSshPtrOutput
}

type providerSshPtrType ProviderSshArgs

func ProviderSshPtr(v *ProviderSshArgs) ProviderSshPtrInput {
	return (*providerSshPtrType)(v)
}

func (*providerSshPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderSsh)(nil)).Elem()
}

func (i *providerSshPtrType) ToProviderSshPtrOutput() ProviderSshPtrOutput {
	return i.ToProviderSshPtrOutputWithContext(context.Background())
}

func (i *providerSshPtrType) ToProviderSshPtrOutputWithContext(ctx context.Context) ProviderSshPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderSshPtrOutput)
}

type ProviderSshOutput struct{ *pulumi.OutputState }

func (ProviderSshOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderSsh)(nil)).Elem()
}

func (o ProviderSshOutput) ToProviderSshOutput() ProviderSshOutput {
	return o
}

func (o ProviderSshOutput) ToProviderSshOutputWithContext(ctx context.Context) ProviderSshOutput {
	return o
}

func (o ProviderSshOutput) ToProviderSshPtrOutput() ProviderSshPtrOutput {
	return o.ToProviderSshPtrOutputWithContext(context.Background())
}

func (o ProviderSshOutput) ToProviderSshPtrOutputWithContext(ctx context.Context) ProviderSshPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProviderSsh) *ProviderSsh {
		return &v
	}).(ProviderSshPtrOutput)
}

func (o ProviderSshOutput) Agent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProviderSsh) *bool { return v.Agent }).(pulumi.BoolPtrOutput)
}

func (o ProviderSshOutput) AgentSocket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderSsh) *string { return v.AgentSocket }).(pulumi.StringPtrOutput)
}

func (o ProviderSshOutput) Node() ProviderSshNodePtrOutput {
	return o.ApplyT(func(v ProviderSsh) *ProviderSshNode { return v.Node }).(ProviderSshNodePtrOutput)
}

func (o ProviderSshOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderSsh) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o ProviderSshOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderSsh) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ProviderSshPtrOutput struct{ *pulumi.OutputState }

func (ProviderSshPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderSsh)(nil)).Elem()
}

func (o ProviderSshPtrOutput) ToProviderSshPtrOutput() ProviderSshPtrOutput {
	return o
}

func (o ProviderSshPtrOutput) ToProviderSshPtrOutputWithContext(ctx context.Context) ProviderSshPtrOutput {
	return o
}

func (o ProviderSshPtrOutput) Elem() ProviderSshOutput {
	return o.ApplyT(func(v *ProviderSsh) ProviderSsh {
		if v != nil {
			return *v
		}
		var ret ProviderSsh
		return ret
	}).(ProviderSshOutput)
}

func (o ProviderSshPtrOutput) Agent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProviderSsh) *bool {
		if v == nil {
			return nil
		}
		return v.Agent
	}).(pulumi.BoolPtrOutput)
}

func (o ProviderSshPtrOutput) AgentSocket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderSsh) *string {
		if v == nil {
			return nil
		}
		return v.AgentSocket
	}).(pulumi.StringPtrOutput)
}

func (o ProviderSshPtrOutput) Node() ProviderSshNodePtrOutput {
	return o.ApplyT(func(v *ProviderSsh) *ProviderSshNode {
		if v == nil {
			return nil
		}
		return v.Node
	}).(ProviderSshNodePtrOutput)
}

func (o ProviderSshPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderSsh) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

func (o ProviderSshPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderSsh) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type ProviderSshNode struct {
	Address string `pulumi:"address"`
	Name    string `pulumi:"name"`
}

// ProviderSshNodeInput is an input type that accepts ProviderSshNodeArgs and ProviderSshNodeOutput values.
// You can construct a concrete instance of `ProviderSshNodeInput` via:
//
//	ProviderSshNodeArgs{...}
type ProviderSshNodeInput interface {
	pulumi.Input

	ToProviderSshNodeOutput() ProviderSshNodeOutput
	ToProviderSshNodeOutputWithContext(context.Context) ProviderSshNodeOutput
}

type ProviderSshNodeArgs struct {
	Address pulumi.StringInput `pulumi:"address"`
	Name    pulumi.StringInput `pulumi:"name"`
}

func (ProviderSshNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderSshNode)(nil)).Elem()
}

func (i ProviderSshNodeArgs) ToProviderSshNodeOutput() ProviderSshNodeOutput {
	return i.ToProviderSshNodeOutputWithContext(context.Background())
}

func (i ProviderSshNodeArgs) ToProviderSshNodeOutputWithContext(ctx context.Context) ProviderSshNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderSshNodeOutput)
}

func (i ProviderSshNodeArgs) ToProviderSshNodePtrOutput() ProviderSshNodePtrOutput {
	return i.ToProviderSshNodePtrOutputWithContext(context.Background())
}

func (i ProviderSshNodeArgs) ToProviderSshNodePtrOutputWithContext(ctx context.Context) ProviderSshNodePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderSshNodeOutput).ToProviderSshNodePtrOutputWithContext(ctx)
}

// ProviderSshNodePtrInput is an input type that accepts ProviderSshNodeArgs, ProviderSshNodePtr and ProviderSshNodePtrOutput values.
// You can construct a concrete instance of `ProviderSshNodePtrInput` via:
//
//	        ProviderSshNodeArgs{...}
//
//	or:
//
//	        nil
type ProviderSshNodePtrInput interface {
	pulumi.Input

	ToProviderSshNodePtrOutput() ProviderSshNodePtrOutput
	ToProviderSshNodePtrOutputWithContext(context.Context) ProviderSshNodePtrOutput
}

type providerSshNodePtrType ProviderSshNodeArgs

func ProviderSshNodePtr(v *ProviderSshNodeArgs) ProviderSshNodePtrInput {
	return (*providerSshNodePtrType)(v)
}

func (*providerSshNodePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderSshNode)(nil)).Elem()
}

func (i *providerSshNodePtrType) ToProviderSshNodePtrOutput() ProviderSshNodePtrOutput {
	return i.ToProviderSshNodePtrOutputWithContext(context.Background())
}

func (i *providerSshNodePtrType) ToProviderSshNodePtrOutputWithContext(ctx context.Context) ProviderSshNodePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderSshNodePtrOutput)
}

type ProviderSshNodeOutput struct{ *pulumi.OutputState }

func (ProviderSshNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderSshNode)(nil)).Elem()
}

func (o ProviderSshNodeOutput) ToProviderSshNodeOutput() ProviderSshNodeOutput {
	return o
}

func (o ProviderSshNodeOutput) ToProviderSshNodeOutputWithContext(ctx context.Context) ProviderSshNodeOutput {
	return o
}

func (o ProviderSshNodeOutput) ToProviderSshNodePtrOutput() ProviderSshNodePtrOutput {
	return o.ToProviderSshNodePtrOutputWithContext(context.Background())
}

func (o ProviderSshNodeOutput) ToProviderSshNodePtrOutputWithContext(ctx context.Context) ProviderSshNodePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProviderSshNode) *ProviderSshNode {
		return &v
	}).(ProviderSshNodePtrOutput)
}

func (o ProviderSshNodeOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v ProviderSshNode) string { return v.Address }).(pulumi.StringOutput)
}

func (o ProviderSshNodeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ProviderSshNode) string { return v.Name }).(pulumi.StringOutput)
}

type ProviderSshNodePtrOutput struct{ *pulumi.OutputState }

func (ProviderSshNodePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderSshNode)(nil)).Elem()
}

func (o ProviderSshNodePtrOutput) ToProviderSshNodePtrOutput() ProviderSshNodePtrOutput {
	return o
}

func (o ProviderSshNodePtrOutput) ToProviderSshNodePtrOutputWithContext(ctx context.Context) ProviderSshNodePtrOutput {
	return o
}

func (o ProviderSshNodePtrOutput) Elem() ProviderSshNodeOutput {
	return o.ApplyT(func(v *ProviderSshNode) ProviderSshNode {
		if v != nil {
			return *v
		}
		var ret ProviderSshNode
		return ret
	}).(ProviderSshNodeOutput)
}

func (o ProviderSshNodePtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderSshNode) *string {
		if v == nil {
			return nil
		}
		return &v.Address
	}).(pulumi.StringPtrOutput)
}

func (o ProviderSshNodePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderSshNode) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type ProviderVirtualEnvironment struct {
	ApiToken *string                        `pulumi:"apiToken"`
	Endpoint *string                        `pulumi:"endpoint"`
	Insecure *bool                          `pulumi:"insecure"`
	Otp      *string                        `pulumi:"otp"`
	Password *string                        `pulumi:"password"`
	Ssh      *ProviderVirtualEnvironmentSsh `pulumi:"ssh"`
	Username *string                        `pulumi:"username"`
}

// ProviderVirtualEnvironmentInput is an input type that accepts ProviderVirtualEnvironmentArgs and ProviderVirtualEnvironmentOutput values.
// You can construct a concrete instance of `ProviderVirtualEnvironmentInput` via:
//
//	ProviderVirtualEnvironmentArgs{...}
type ProviderVirtualEnvironmentInput interface {
	pulumi.Input

	ToProviderVirtualEnvironmentOutput() ProviderVirtualEnvironmentOutput
	ToProviderVirtualEnvironmentOutputWithContext(context.Context) ProviderVirtualEnvironmentOutput
}

type ProviderVirtualEnvironmentArgs struct {
	ApiToken pulumi.StringPtrInput                 `pulumi:"apiToken"`
	Endpoint pulumi.StringPtrInput                 `pulumi:"endpoint"`
	Insecure pulumi.BoolPtrInput                   `pulumi:"insecure"`
	Otp      pulumi.StringPtrInput                 `pulumi:"otp"`
	Password pulumi.StringPtrInput                 `pulumi:"password"`
	Ssh      ProviderVirtualEnvironmentSshPtrInput `pulumi:"ssh"`
	Username pulumi.StringPtrInput                 `pulumi:"username"`
}

func (ProviderVirtualEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderVirtualEnvironment)(nil)).Elem()
}

func (i ProviderVirtualEnvironmentArgs) ToProviderVirtualEnvironmentOutput() ProviderVirtualEnvironmentOutput {
	return i.ToProviderVirtualEnvironmentOutputWithContext(context.Background())
}

func (i ProviderVirtualEnvironmentArgs) ToProviderVirtualEnvironmentOutputWithContext(ctx context.Context) ProviderVirtualEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderVirtualEnvironmentOutput)
}

func (i ProviderVirtualEnvironmentArgs) ToProviderVirtualEnvironmentPtrOutput() ProviderVirtualEnvironmentPtrOutput {
	return i.ToProviderVirtualEnvironmentPtrOutputWithContext(context.Background())
}

func (i ProviderVirtualEnvironmentArgs) ToProviderVirtualEnvironmentPtrOutputWithContext(ctx context.Context) ProviderVirtualEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderVirtualEnvironmentOutput).ToProviderVirtualEnvironmentPtrOutputWithContext(ctx)
}

// ProviderVirtualEnvironmentPtrInput is an input type that accepts ProviderVirtualEnvironmentArgs, ProviderVirtualEnvironmentPtr and ProviderVirtualEnvironmentPtrOutput values.
// You can construct a concrete instance of `ProviderVirtualEnvironmentPtrInput` via:
//
//	        ProviderVirtualEnvironmentArgs{...}
//
//	or:
//
//	        nil
type ProviderVirtualEnvironmentPtrInput interface {
	pulumi.Input

	ToProviderVirtualEnvironmentPtrOutput() ProviderVirtualEnvironmentPtrOutput
	ToProviderVirtualEnvironmentPtrOutputWithContext(context.Context) ProviderVirtualEnvironmentPtrOutput
}

type providerVirtualEnvironmentPtrType ProviderVirtualEnvironmentArgs

func ProviderVirtualEnvironmentPtr(v *ProviderVirtualEnvironmentArgs) ProviderVirtualEnvironmentPtrInput {
	return (*providerVirtualEnvironmentPtrType)(v)
}

func (*providerVirtualEnvironmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderVirtualEnvironment)(nil)).Elem()
}

func (i *providerVirtualEnvironmentPtrType) ToProviderVirtualEnvironmentPtrOutput() ProviderVirtualEnvironmentPtrOutput {
	return i.ToProviderVirtualEnvironmentPtrOutputWithContext(context.Background())
}

func (i *providerVirtualEnvironmentPtrType) ToProviderVirtualEnvironmentPtrOutputWithContext(ctx context.Context) ProviderVirtualEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderVirtualEnvironmentPtrOutput)
}

type ProviderVirtualEnvironmentOutput struct{ *pulumi.OutputState }

func (ProviderVirtualEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderVirtualEnvironment)(nil)).Elem()
}

func (o ProviderVirtualEnvironmentOutput) ToProviderVirtualEnvironmentOutput() ProviderVirtualEnvironmentOutput {
	return o
}

func (o ProviderVirtualEnvironmentOutput) ToProviderVirtualEnvironmentOutputWithContext(ctx context.Context) ProviderVirtualEnvironmentOutput {
	return o
}

func (o ProviderVirtualEnvironmentOutput) ToProviderVirtualEnvironmentPtrOutput() ProviderVirtualEnvironmentPtrOutput {
	return o.ToProviderVirtualEnvironmentPtrOutputWithContext(context.Background())
}

func (o ProviderVirtualEnvironmentOutput) ToProviderVirtualEnvironmentPtrOutputWithContext(ctx context.Context) ProviderVirtualEnvironmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProviderVirtualEnvironment) *ProviderVirtualEnvironment {
		return &v
	}).(ProviderVirtualEnvironmentPtrOutput)
}

func (o ProviderVirtualEnvironmentOutput) ApiToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderVirtualEnvironment) *string { return v.ApiToken }).(pulumi.StringPtrOutput)
}

func (o ProviderVirtualEnvironmentOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderVirtualEnvironment) *string { return v.Endpoint }).(pulumi.StringPtrOutput)
}

func (o ProviderVirtualEnvironmentOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProviderVirtualEnvironment) *bool { return v.Insecure }).(pulumi.BoolPtrOutput)
}

func (o ProviderVirtualEnvironmentOutput) Otp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderVirtualEnvironment) *string { return v.Otp }).(pulumi.StringPtrOutput)
}

func (o ProviderVirtualEnvironmentOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderVirtualEnvironment) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o ProviderVirtualEnvironmentOutput) Ssh() ProviderVirtualEnvironmentSshPtrOutput {
	return o.ApplyT(func(v ProviderVirtualEnvironment) *ProviderVirtualEnvironmentSsh { return v.Ssh }).(ProviderVirtualEnvironmentSshPtrOutput)
}

func (o ProviderVirtualEnvironmentOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderVirtualEnvironment) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ProviderVirtualEnvironmentPtrOutput struct{ *pulumi.OutputState }

func (ProviderVirtualEnvironmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderVirtualEnvironment)(nil)).Elem()
}

func (o ProviderVirtualEnvironmentPtrOutput) ToProviderVirtualEnvironmentPtrOutput() ProviderVirtualEnvironmentPtrOutput {
	return o
}

func (o ProviderVirtualEnvironmentPtrOutput) ToProviderVirtualEnvironmentPtrOutputWithContext(ctx context.Context) ProviderVirtualEnvironmentPtrOutput {
	return o
}

func (o ProviderVirtualEnvironmentPtrOutput) Elem() ProviderVirtualEnvironmentOutput {
	return o.ApplyT(func(v *ProviderVirtualEnvironment) ProviderVirtualEnvironment {
		if v != nil {
			return *v
		}
		var ret ProviderVirtualEnvironment
		return ret
	}).(ProviderVirtualEnvironmentOutput)
}

func (o ProviderVirtualEnvironmentPtrOutput) ApiToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderVirtualEnvironment) *string {
		if v == nil {
			return nil
		}
		return v.ApiToken
	}).(pulumi.StringPtrOutput)
}

func (o ProviderVirtualEnvironmentPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderVirtualEnvironment) *string {
		if v == nil {
			return nil
		}
		return v.Endpoint
	}).(pulumi.StringPtrOutput)
}

func (o ProviderVirtualEnvironmentPtrOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProviderVirtualEnvironment) *bool {
		if v == nil {
			return nil
		}
		return v.Insecure
	}).(pulumi.BoolPtrOutput)
}

func (o ProviderVirtualEnvironmentPtrOutput) Otp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderVirtualEnvironment) *string {
		if v == nil {
			return nil
		}
		return v.Otp
	}).(pulumi.StringPtrOutput)
}

func (o ProviderVirtualEnvironmentPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderVirtualEnvironment) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

func (o ProviderVirtualEnvironmentPtrOutput) Ssh() ProviderVirtualEnvironmentSshPtrOutput {
	return o.ApplyT(func(v *ProviderVirtualEnvironment) *ProviderVirtualEnvironmentSsh {
		if v == nil {
			return nil
		}
		return v.Ssh
	}).(ProviderVirtualEnvironmentSshPtrOutput)
}

func (o ProviderVirtualEnvironmentPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderVirtualEnvironment) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type ProviderVirtualEnvironmentSsh struct {
	Agent       *bool                              `pulumi:"agent"`
	AgentSocket *string                            `pulumi:"agentSocket"`
	Node        *ProviderVirtualEnvironmentSshNode `pulumi:"node"`
	Password    *string                            `pulumi:"password"`
	Username    *string                            `pulumi:"username"`
}

// ProviderVirtualEnvironmentSshInput is an input type that accepts ProviderVirtualEnvironmentSshArgs and ProviderVirtualEnvironmentSshOutput values.
// You can construct a concrete instance of `ProviderVirtualEnvironmentSshInput` via:
//
//	ProviderVirtualEnvironmentSshArgs{...}
type ProviderVirtualEnvironmentSshInput interface {
	pulumi.Input

	ToProviderVirtualEnvironmentSshOutput() ProviderVirtualEnvironmentSshOutput
	ToProviderVirtualEnvironmentSshOutputWithContext(context.Context) ProviderVirtualEnvironmentSshOutput
}

type ProviderVirtualEnvironmentSshArgs struct {
	Agent       pulumi.BoolPtrInput                       `pulumi:"agent"`
	AgentSocket pulumi.StringPtrInput                     `pulumi:"agentSocket"`
	Node        ProviderVirtualEnvironmentSshNodePtrInput `pulumi:"node"`
	Password    pulumi.StringPtrInput                     `pulumi:"password"`
	Username    pulumi.StringPtrInput                     `pulumi:"username"`
}

func (ProviderVirtualEnvironmentSshArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderVirtualEnvironmentSsh)(nil)).Elem()
}

func (i ProviderVirtualEnvironmentSshArgs) ToProviderVirtualEnvironmentSshOutput() ProviderVirtualEnvironmentSshOutput {
	return i.ToProviderVirtualEnvironmentSshOutputWithContext(context.Background())
}

func (i ProviderVirtualEnvironmentSshArgs) ToProviderVirtualEnvironmentSshOutputWithContext(ctx context.Context) ProviderVirtualEnvironmentSshOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderVirtualEnvironmentSshOutput)
}

func (i ProviderVirtualEnvironmentSshArgs) ToProviderVirtualEnvironmentSshPtrOutput() ProviderVirtualEnvironmentSshPtrOutput {
	return i.ToProviderVirtualEnvironmentSshPtrOutputWithContext(context.Background())
}

func (i ProviderVirtualEnvironmentSshArgs) ToProviderVirtualEnvironmentSshPtrOutputWithContext(ctx context.Context) ProviderVirtualEnvironmentSshPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderVirtualEnvironmentSshOutput).ToProviderVirtualEnvironmentSshPtrOutputWithContext(ctx)
}

// ProviderVirtualEnvironmentSshPtrInput is an input type that accepts ProviderVirtualEnvironmentSshArgs, ProviderVirtualEnvironmentSshPtr and ProviderVirtualEnvironmentSshPtrOutput values.
// You can construct a concrete instance of `ProviderVirtualEnvironmentSshPtrInput` via:
//
//	        ProviderVirtualEnvironmentSshArgs{...}
//
//	or:
//
//	        nil
type ProviderVirtualEnvironmentSshPtrInput interface {
	pulumi.Input

	ToProviderVirtualEnvironmentSshPtrOutput() ProviderVirtualEnvironmentSshPtrOutput
	ToProviderVirtualEnvironmentSshPtrOutputWithContext(context.Context) ProviderVirtualEnvironmentSshPtrOutput
}

type providerVirtualEnvironmentSshPtrType ProviderVirtualEnvironmentSshArgs

func ProviderVirtualEnvironmentSshPtr(v *ProviderVirtualEnvironmentSshArgs) ProviderVirtualEnvironmentSshPtrInput {
	return (*providerVirtualEnvironmentSshPtrType)(v)
}

func (*providerVirtualEnvironmentSshPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderVirtualEnvironmentSsh)(nil)).Elem()
}

func (i *providerVirtualEnvironmentSshPtrType) ToProviderVirtualEnvironmentSshPtrOutput() ProviderVirtualEnvironmentSshPtrOutput {
	return i.ToProviderVirtualEnvironmentSshPtrOutputWithContext(context.Background())
}

func (i *providerVirtualEnvironmentSshPtrType) ToProviderVirtualEnvironmentSshPtrOutputWithContext(ctx context.Context) ProviderVirtualEnvironmentSshPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderVirtualEnvironmentSshPtrOutput)
}

type ProviderVirtualEnvironmentSshOutput struct{ *pulumi.OutputState }

func (ProviderVirtualEnvironmentSshOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderVirtualEnvironmentSsh)(nil)).Elem()
}

func (o ProviderVirtualEnvironmentSshOutput) ToProviderVirtualEnvironmentSshOutput() ProviderVirtualEnvironmentSshOutput {
	return o
}

func (o ProviderVirtualEnvironmentSshOutput) ToProviderVirtualEnvironmentSshOutputWithContext(ctx context.Context) ProviderVirtualEnvironmentSshOutput {
	return o
}

func (o ProviderVirtualEnvironmentSshOutput) ToProviderVirtualEnvironmentSshPtrOutput() ProviderVirtualEnvironmentSshPtrOutput {
	return o.ToProviderVirtualEnvironmentSshPtrOutputWithContext(context.Background())
}

func (o ProviderVirtualEnvironmentSshOutput) ToProviderVirtualEnvironmentSshPtrOutputWithContext(ctx context.Context) ProviderVirtualEnvironmentSshPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProviderVirtualEnvironmentSsh) *ProviderVirtualEnvironmentSsh {
		return &v
	}).(ProviderVirtualEnvironmentSshPtrOutput)
}

func (o ProviderVirtualEnvironmentSshOutput) Agent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProviderVirtualEnvironmentSsh) *bool { return v.Agent }).(pulumi.BoolPtrOutput)
}

func (o ProviderVirtualEnvironmentSshOutput) AgentSocket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderVirtualEnvironmentSsh) *string { return v.AgentSocket }).(pulumi.StringPtrOutput)
}

func (o ProviderVirtualEnvironmentSshOutput) Node() ProviderVirtualEnvironmentSshNodePtrOutput {
	return o.ApplyT(func(v ProviderVirtualEnvironmentSsh) *ProviderVirtualEnvironmentSshNode { return v.Node }).(ProviderVirtualEnvironmentSshNodePtrOutput)
}

func (o ProviderVirtualEnvironmentSshOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderVirtualEnvironmentSsh) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o ProviderVirtualEnvironmentSshOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderVirtualEnvironmentSsh) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ProviderVirtualEnvironmentSshPtrOutput struct{ *pulumi.OutputState }

func (ProviderVirtualEnvironmentSshPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderVirtualEnvironmentSsh)(nil)).Elem()
}

func (o ProviderVirtualEnvironmentSshPtrOutput) ToProviderVirtualEnvironmentSshPtrOutput() ProviderVirtualEnvironmentSshPtrOutput {
	return o
}

func (o ProviderVirtualEnvironmentSshPtrOutput) ToProviderVirtualEnvironmentSshPtrOutputWithContext(ctx context.Context) ProviderVirtualEnvironmentSshPtrOutput {
	return o
}

func (o ProviderVirtualEnvironmentSshPtrOutput) Elem() ProviderVirtualEnvironmentSshOutput {
	return o.ApplyT(func(v *ProviderVirtualEnvironmentSsh) ProviderVirtualEnvironmentSsh {
		if v != nil {
			return *v
		}
		var ret ProviderVirtualEnvironmentSsh
		return ret
	}).(ProviderVirtualEnvironmentSshOutput)
}

func (o ProviderVirtualEnvironmentSshPtrOutput) Agent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProviderVirtualEnvironmentSsh) *bool {
		if v == nil {
			return nil
		}
		return v.Agent
	}).(pulumi.BoolPtrOutput)
}

func (o ProviderVirtualEnvironmentSshPtrOutput) AgentSocket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderVirtualEnvironmentSsh) *string {
		if v == nil {
			return nil
		}
		return v.AgentSocket
	}).(pulumi.StringPtrOutput)
}

func (o ProviderVirtualEnvironmentSshPtrOutput) Node() ProviderVirtualEnvironmentSshNodePtrOutput {
	return o.ApplyT(func(v *ProviderVirtualEnvironmentSsh) *ProviderVirtualEnvironmentSshNode {
		if v == nil {
			return nil
		}
		return v.Node
	}).(ProviderVirtualEnvironmentSshNodePtrOutput)
}

func (o ProviderVirtualEnvironmentSshPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderVirtualEnvironmentSsh) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

func (o ProviderVirtualEnvironmentSshPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderVirtualEnvironmentSsh) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type ProviderVirtualEnvironmentSshNode struct {
	Address string `pulumi:"address"`
	Name    string `pulumi:"name"`
}

// ProviderVirtualEnvironmentSshNodeInput is an input type that accepts ProviderVirtualEnvironmentSshNodeArgs and ProviderVirtualEnvironmentSshNodeOutput values.
// You can construct a concrete instance of `ProviderVirtualEnvironmentSshNodeInput` via:
//
//	ProviderVirtualEnvironmentSshNodeArgs{...}
type ProviderVirtualEnvironmentSshNodeInput interface {
	pulumi.Input

	ToProviderVirtualEnvironmentSshNodeOutput() ProviderVirtualEnvironmentSshNodeOutput
	ToProviderVirtualEnvironmentSshNodeOutputWithContext(context.Context) ProviderVirtualEnvironmentSshNodeOutput
}

type ProviderVirtualEnvironmentSshNodeArgs struct {
	Address pulumi.StringInput `pulumi:"address"`
	Name    pulumi.StringInput `pulumi:"name"`
}

func (ProviderVirtualEnvironmentSshNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderVirtualEnvironmentSshNode)(nil)).Elem()
}

func (i ProviderVirtualEnvironmentSshNodeArgs) ToProviderVirtualEnvironmentSshNodeOutput() ProviderVirtualEnvironmentSshNodeOutput {
	return i.ToProviderVirtualEnvironmentSshNodeOutputWithContext(context.Background())
}

func (i ProviderVirtualEnvironmentSshNodeArgs) ToProviderVirtualEnvironmentSshNodeOutputWithContext(ctx context.Context) ProviderVirtualEnvironmentSshNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderVirtualEnvironmentSshNodeOutput)
}

func (i ProviderVirtualEnvironmentSshNodeArgs) ToProviderVirtualEnvironmentSshNodePtrOutput() ProviderVirtualEnvironmentSshNodePtrOutput {
	return i.ToProviderVirtualEnvironmentSshNodePtrOutputWithContext(context.Background())
}

func (i ProviderVirtualEnvironmentSshNodeArgs) ToProviderVirtualEnvironmentSshNodePtrOutputWithContext(ctx context.Context) ProviderVirtualEnvironmentSshNodePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderVirtualEnvironmentSshNodeOutput).ToProviderVirtualEnvironmentSshNodePtrOutputWithContext(ctx)
}

// ProviderVirtualEnvironmentSshNodePtrInput is an input type that accepts ProviderVirtualEnvironmentSshNodeArgs, ProviderVirtualEnvironmentSshNodePtr and ProviderVirtualEnvironmentSshNodePtrOutput values.
// You can construct a concrete instance of `ProviderVirtualEnvironmentSshNodePtrInput` via:
//
//	        ProviderVirtualEnvironmentSshNodeArgs{...}
//
//	or:
//
//	        nil
type ProviderVirtualEnvironmentSshNodePtrInput interface {
	pulumi.Input

	ToProviderVirtualEnvironmentSshNodePtrOutput() ProviderVirtualEnvironmentSshNodePtrOutput
	ToProviderVirtualEnvironmentSshNodePtrOutputWithContext(context.Context) ProviderVirtualEnvironmentSshNodePtrOutput
}

type providerVirtualEnvironmentSshNodePtrType ProviderVirtualEnvironmentSshNodeArgs

func ProviderVirtualEnvironmentSshNodePtr(v *ProviderVirtualEnvironmentSshNodeArgs) ProviderVirtualEnvironmentSshNodePtrInput {
	return (*providerVirtualEnvironmentSshNodePtrType)(v)
}

func (*providerVirtualEnvironmentSshNodePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderVirtualEnvironmentSshNode)(nil)).Elem()
}

func (i *providerVirtualEnvironmentSshNodePtrType) ToProviderVirtualEnvironmentSshNodePtrOutput() ProviderVirtualEnvironmentSshNodePtrOutput {
	return i.ToProviderVirtualEnvironmentSshNodePtrOutputWithContext(context.Background())
}

func (i *providerVirtualEnvironmentSshNodePtrType) ToProviderVirtualEnvironmentSshNodePtrOutputWithContext(ctx context.Context) ProviderVirtualEnvironmentSshNodePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderVirtualEnvironmentSshNodePtrOutput)
}

type ProviderVirtualEnvironmentSshNodeOutput struct{ *pulumi.OutputState }

func (ProviderVirtualEnvironmentSshNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderVirtualEnvironmentSshNode)(nil)).Elem()
}

func (o ProviderVirtualEnvironmentSshNodeOutput) ToProviderVirtualEnvironmentSshNodeOutput() ProviderVirtualEnvironmentSshNodeOutput {
	return o
}

func (o ProviderVirtualEnvironmentSshNodeOutput) ToProviderVirtualEnvironmentSshNodeOutputWithContext(ctx context.Context) ProviderVirtualEnvironmentSshNodeOutput {
	return o
}

func (o ProviderVirtualEnvironmentSshNodeOutput) ToProviderVirtualEnvironmentSshNodePtrOutput() ProviderVirtualEnvironmentSshNodePtrOutput {
	return o.ToProviderVirtualEnvironmentSshNodePtrOutputWithContext(context.Background())
}

func (o ProviderVirtualEnvironmentSshNodeOutput) ToProviderVirtualEnvironmentSshNodePtrOutputWithContext(ctx context.Context) ProviderVirtualEnvironmentSshNodePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProviderVirtualEnvironmentSshNode) *ProviderVirtualEnvironmentSshNode {
		return &v
	}).(ProviderVirtualEnvironmentSshNodePtrOutput)
}

func (o ProviderVirtualEnvironmentSshNodeOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v ProviderVirtualEnvironmentSshNode) string { return v.Address }).(pulumi.StringOutput)
}

func (o ProviderVirtualEnvironmentSshNodeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ProviderVirtualEnvironmentSshNode) string { return v.Name }).(pulumi.StringOutput)
}

type ProviderVirtualEnvironmentSshNodePtrOutput struct{ *pulumi.OutputState }

func (ProviderVirtualEnvironmentSshNodePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderVirtualEnvironmentSshNode)(nil)).Elem()
}

func (o ProviderVirtualEnvironmentSshNodePtrOutput) ToProviderVirtualEnvironmentSshNodePtrOutput() ProviderVirtualEnvironmentSshNodePtrOutput {
	return o
}

func (o ProviderVirtualEnvironmentSshNodePtrOutput) ToProviderVirtualEnvironmentSshNodePtrOutputWithContext(ctx context.Context) ProviderVirtualEnvironmentSshNodePtrOutput {
	return o
}

func (o ProviderVirtualEnvironmentSshNodePtrOutput) Elem() ProviderVirtualEnvironmentSshNodeOutput {
	return o.ApplyT(func(v *ProviderVirtualEnvironmentSshNode) ProviderVirtualEnvironmentSshNode {
		if v != nil {
			return *v
		}
		var ret ProviderVirtualEnvironmentSshNode
		return ret
	}).(ProviderVirtualEnvironmentSshNodeOutput)
}

func (o ProviderVirtualEnvironmentSshNodePtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderVirtualEnvironmentSshNode) *string {
		if v == nil {
			return nil
		}
		return &v.Address
	}).(pulumi.StringPtrOutput)
}

func (o ProviderVirtualEnvironmentSshNodePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderVirtualEnvironmentSshNode) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type GetHostsEntry struct {
	Address   string   `pulumi:"address"`
	Hostnames []string `pulumi:"hostnames"`
}

// GetHostsEntryInput is an input type that accepts GetHostsEntryArgs and GetHostsEntryOutput values.
// You can construct a concrete instance of `GetHostsEntryInput` via:
//
//	GetHostsEntryArgs{...}
type GetHostsEntryInput interface {
	pulumi.Input

	ToGetHostsEntryOutput() GetHostsEntryOutput
	ToGetHostsEntryOutputWithContext(context.Context) GetHostsEntryOutput
}

type GetHostsEntryArgs struct {
	Address   pulumi.StringInput      `pulumi:"address"`
	Hostnames pulumi.StringArrayInput `pulumi:"hostnames"`
}

func (GetHostsEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHostsEntry)(nil)).Elem()
}

func (i GetHostsEntryArgs) ToGetHostsEntryOutput() GetHostsEntryOutput {
	return i.ToGetHostsEntryOutputWithContext(context.Background())
}

func (i GetHostsEntryArgs) ToGetHostsEntryOutputWithContext(ctx context.Context) GetHostsEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHostsEntryOutput)
}

// GetHostsEntryArrayInput is an input type that accepts GetHostsEntryArray and GetHostsEntryArrayOutput values.
// You can construct a concrete instance of `GetHostsEntryArrayInput` via:
//
//	GetHostsEntryArray{ GetHostsEntryArgs{...} }
type GetHostsEntryArrayInput interface {
	pulumi.Input

	ToGetHostsEntryArrayOutput() GetHostsEntryArrayOutput
	ToGetHostsEntryArrayOutputWithContext(context.Context) GetHostsEntryArrayOutput
}

type GetHostsEntryArray []GetHostsEntryInput

func (GetHostsEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHostsEntry)(nil)).Elem()
}

func (i GetHostsEntryArray) ToGetHostsEntryArrayOutput() GetHostsEntryArrayOutput {
	return i.ToGetHostsEntryArrayOutputWithContext(context.Background())
}

func (i GetHostsEntryArray) ToGetHostsEntryArrayOutputWithContext(ctx context.Context) GetHostsEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHostsEntryArrayOutput)
}

type GetHostsEntryOutput struct{ *pulumi.OutputState }

func (GetHostsEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHostsEntry)(nil)).Elem()
}

func (o GetHostsEntryOutput) ToGetHostsEntryOutput() GetHostsEntryOutput {
	return o
}

func (o GetHostsEntryOutput) ToGetHostsEntryOutputWithContext(ctx context.Context) GetHostsEntryOutput {
	return o
}

func (o GetHostsEntryOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostsEntry) string { return v.Address }).(pulumi.StringOutput)
}

func (o GetHostsEntryOutput) Hostnames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetHostsEntry) []string { return v.Hostnames }).(pulumi.StringArrayOutput)
}

type GetHostsEntryArrayOutput struct{ *pulumi.OutputState }

func (GetHostsEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHostsEntry)(nil)).Elem()
}

func (o GetHostsEntryArrayOutput) ToGetHostsEntryArrayOutput() GetHostsEntryArrayOutput {
	return o
}

func (o GetHostsEntryArrayOutput) ToGetHostsEntryArrayOutputWithContext(ctx context.Context) GetHostsEntryArrayOutput {
	return o
}

func (o GetHostsEntryArrayOutput) Index(i pulumi.IntInput) GetHostsEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHostsEntry {
		return vs[0].([]GetHostsEntry)[vs[1].(int)]
	}).(GetHostsEntryOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*HostsEntryInput)(nil)).Elem(), HostsEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostsEntryArrayInput)(nil)).Elem(), HostsEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderSshInput)(nil)).Elem(), ProviderSshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderSshPtrInput)(nil)).Elem(), ProviderSshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderSshNodeInput)(nil)).Elem(), ProviderSshNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderSshNodePtrInput)(nil)).Elem(), ProviderSshNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderVirtualEnvironmentInput)(nil)).Elem(), ProviderVirtualEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderVirtualEnvironmentPtrInput)(nil)).Elem(), ProviderVirtualEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderVirtualEnvironmentSshInput)(nil)).Elem(), ProviderVirtualEnvironmentSshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderVirtualEnvironmentSshPtrInput)(nil)).Elem(), ProviderVirtualEnvironmentSshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderVirtualEnvironmentSshNodeInput)(nil)).Elem(), ProviderVirtualEnvironmentSshNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderVirtualEnvironmentSshNodePtrInput)(nil)).Elem(), ProviderVirtualEnvironmentSshNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHostsEntryInput)(nil)).Elem(), GetHostsEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHostsEntryArrayInput)(nil)).Elem(), GetHostsEntryArray{})
	pulumi.RegisterOutputType(HostsEntryOutput{})
	pulumi.RegisterOutputType(HostsEntryArrayOutput{})
	pulumi.RegisterOutputType(ProviderSshOutput{})
	pulumi.RegisterOutputType(ProviderSshPtrOutput{})
	pulumi.RegisterOutputType(ProviderSshNodeOutput{})
	pulumi.RegisterOutputType(ProviderSshNodePtrOutput{})
	pulumi.RegisterOutputType(ProviderVirtualEnvironmentOutput{})
	pulumi.RegisterOutputType(ProviderVirtualEnvironmentPtrOutput{})
	pulumi.RegisterOutputType(ProviderVirtualEnvironmentSshOutput{})
	pulumi.RegisterOutputType(ProviderVirtualEnvironmentSshPtrOutput{})
	pulumi.RegisterOutputType(ProviderVirtualEnvironmentSshNodeOutput{})
	pulumi.RegisterOutputType(ProviderVirtualEnvironmentSshNodePtrOutput{})
	pulumi.RegisterOutputType(GetHostsEntryOutput{})
	pulumi.RegisterOutputType(GetHostsEntryArrayOutput{})
}
