// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ProxmoxVE.VM.Inputs
{

    public sealed class VirtualMachineNumaGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The CPU cores to assign to the NUMA node (format is `0-7;16-31`).
        /// </summary>
        [Input("cpus", required: true)]
        public Input<string> Cpus { get; set; } = null!;

        /// <summary>
        /// The NUMA device name for Proxmox, in form
        /// of `numaX` where `X` is a sequential number from 0 to 7.
        /// </summary>
        [Input("device", required: true)]
        public Input<string> Device { get; set; } = null!;

        /// <summary>
        /// The NUMA host nodes.
        /// </summary>
        [Input("hostnodes")]
        public Input<string>? Hostnodes { get; set; }

        /// <summary>
        /// The memory in megabytes to assign to the NUMA node.
        /// </summary>
        [Input("memory", required: true)]
        public Input<int> Memory { get; set; } = null!;

        /// <summary>
        /// The NUMA policy (defaults to `preferred`).
        /// </summary>
        [Input("policy")]
        public Input<string>? Policy { get; set; }

        public VirtualMachineNumaGetArgs()
        {
        }
        public static new VirtualMachineNumaGetArgs Empty => new VirtualMachineNumaGetArgs();
    }
}
