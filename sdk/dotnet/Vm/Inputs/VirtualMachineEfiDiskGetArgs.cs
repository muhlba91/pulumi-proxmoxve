// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ProxmoxVE.VM.Inputs
{

    public sealed class VirtualMachineEfiDiskGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The identifier for the datastore to create
        /// the disk in (defaults to `local-lvm`).
        /// </summary>
        [Input("datastoreId")]
        public Input<string>? DatastoreId { get; set; }

        /// <summary>
        /// The file format (defaults to `raw`).
        /// </summary>
        [Input("fileFormat")]
        public Input<string>? FileFormat { get; set; }

        /// <summary>
        /// Use am EFI vars template with
        /// distribution-specific and Microsoft Standard keys enrolled, if used with
        /// EFI type=`4m`. Ignored for VMs with cpu.architecture=`aarch64` (defaults
        /// to `false`).
        /// </summary>
        [Input("preEnrolledKeys")]
        public Input<bool>? PreEnrolledKeys { get; set; }

        /// <summary>
        /// Size and type of the OVMF EFI disk. `4m` is newer and
        /// recommended, and required for Secure Boot. For backwards compatibility
        /// use `2m`. Ignored for VMs with cpu.architecture=`aarch64` (defaults
        /// to `2m`).
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public VirtualMachineEfiDiskGetArgs()
        {
        }
        public static new VirtualMachineEfiDiskGetArgs Empty => new VirtualMachineEfiDiskGetArgs();
    }
}
