// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ProxmoxVE.VM.Outputs
{

    [OutputType]
    public sealed class VirtualMachineEfiDisk
    {
        /// <summary>
        /// The identifier for the datastore to create
        /// the disk in (defaults to `local-lvm`).
        /// </summary>
        public readonly string? DatastoreId;
        /// <summary>
        /// The file format (defaults to `raw`).
        /// </summary>
        public readonly string? FileFormat;
        /// <summary>
        /// Use am EFI vars template with
        /// distribution-specific and Microsoft Standard keys enrolled, if used with
        /// EFI type=`4m`. Ignored for VMs with cpu.architecture=`aarch64` (defaults
        /// to `false`).
        /// </summary>
        public readonly bool? PreEnrolledKeys;
        /// <summary>
        /// Size and type of the OVMF EFI disk. `4m` is newer and
        /// recommended, and required for Secure Boot. For backwards compatibility
        /// use `2m`. Ignored for VMs with cpu.architecture=`aarch64` (defaults
        /// to `2m`).
        /// </summary>
        public readonly string? Type;

        [OutputConstructor]
        private VirtualMachineEfiDisk(
            string? datastoreId,

            string? fileFormat,

            bool? preEnrolledKeys,

            string? type)
        {
            DatastoreId = datastoreId;
            FileFormat = fileFormat;
            PreEnrolledKeys = preEnrolledKeys;
            Type = type;
        }
    }
}
