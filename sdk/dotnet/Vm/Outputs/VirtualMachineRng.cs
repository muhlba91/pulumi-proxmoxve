// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ProxmoxVE.VM.Outputs
{

    [OutputType]
    public sealed class VirtualMachineRng
    {
        /// <summary>
        /// Maximum bytes of entropy allowed to get injected into the guest every `period` milliseconds (defaults to `1024`). Prefer a lower value when using `/dev/random` as source.
        /// </summary>
        public readonly int? MaxBytes;
        /// <summary>
        /// Every `period` milliseconds the entropy-injection quota is reset, allowing the guest to retrieve another `max_bytes` of entropy (defaults to `1000`).
        /// </summary>
        public readonly int? Period;
        /// <summary>
        /// The file on the host to gather entropy from. In most cases, `/dev/urandom` should be preferred over `/dev/random` to avoid entropy-starvation issues on the host.
        /// </summary>
        public readonly string Source;

        [OutputConstructor]
        private VirtualMachineRng(
            int? maxBytes,

            int? period,

            string source)
        {
            MaxBytes = maxBytes;
            Period = period;
            Source = source;
        }
    }
}
