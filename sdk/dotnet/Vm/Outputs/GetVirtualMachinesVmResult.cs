// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ProxmoxVE.VM.Outputs
{

    [OutputType]
    public sealed class GetVirtualMachinesVmResult
    {
        /// <summary>
        /// The virtual machine name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The node name. All cluster nodes will be queried in case this is omitted
        /// </summary>
        public readonly string NodeName;
        /// <summary>
        /// Status of the VM
        /// </summary>
        public readonly string? Status;
        /// <summary>
        /// A list of tags to filter the VMs. The VM must have all
        /// the tags to be included in the result.
        /// </summary>
        public readonly ImmutableArray<string> Tags;
        /// <summary>
        /// Is VM a template (true) or a regular VM (false)
        /// </summary>
        public readonly bool? Template;
        /// <summary>
        /// The VM identifier.
        /// </summary>
        public readonly int VmId;

        [OutputConstructor]
        private GetVirtualMachinesVmResult(
            string name,

            string nodeName,

            string? status,

            ImmutableArray<string> tags,

            bool? template,

            int vmId)
        {
            Name = name;
            NodeName = nodeName;
            Status = status;
            Tags = tags;
            Template = template;
            VmId = vmId;
        }
    }
}
