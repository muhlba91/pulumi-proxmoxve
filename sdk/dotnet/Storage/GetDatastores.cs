// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ProxmoxVE.Storage
{
    public static class GetDatastores
    {
        public static Task<GetDatastoresResult> InvokeAsync(GetDatastoresArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDatastoresResult>("proxmoxve:Storage/getDatastores:getDatastores", args ?? new GetDatastoresArgs(), options.WithVersion());
    }


    public sealed class GetDatastoresArgs : Pulumi.InvokeArgs
    {
        [Input("nodeName", required: true)]
        public string NodeName { get; set; } = null!;

        public GetDatastoresArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetDatastoresResult
    {
        public readonly ImmutableArray<bool> Actives;
        public readonly ImmutableArray<ImmutableArray<string>> ContentTypes;
        public readonly ImmutableArray<string> DatastoreIds;
        public readonly ImmutableArray<bool> Enableds;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string NodeName;
        public readonly ImmutableArray<bool> Shareds;
        public readonly ImmutableArray<int> SpaceAvailables;
        public readonly ImmutableArray<int> SpaceTotals;
        public readonly ImmutableArray<int> SpaceUseds;
        public readonly ImmutableArray<int> Types;

        [OutputConstructor]
        private GetDatastoresResult(
            ImmutableArray<bool> actives,

            ImmutableArray<ImmutableArray<string>> contentTypes,

            ImmutableArray<string> datastoreIds,

            ImmutableArray<bool> enableds,

            string id,

            string nodeName,

            ImmutableArray<bool> shareds,

            ImmutableArray<int> spaceAvailables,

            ImmutableArray<int> spaceTotals,

            ImmutableArray<int> spaceUseds,

            ImmutableArray<int> types)
        {
            Actives = actives;
            ContentTypes = contentTypes;
            DatastoreIds = datastoreIds;
            Enableds = enableds;
            Id = id;
            NodeName = nodeName;
            Shareds = shareds;
            SpaceAvailables = spaceAvailables;
            SpaceTotals = spaceTotals;
            SpaceUseds = spaceUseds;
            Types = types;
        }
    }
}
