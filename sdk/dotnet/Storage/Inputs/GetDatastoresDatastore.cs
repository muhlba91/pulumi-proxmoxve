// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ProxmoxVE.Storage.Inputs
{

    public sealed class GetDatastoresDatastoreArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Whether the store is active.
        /// </summary>
        [Input("active")]
        public bool? Active { get; set; }

        [Input("contentTypes", required: true)]
        private List<string>? _contentTypes;

        /// <summary>
        /// Allowed store content types.
        /// </summary>
        public List<string> ContentTypes
        {
            get => _contentTypes ?? (_contentTypes = new List<string>());
            set => _contentTypes = value;
        }

        /// <summary>
        /// Whether the store is enabled.
        /// </summary>
        [Input("enabled")]
        public bool? Enabled { get; set; }

        /// <summary>
        /// The ID of the store.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        /// <summary>
        /// The name of the node the store is on.
        /// </summary>
        [Input("nodeName", required: true)]
        public string NodeName { get; set; } = null!;

        /// <summary>
        /// Shared flag from store configuration.
        /// </summary>
        [Input("shared")]
        public bool? Shared { get; set; }

        /// <summary>
        /// Available store space in bytes.
        /// </summary>
        [Input("spaceAvailable")]
        public int? SpaceAvailable { get; set; }

        /// <summary>
        /// Total store space in bytes.
        /// </summary>
        [Input("spaceTotal")]
        public int? SpaceTotal { get; set; }

        /// <summary>
        /// Used store space in bytes.
        /// </summary>
        [Input("spaceUsed")]
        public int? SpaceUsed { get; set; }

        /// <summary>
        /// Used fraction (used/total).
        /// </summary>
        [Input("spaceUsedFraction")]
        public double? SpaceUsedFraction { get; set; }

        /// <summary>
        /// Store type.
        /// </summary>
        [Input("type", required: true)]
        public string Type { get; set; } = null!;

        public GetDatastoresDatastoreArgs()
        {
        }
        public static new GetDatastoresDatastoreArgs Empty => new GetDatastoresDatastoreArgs();
    }
}
