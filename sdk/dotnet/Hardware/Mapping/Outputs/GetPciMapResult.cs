// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ProxmoxVE.Hardware.Mapping.Outputs
{

    [OutputType]
    public sealed class GetPciMapResult
    {
        /// <summary>
        /// The comment of the mapped PCI device.
        /// </summary>
        public readonly string Comment;
        /// <summary>
        /// The ID attribute of the map.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The IOMMU group attribute of the map.
        /// </summary>
        public readonly int IommuGroup;
        /// <summary>
        /// The node name attribute of the map.
        /// </summary>
        public readonly string Node;
        /// <summary>
        /// The path attribute of the map.
        /// </summary>
        public readonly string Path;
        /// <summary>
        /// The subsystem ID attribute of the map.Not mandatory for the Proxmox VE API call, but causes a PCI hardware mapping to be incomplete when not set.
        /// </summary>
        public readonly string SubsystemId;

        [OutputConstructor]
        private GetPciMapResult(
            string comment,

            string id,

            int iommuGroup,

            string node,

            string path,

            string subsystemId)
        {
            Comment = comment;
            Id = id;
            IommuGroup = iommuGroup;
            Node = node;
            Path = path;
            SubsystemId = subsystemId;
        }
    }
}
