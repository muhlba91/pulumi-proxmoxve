// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ProxmoxVE.Hardware.Mapping.Inputs
{

    public sealed class PciMapGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The comment of the mapped PCI device.
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// The ID of the map.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        /// <summary>
        /// The IOMMU group of the map. Not mandatory for the Proxmox VE API call, but causes a PCI hardware mapping to be incomplete when not set
        /// </summary>
        [Input("iommuGroup")]
        public Input<int>? IommuGroup { get; set; }

        /// <summary>
        /// The node name of the map.
        /// </summary>
        [Input("node", required: true)]
        public Input<string> Node { get; set; } = null!;

        /// <summary>
        /// The path of the map.
        /// </summary>
        [Input("path", required: true)]
        public Input<string> Path { get; set; } = null!;

        /// <summary>
        /// The subsystem ID group of the map. Not mandatory for the Proxmox VE API call, but causes a PCI hardware mapping to be incomplete when not set
        /// </summary>
        [Input("subsystemId")]
        public Input<string>? SubsystemId { get; set; }

        public PciMapGetArgs()
        {
        }
        public static new PciMapGetArgs Empty => new PciMapGetArgs();
    }
}
