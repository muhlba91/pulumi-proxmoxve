// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ProxmoxVE
{
    public static class GetTime
    {
        public static Task<GetTimeResult> InvokeAsync(GetTimeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTimeResult>("proxmoxve:index/getTime:getTime", args ?? new GetTimeArgs(), options.WithDefaults());

        public static Output<GetTimeResult> Invoke(GetTimeInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTimeResult>("proxmoxve:index/getTime:getTime", args ?? new GetTimeInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTimeArgs : global::Pulumi.InvokeArgs
    {
        [Input("nodeName", required: true)]
        public string NodeName { get; set; } = null!;

        public GetTimeArgs()
        {
        }
        public static new GetTimeArgs Empty => new GetTimeArgs();
    }

    public sealed class GetTimeInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("nodeName", required: true)]
        public Input<string> NodeName { get; set; } = null!;

        public GetTimeInvokeArgs()
        {
        }
        public static new GetTimeInvokeArgs Empty => new GetTimeInvokeArgs();
    }


    [OutputType]
    public sealed class GetTimeResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string LocalTime;
        public readonly string NodeName;
        public readonly string TimeZone;
        public readonly string UtcTime;

        [OutputConstructor]
        private GetTimeResult(
            string id,

            string localTime,

            string nodeName,

            string timeZone,

            string utcTime)
        {
            Id = id;
            LocalTime = localTime;
            NodeName = nodeName;
            TimeZone = timeZone;
            UtcTime = utcTime;
        }
    }
}
