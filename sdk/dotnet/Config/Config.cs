// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Immutable;

namespace Pulumi.ProxmoxVE
{
    public static class Config
    {
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "IDE1006", Justification = 
        "Double underscore prefix used to avoid conflicts with variable names.")]
        private sealed class __Value<T>
        {
            private readonly Func<T> _getter;
            private T _value = default!;
            private bool _set;

            public __Value(Func<T> getter)
            {
                _getter = getter;
            }

            public T Get() => _set ? _value : _getter();

            public void Set(T value)
            {
                _value = value;
                _set = true;
            }
        }

        private static readonly global::Pulumi.Config __config = new global::Pulumi.Config("proxmoxve");

        private static readonly __Value<string?> _apiToken = new __Value<string?>(() => __config.Get("apiToken"));
        /// <summary>
        /// The API token for the Proxmox VE API.
        /// </summary>
        public static string? ApiToken
        {
            get => _apiToken.Get();
            set => _apiToken.Set(value);
        }

        private static readonly __Value<string?> _endpoint = new __Value<string?>(() => __config.Get("endpoint"));
        /// <summary>
        /// The endpoint for the Proxmox VE API.
        /// </summary>
        public static string? Endpoint
        {
            get => _endpoint.Get();
            set => _endpoint.Set(value);
        }

        private static readonly __Value<bool?> _insecure = new __Value<bool?>(() => __config.GetBoolean("insecure"));
        /// <summary>
        /// Whether to skip the TLS verification step.
        /// </summary>
        public static bool? Insecure
        {
            get => _insecure.Get();
            set => _insecure.Set(value);
        }

        private static readonly __Value<string?> _minTls = new __Value<string?>(() => __config.Get("minTls"));
        /// <summary>
        /// The minimum required TLS version for API calls.Supported values: `1.0|1.1|1.2|1.3`. Defaults to `1.3`.
        /// </summary>
        public static string? MinTls
        {
            get => _minTls.Get();
            set => _minTls.Set(value);
        }

        private static readonly __Value<string?> _otp = new __Value<string?>(() => __config.Get("otp"));
        /// <summary>
        /// The one-time password for the Proxmox VE API.
        /// </summary>
        public static string? Otp
        {
            get => _otp.Get();
            set => _otp.Set(value);
        }

        private static readonly __Value<string?> _password = new __Value<string?>(() => __config.Get("password"));
        /// <summary>
        /// The password for the Proxmox VE API.
        /// </summary>
        public static string? Password
        {
            get => _password.Get();
            set => _password.Set(value);
        }

        private static readonly __Value<Pulumi.ProxmoxVE.Config.Types.Ssh?> _ssh = new __Value<Pulumi.ProxmoxVE.Config.Types.Ssh?>(() => __config.GetObject<Pulumi.ProxmoxVE.Config.Types.Ssh>("ssh"));
        /// <summary>
        /// The SSH configuration for the Proxmox nodes.
        /// </summary>
        public static Pulumi.ProxmoxVE.Config.Types.Ssh? Ssh
        {
            get => _ssh.Get();
            set => _ssh.Set(value);
        }

        private static readonly __Value<string?> _tmpDir = new __Value<string?>(() => __config.Get("tmpDir"));
        /// <summary>
        /// The alternative temporary directory.
        /// </summary>
        public static string? TmpDir
        {
            get => _tmpDir.Get();
            set => _tmpDir.Set(value);
        }

        private static readonly __Value<string?> _username = new __Value<string?>(() => __config.Get("username"));
        /// <summary>
        /// The username for the Proxmox VE API.
        /// </summary>
        public static string? Username
        {
            get => _username.Get();
            set => _username.Set(value);
        }

        public static class Types
        {

             public class Ssh
             {
            /// <summary>
            /// Whether to use the SSH agent for authentication. Defaults to `false`.
            /// </summary>
                public bool? Agent { get; set; }
            /// <summary>
            /// The path to the SSH agent socket. Defaults to the value of the `SSH_AUTH_SOCK` environment variable.
            /// </summary>
                public string? AgentSocket { get; set; } = null!;
            /// <summary>
            /// Overrides for SSH connection configuration for a Proxmox VE node.
            /// </summary>
                public ImmutableArray<Pulumi.ProxmoxVE.Config.Types.SshNode> Nodes { get; set; }
            /// <summary>
            /// The password used for the SSH connection. Defaults to the value of the `password` field of the `provider` block.
            /// </summary>
                public string? Password { get; set; } = null!;
            /// <summary>
            /// The password for the SOCKS5 proxy server. Defaults to the value of the `PROXMOX_VE_SSH_SOCKS5_PASSWORD` environment variable.
            /// </summary>
                public string? Socks5Password { get; set; } = null!;
            /// <summary>
            /// The address:port of the SOCKS5 proxy server. Defaults to the value of the `PROXMOX_VE_SSH_SOCKS5_SERVER` environment variable.
            /// </summary>
                public string? Socks5Server { get; set; } = null!;
            /// <summary>
            /// The username for the SOCKS5 proxy server. Defaults to the value of the `PROXMOX_VE_SSH_SOCKS5_USERNAME` environment variable.
            /// </summary>
                public string? Socks5Username { get; set; } = null!;
            /// <summary>
            /// The username used for the SSH connection. Defaults to the value of the `username` field of the `provider` block.
            /// </summary>
                public string? Username { get; set; } = null!;
            }

             public class SshNode
             {
            /// <summary>
            /// The address of the Proxmox VE node.
            /// </summary>
                public string Address { get; set; }
            /// <summary>
            /// The name of the Proxmox VE node.
            /// </summary>
                public string Name { get; set; }
            /// <summary>
            /// The port of the Proxmox VE node.
            /// </summary>
                public int? Port { get; set; }
            }
        }
    }
}
