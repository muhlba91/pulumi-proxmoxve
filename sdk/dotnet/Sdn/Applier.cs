// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ProxmoxVE.Sdn
{
    /// <summary>
    /// **EXPERIMENTAL** Triggers Proxmox's SDN **Apply** (equivalent to `PUT /cluster/sdn`).Intended to be used with `replace_triggered_by` so it runs after SDN objects change.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using ProxmoxVE = Pulumi.ProxmoxVE;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var finalizer = new ProxmoxVE.Sdn.Applier("finalizer");
    /// 
    ///     // SDN Zone (Simple) - First zone for applier demonstration
    ///     var exampleZone1 = new ProxmoxVE.SDNZone.Simple("exampleZone1", new()
    ///     {
    ///         ZoneId = "zone1",
    ///         Nodes = new[]
    ///         {
    ///             "pve",
    ///         },
    ///         Mtu = 1500,
    ///         Dns = "1.1.1.1",
    ///         DnsZone = "example.com",
    ///         Ipam = "pve",
    ///         ReverseDns = "1.1.1.1",
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             finalizer,
    ///         },
    ///     });
    /// 
    ///     // SDN Zone (Simple) - Second zone for applier demonstration
    ///     var exampleZone2 = new ProxmoxVE.SDNZone.Simple("exampleZone2", new()
    ///     {
    ///         ZoneId = "zone2",
    ///         Nodes = new[]
    ///         {
    ///             "pve",
    ///         },
    ///         Mtu = 1500,
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             finalizer,
    ///         },
    ///     });
    /// 
    ///     // SDN Applier - Applies SDN configuration changes
    ///     var exampleApplier = new ProxmoxVE.Sdn.Applier("exampleApplier", new()
    ///     {
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             exampleZone1,
    ///             exampleZone2,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [ProxmoxVEResourceType("proxmoxve:Sdn/applier:Applier")]
    public partial class Applier : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Create a Applier resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Applier(string name, ApplierArgs? args = null, CustomResourceOptions? options = null)
            : base("proxmoxve:Sdn/applier:Applier", name, args ?? new ApplierArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Applier(string name, Input<string> id, ApplierState? state = null, CustomResourceOptions? options = null)
            : base("proxmoxve:Sdn/applier:Applier", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/muhlba91/pulumi-proxmoxve",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Applier resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Applier Get(string name, Input<string> id, ApplierState? state = null, CustomResourceOptions? options = null)
        {
            return new Applier(name, id, state, options);
        }
    }

    public sealed class ApplierArgs : global::Pulumi.ResourceArgs
    {
        public ApplierArgs()
        {
        }
        public static new ApplierArgs Empty => new ApplierArgs();
    }

    public sealed class ApplierState : global::Pulumi.ResourceArgs
    {
        public ApplierState()
        {
        }
        public static new ApplierState Empty => new ApplierState();
    }
}
