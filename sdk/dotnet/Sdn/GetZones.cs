// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ProxmoxVE.Sdn
{
    public static class GetZones
    {
        /// <summary>
        /// Retrieves information about all SDN Zones in Proxmox. This data source can optionally filter zones by type.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using ProxmoxVE = Pulumi.ProxmoxVE;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var all = ProxmoxVE.Sdn.GetZones.Invoke();
        /// 
        ///     var evpnOnly = ProxmoxVE.Sdn.GetZones.Invoke(new()
        ///     {
        ///         Type = "evpn",
        ///     });
        /// 
        ///     var simpleOnly = ProxmoxVE.Sdn.GetZones.Invoke(new()
        ///     {
        ///         Type = "simple",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["dataProxmoxVirtualEnvironmentSdnZonesAll"] = 
        ///         {
        ///             { "zones", all.Apply(getZonesResult =&gt; getZonesResult.Zones) },
        ///         },
        ///         ["dataProxmoxVirtualEnvironmentSdnZonesFiltered"] = 
        ///         {
        ///             { "evpn_zones", evpnOnly.Apply(getZonesResult =&gt; getZonesResult.Zones) },
        ///             { "simple_zones", simpleOnly.Apply(getZonesResult =&gt; getZonesResult.Zones) },
        ///         },
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetZonesResult> InvokeAsync(GetZonesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetZonesResult>("proxmoxve:Sdn/getZones:getZones", args ?? new GetZonesArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves information about all SDN Zones in Proxmox. This data source can optionally filter zones by type.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using ProxmoxVE = Pulumi.ProxmoxVE;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var all = ProxmoxVE.Sdn.GetZones.Invoke();
        /// 
        ///     var evpnOnly = ProxmoxVE.Sdn.GetZones.Invoke(new()
        ///     {
        ///         Type = "evpn",
        ///     });
        /// 
        ///     var simpleOnly = ProxmoxVE.Sdn.GetZones.Invoke(new()
        ///     {
        ///         Type = "simple",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["dataProxmoxVirtualEnvironmentSdnZonesAll"] = 
        ///         {
        ///             { "zones", all.Apply(getZonesResult =&gt; getZonesResult.Zones) },
        ///         },
        ///         ["dataProxmoxVirtualEnvironmentSdnZonesFiltered"] = 
        ///         {
        ///             { "evpn_zones", evpnOnly.Apply(getZonesResult =&gt; getZonesResult.Zones) },
        ///             { "simple_zones", simpleOnly.Apply(getZonesResult =&gt; getZonesResult.Zones) },
        ///         },
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetZonesResult> Invoke(GetZonesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetZonesResult>("proxmoxve:Sdn/getZones:getZones", args ?? new GetZonesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves information about all SDN Zones in Proxmox. This data source can optionally filter zones by type.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using ProxmoxVE = Pulumi.ProxmoxVE;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var all = ProxmoxVE.Sdn.GetZones.Invoke();
        /// 
        ///     var evpnOnly = ProxmoxVE.Sdn.GetZones.Invoke(new()
        ///     {
        ///         Type = "evpn",
        ///     });
        /// 
        ///     var simpleOnly = ProxmoxVE.Sdn.GetZones.Invoke(new()
        ///     {
        ///         Type = "simple",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["dataProxmoxVirtualEnvironmentSdnZonesAll"] = 
        ///         {
        ///             { "zones", all.Apply(getZonesResult =&gt; getZonesResult.Zones) },
        ///         },
        ///         ["dataProxmoxVirtualEnvironmentSdnZonesFiltered"] = 
        ///         {
        ///             { "evpn_zones", evpnOnly.Apply(getZonesResult =&gt; getZonesResult.Zones) },
        ///             { "simple_zones", simpleOnly.Apply(getZonesResult =&gt; getZonesResult.Zones) },
        ///         },
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetZonesResult> Invoke(GetZonesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetZonesResult>("proxmoxve:Sdn/getZones:getZones", args ?? new GetZonesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetZonesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Filter zones by type (simple, vlan, qinq, vxlan, evpn).
        /// </summary>
        [Input("type")]
        public string? Type { get; set; }

        public GetZonesArgs()
        {
        }
        public static new GetZonesArgs Empty => new GetZonesArgs();
    }

    public sealed class GetZonesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Filter zones by type (simple, vlan, qinq, vxlan, evpn).
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public GetZonesInvokeArgs()
        {
        }
        public static new GetZonesInvokeArgs Empty => new GetZonesInvokeArgs();
    }


    [OutputType]
    public sealed class GetZonesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Filter zones by type (simple, vlan, qinq, vxlan, evpn).
        /// </summary>
        public readonly string? Type;
        /// <summary>
        /// List of SDN zones.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetZonesZoneResult> Zones;

        [OutputConstructor]
        private GetZonesResult(
            string id,

            string? type,

            ImmutableArray<Outputs.GetZonesZoneResult> zones)
        {
            Id = id;
            Type = type;
            Zones = zones;
        }
    }
}
