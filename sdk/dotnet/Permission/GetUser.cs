// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ProxmoxVE.Permission
{
    public static class GetUser
    {
        public static Task<GetUserResult> InvokeAsync(GetUserArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetUserResult>("proxmoxve:Permission/getUser:getUser", args ?? new GetUserArgs(), options.WithVersion());
    }


    public sealed class GetUserArgs : Pulumi.InvokeArgs
    {
        [Input("userId", required: true)]
        public string UserId { get; set; } = null!;

        public GetUserArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetUserResult
    {
        public readonly ImmutableArray<Outputs.GetUserAclResult> Acls;
        public readonly string Comment;
        public readonly string Email;
        public readonly bool Enabled;
        public readonly string ExpirationDate;
        public readonly string FirstName;
        public readonly ImmutableArray<string> Groups;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Keys;
        public readonly string LastName;
        public readonly string UserId;

        [OutputConstructor]
        private GetUserResult(
            ImmutableArray<Outputs.GetUserAclResult> acls,

            string comment,

            string email,

            bool enabled,

            string expirationDate,

            string firstName,

            ImmutableArray<string> groups,

            string id,

            string keys,

            string lastName,

            string userId)
        {
            Acls = acls;
            Comment = comment;
            Email = email;
            Enabled = enabled;
            ExpirationDate = expirationDate;
            FirstName = firstName;
            Groups = groups;
            Id = id;
            Keys = keys;
            LastName = lastName;
            UserId = userId;
        }
    }
}
