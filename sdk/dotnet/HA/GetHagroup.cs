// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ProxmoxVE.HA
{
    public static class GetHAGroup
    {
        /// <summary>
        /// Retrieves information about a specific High Availability group.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using ProxmoxVE = Pulumi.ProxmoxVE;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var all = ProxmoxVE.HA.GetHAGroups.Invoke();
        /// 
        ///     var example = .Select(__value =&gt; 
        ///     {
        ///         return ProxmoxVE.HA.GetHAGroup.Invoke(new()
        ///         {
        ///             Group = __value,
        ///         });
        ///     }).ToList();
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["proxmoxVirtualEnvironmentHagroupsFull"] = example,
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetHAGroupResult> InvokeAsync(GetHAGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetHAGroupResult>("proxmoxve:HA/getHAGroup:getHAGroup", args ?? new GetHAGroupArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves information about a specific High Availability group.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using ProxmoxVE = Pulumi.ProxmoxVE;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var all = ProxmoxVE.HA.GetHAGroups.Invoke();
        /// 
        ///     var example = .Select(__value =&gt; 
        ///     {
        ///         return ProxmoxVE.HA.GetHAGroup.Invoke(new()
        ///         {
        ///             Group = __value,
        ///         });
        ///     }).ToList();
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["proxmoxVirtualEnvironmentHagroupsFull"] = example,
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetHAGroupResult> Invoke(GetHAGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetHAGroupResult>("proxmoxve:HA/getHAGroup:getHAGroup", args ?? new GetHAGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetHAGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The identifier of the High Availability group to read.
        /// </summary>
        [Input("group", required: true)]
        public string Group { get; set; } = null!;

        public GetHAGroupArgs()
        {
        }
        public static new GetHAGroupArgs Empty => new GetHAGroupArgs();
    }

    public sealed class GetHAGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The identifier of the High Availability group to read.
        /// </summary>
        [Input("group", required: true)]
        public Input<string> Group { get; set; } = null!;

        public GetHAGroupInvokeArgs()
        {
        }
        public static new GetHAGroupInvokeArgs Empty => new GetHAGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetHAGroupResult
    {
        /// <summary>
        /// The comment associated with this group
        /// </summary>
        public readonly string Comment;
        /// <summary>
        /// The identifier of the High Availability group to read.
        /// </summary>
        public readonly string Group;
        /// <summary>
        /// The unique identifier of this resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A flag that indicates that failing back to a higher priority node is disabled for this HA group.
        /// </summary>
        public readonly bool NoFailback;
        /// <summary>
        /// The member nodes for this group. They are provided as a map, where the keys are the node names and the values represent their priority: integers for known priorities or `null` for unset priorities.
        /// </summary>
        public readonly ImmutableDictionary<string, int> Nodes;
        /// <summary>
        /// A flag that indicates that other nodes may not be used to run resources associated to this HA group.
        /// </summary>
        public readonly bool Restricted;

        [OutputConstructor]
        private GetHAGroupResult(
            string comment,

            string group,

            string id,

            bool noFailback,

            ImmutableDictionary<string, int> nodes,

            bool restricted)
        {
            Comment = comment;
            Group = group;
            Id = id;
            NoFailback = noFailback;
            Nodes = nodes;
            Restricted = restricted;
        }
    }
}
