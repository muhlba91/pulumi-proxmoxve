// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ProxmoxVE.Acme
{
    public static class GetAccounts
    {
        /// <summary>
        /// Retrieves the list of ACME accounts.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using ProxmoxVE = Pulumi.ProxmoxVE;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = ProxmoxVE.Acme.GetAccounts.Invoke();
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["dataProxmoxVirtualEnvironmentAcmeAccounts"] = example.Apply(getAccountsResult =&gt; getAccountsResult.Accounts),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetAccountsResult> InvokeAsync(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAccountsResult>("proxmoxve:Acme/getAccounts:getAccounts", InvokeArgs.Empty, options.WithDefaults());

        /// <summary>
        /// Retrieves the list of ACME accounts.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using ProxmoxVE = Pulumi.ProxmoxVE;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = ProxmoxVE.Acme.GetAccounts.Invoke();
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["dataProxmoxVirtualEnvironmentAcmeAccounts"] = example.Apply(getAccountsResult =&gt; getAccountsResult.Accounts),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetAccountsResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAccountsResult>("proxmoxve:Acme/getAccounts:getAccounts", InvokeArgs.Empty, options.WithDefaults());

        /// <summary>
        /// Retrieves the list of ACME accounts.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using ProxmoxVE = Pulumi.ProxmoxVE;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = ProxmoxVE.Acme.GetAccounts.Invoke();
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["dataProxmoxVirtualEnvironmentAcmeAccounts"] = example.Apply(getAccountsResult =&gt; getAccountsResult.Accounts),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetAccountsResult> Invoke(InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAccountsResult>("proxmoxve:Acme/getAccounts:getAccounts", InvokeArgs.Empty, options.WithDefaults());
    }


    [OutputType]
    public sealed class GetAccountsResult
    {
        /// <summary>
        /// The identifiers of the ACME accounts.
        /// </summary>
        public readonly ImmutableArray<string> Accounts;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetAccountsResult(
            ImmutableArray<string> accounts,

            string id)
        {
            Accounts = accounts;
            Id = id;
        }
    }
}
