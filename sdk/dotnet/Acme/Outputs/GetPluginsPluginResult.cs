// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ProxmoxVE.Acme.Outputs
{

    [OutputType]
    public sealed class GetPluginsPluginResult
    {
        /// <summary>
        /// API plugin name.
        /// </summary>
        public readonly string Api;
        /// <summary>
        /// DNS plugin data.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Data;
        /// <summary>
        /// Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.
        /// </summary>
        public readonly string Digest;
        /// <summary>
        /// ACME Plugin ID name.
        /// </summary>
        public readonly string Plugin;
        /// <summary>
        /// ACME challenge type (dns, standalone).
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Extra delay in seconds to wait before requesting validation. Allows to cope with a long TTL of DNS records (0 - 172800).
        /// </summary>
        public readonly int ValidationDelay;

        [OutputConstructor]
        private GetPluginsPluginResult(
            string api,

            ImmutableDictionary<string, string> data,

            string digest,

            string plugin,

            string type,

            int validationDelay)
        {
            Api = api;
            Data = data;
            Digest = digest;
            Plugin = plugin;
            Type = type;
            ValidationDelay = validationDelay;
        }
    }
}
