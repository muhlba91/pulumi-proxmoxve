// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ProxmoxVE
{
    /// <summary>
    /// Manages the time for a specific node.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using ProxmoxVE = Pulumi.ProxmoxVE;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var firstNodeTime = new ProxmoxVE.Time("firstNodeTime", new()
    ///     {
    ///         NodeName = "first-node",
    ///         TimeZone = "UTC",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Instances can be imported using the `node_name`, e.g., bash
    /// 
    /// ```sh
    ///  $ pulumi import proxmoxve:index/time:Time first_node first-node
    /// ```
    /// </summary>
    [ProxmoxVEResourceType("proxmoxve:index/time:Time")]
    public partial class Time : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The node's local time.
        /// </summary>
        [Output("localTime")]
        public Output<string> LocalTime { get; private set; } = null!;

        /// <summary>
        /// A node name.
        /// </summary>
        [Output("nodeName")]
        public Output<string> NodeName { get; private set; } = null!;

        /// <summary>
        /// The node's time zone.
        /// </summary>
        [Output("timeZone")]
        public Output<string> TimeZone { get; private set; } = null!;

        /// <summary>
        /// The node's local time formatted as UTC.
        /// </summary>
        [Output("utcTime")]
        public Output<string> UtcTime { get; private set; } = null!;


        /// <summary>
        /// Create a Time resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Time(string name, TimeArgs args, CustomResourceOptions? options = null)
            : base("proxmoxve:index/time:Time", name, args ?? new TimeArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Time(string name, Input<string> id, TimeState? state = null, CustomResourceOptions? options = null)
            : base("proxmoxve:index/time:Time", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/muhlba91/pulumi-proxmoxve",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Time resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Time Get(string name, Input<string> id, TimeState? state = null, CustomResourceOptions? options = null)
        {
            return new Time(name, id, state, options);
        }
    }

    public sealed class TimeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A node name.
        /// </summary>
        [Input("nodeName", required: true)]
        public Input<string> NodeName { get; set; } = null!;

        /// <summary>
        /// The node's time zone.
        /// </summary>
        [Input("timeZone", required: true)]
        public Input<string> TimeZone { get; set; } = null!;

        public TimeArgs()
        {
        }
        public static new TimeArgs Empty => new TimeArgs();
    }

    public sealed class TimeState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The node's local time.
        /// </summary>
        [Input("localTime")]
        public Input<string>? LocalTime { get; set; }

        /// <summary>
        /// A node name.
        /// </summary>
        [Input("nodeName")]
        public Input<string>? NodeName { get; set; }

        /// <summary>
        /// The node's time zone.
        /// </summary>
        [Input("timeZone")]
        public Input<string>? TimeZone { get; set; }

        /// <summary>
        /// The node's local time formatted as UTC.
        /// </summary>
        [Input("utcTime")]
        public Input<string>? UtcTime { get; set; }

        public TimeState()
        {
        }
        public static new TimeState Empty => new TimeState();
    }
}
