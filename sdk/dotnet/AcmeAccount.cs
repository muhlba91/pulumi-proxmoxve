// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ProxmoxVE
{
    /// <summary>
    /// Manages an ACME account in a Proxmox VE cluster.
    /// 
    /// &gt; This resource requires `root@pam` authentication.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using ProxmoxVE = Pulumi.ProxmoxVE;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new ProxmoxVE.AcmeAccount("example", new()
    ///     {
    ///         Contact = "example@email.com",
    ///         Directory = "https://acme-staging-v02.api.letsencrypt.org/directory",
    ///         Tos = "https://letsencrypt.org/documents/LE-SA-v1.3-September-21-2022.pdf",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// #!/usr/bin/env sh
    /// 
    /// ACME accounts can be imported using their name, e.g.:
    /// 
    /// ```sh
    /// $ pulumi import proxmoxve:index/acmeAccount:AcmeAccount example example
    /// ```
    /// </summary>
    [ProxmoxVEResourceType("proxmoxve:index/acmeAccount:AcmeAccount")]
    public partial class AcmeAccount : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The contact email addresses.
        /// </summary>
        [Output("contact")]
        public Output<string> Contact { get; private set; } = null!;

        /// <summary>
        /// The timestamp of the ACME account creation.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// The URL of the ACME CA directory endpoint.
        /// </summary>
        [Output("directory")]
        public Output<string?> Directory { get; private set; } = null!;

        /// <summary>
        /// The HMAC key for External Account Binding.
        /// </summary>
        [Output("eabHmacKey")]
        public Output<string?> EabHmacKey { get; private set; } = null!;

        /// <summary>
        /// The Key Identifier for External Account Binding.
        /// </summary>
        [Output("eabKid")]
        public Output<string?> EabKid { get; private set; } = null!;

        /// <summary>
        /// The location of the ACME account.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The ACME account config file name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The URL of CA TermsOfService - setting this indicates agreement.
        /// </summary>
        [Output("tos")]
        public Output<string?> Tos { get; private set; } = null!;


        /// <summary>
        /// Create a AcmeAccount resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AcmeAccount(string name, AcmeAccountArgs args, CustomResourceOptions? options = null)
            : base("proxmoxve:index/acmeAccount:AcmeAccount", name, args ?? new AcmeAccountArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AcmeAccount(string name, Input<string> id, AcmeAccountState? state = null, CustomResourceOptions? options = null)
            : base("proxmoxve:index/acmeAccount:AcmeAccount", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/muhlba91/pulumi-proxmoxve",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AcmeAccount resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AcmeAccount Get(string name, Input<string> id, AcmeAccountState? state = null, CustomResourceOptions? options = null)
        {
            return new AcmeAccount(name, id, state, options);
        }
    }

    public sealed class AcmeAccountArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The contact email addresses.
        /// </summary>
        [Input("contact", required: true)]
        public Input<string> Contact { get; set; } = null!;

        /// <summary>
        /// The URL of the ACME CA directory endpoint.
        /// </summary>
        [Input("directory")]
        public Input<string>? Directory { get; set; }

        /// <summary>
        /// The HMAC key for External Account Binding.
        /// </summary>
        [Input("eabHmacKey")]
        public Input<string>? EabHmacKey { get; set; }

        /// <summary>
        /// The Key Identifier for External Account Binding.
        /// </summary>
        [Input("eabKid")]
        public Input<string>? EabKid { get; set; }

        /// <summary>
        /// The ACME account config file name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The URL of CA TermsOfService - setting this indicates agreement.
        /// </summary>
        [Input("tos")]
        public Input<string>? Tos { get; set; }

        public AcmeAccountArgs()
        {
        }
        public static new AcmeAccountArgs Empty => new AcmeAccountArgs();
    }

    public sealed class AcmeAccountState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The contact email addresses.
        /// </summary>
        [Input("contact")]
        public Input<string>? Contact { get; set; }

        /// <summary>
        /// The timestamp of the ACME account creation.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// The URL of the ACME CA directory endpoint.
        /// </summary>
        [Input("directory")]
        public Input<string>? Directory { get; set; }

        /// <summary>
        /// The HMAC key for External Account Binding.
        /// </summary>
        [Input("eabHmacKey")]
        public Input<string>? EabHmacKey { get; set; }

        /// <summary>
        /// The Key Identifier for External Account Binding.
        /// </summary>
        [Input("eabKid")]
        public Input<string>? EabKid { get; set; }

        /// <summary>
        /// The location of the ACME account.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The ACME account config file name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The URL of CA TermsOfService - setting this indicates agreement.
        /// </summary>
        [Input("tos")]
        public Input<string>? Tos { get; set; }

        public AcmeAccountState()
        {
        }
        public static new AcmeAccountState Empty => new AcmeAccountState();
    }
}
