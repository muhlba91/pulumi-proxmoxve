---
name: Release

on:
  push:
    tags:
      - "v*"

env:
  PROVIDER: proxmoxve
  GO111MODULE: "on"
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  NUGET_PUBLISH_KEY: ${{ secrets.NUGET_PUBLISH_KEY }}
  PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
  TRAVIS_OS_NAME: linux

jobs:
  publish_provider:
    runs-on: ubuntu-latest
    name: Publish Provider
    strategy:
      max-parallel: 4
      matrix:
        go-version: [1.19.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: "${{ matrix.go-version }}"

      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@v1.10.0
        with:
          repo: pulumi/pulumictl
      - name: Install Pulumi CLI
        uses: pulumi/setup-pulumi@v2

      - name: Release via GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          args: -p 2 release --rm-dist --timeout 60m0s
          version: latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish_sdk:
    runs-on: ubuntu-latest
    name: Publish SDK
    needs:
      - publish_provider
    strategy:
      max-parallel: 4
      matrix:
        go-version: [1.19.x]
        node-version: [16]
        dotnet-version: [3.1.301]
        python-version: [3.9]
        language:
          - go
          - nodejs
          - python
          - dotnet

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: "${{ matrix.go-version }}"

      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@v1.10.0
        with:
          repo: pulumi/pulumictl
      - name: Install Pulumi CLI
        uses: pulumi/setup-pulumi@v2

      - name: Setup DotNet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "${{ matrix.dotnet-version }}"
        if: matrix.language == 'dotnet'
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "${{ matrix.python-version }}"
        if: matrix.language == 'python'
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "${{ matrix.node-version }}"
        if: matrix.language == 'nodejs'

      - name: Install Plugins
        run: make install_plugins
      - name: Update Path
        run: echo "${{ github.workspace }}/bin" >> $GITHUB_PATH

      - name: Build SDK
        run: make build_${{ matrix.language }}

      - name: Publish .NET SDK
        run: find "${{ github.workspace }}/sdk/dotnet/bin/Debug/" -name 'Pulumi.*.nupkg' -exec dotnet nuget push -k "${{ secrets.NUGET_PUBLISH_KEY }}" -s https://api.nuget.org/v3/index.json {} ';'
        if: matrix.language == 'dotnet'

      - name: Publish Python SDK
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: "${{ secrets.PYPI_PASSWORD }}"
          skip-existing: true
          packages-dir: "${{ github.workspace }}/sdk/python/bin/dist/"
        if: matrix.language == 'python'

      - name: Copy Over NodeJS Scripts
        run: cp -rf ${{ github.workspace }}/sdk/nodejs/scripts ${{ github.workspace }}/sdk/nodejs/bin/
        if: matrix.language == 'nodejs'
      - name: Publish NodeJS SDK
        uses: JS-DevTools/npm-publish@v1
        with:
          package: ./sdk/nodejs/bin/package.json
          access: public
          token: ${{ secrets.NPM_TOKEN }}
        if: matrix.language == 'nodejs'

  tag_sdk:
    runs-on: ubuntu-latest
    name: Tag SDK Release
    needs:
      - publish_sdk

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: "${{ secrets.GH_PUSH_TOKEN }}"
      - name: Setup Git
        run: |
          git config --local user.email "${{ env.GITHUB_ACTION }}+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

      - name: Tag SDK Version
        run: |
          git tag -a sdk/${{ github.ref_name }} -m sdk/${{ github.ref_name }}
      - name: Push to Repository
        run: |
          git push origin sdk/${{ github.ref_name }}
